{"version":3,"sources":["webpack:///static/js/54.cbd5a396ce69f9367a35.js","webpack:///./src/components/admin/index.vue","webpack:///index.vue?84e2","webpack:///./~/._raphael@2.2.7@raphael/raphael.js","webpack:///./src/components/admin/index.vue?a687","webpack:///./~/._vue-morris@0.0.8@vue-morris/dist/vue-morris.min.js"],"names":["webpackJsonp","269","module","exports","__webpack_require__","Component","388","__webpack_exports__","Object","defineProperty","value","global","$","__WEBPACK_IMPORTED_MODULE_0_raphael_raphael__","__WEBPACK_IMPORTED_MODULE_0_raphael_raphael___default","n","__WEBPACK_IMPORTED_MODULE_1_vue_morris__","Raphael","a","name","data","donutData","label","components","DonutChart","mounted","on","ibox","this","closest","button","find","slideToggle","toggleClass","setTimeout","resize","methods","call","542","root","factory","modules","moduleId","installedModules","id","loaded","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","R","apply","eve","first","is","array","_engine","create","splice","nu","add","args","Array","prototype","slice","arguments","length","f","pop","clone","obj","res","constructor","key","has","repush","item","i","ii","push","cacher","scope","postprocessor","newf","arg","join","cache","count","shift","clrToString","hex","catmullRom2bezier","crp","z","d","iLen","x","y","base3","t","p1","p2","p3","p4","bezlen","x1","y1","x2","y2","x3","y3","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","math","sqrt","getTatLen","ll","l","step","t2","abs","intersect","mmax","mmin","nx","ny","denominator","px","py","px2","toFixed","py2","interHelper","bez1","bez2","justCount","bbox1","bezierBBox","bbox2","isBBoxIntersect","l1","l2","n1","n2","dots1","dots2","xy","findDotsAtSegment","concat","j","di","di1","dj","dj1","ci","cj","t1","interPathHelper","path1","path2","_path2curve","x1m","y1m","x2m","y2m","pi","jj","pj","intr","k","kk","segment1","segment2","Matrix","b","e","x_y_w_h","S","width","height","CubicBezierAtTime","p1x","p1y","p2x","p2y","duration","sampleCurveX","ax","bx","cx","solveCurveX","epsilon","t0","d2","cy","by","ay","Animation","anim","ms","percents","newAnim","times","attr","toFloat","sort","sortByNumber","top","runAnimation","element","percent","status","totalOrigin","params","isInAnim","isInAnimSet","next","prev","timestamp","from","to","diff","animationElements","el","initstatus","start","Date","availableAnimAttrs","paper","customAttributes","availableAttrs","getRGB","toColour","r","g","pathes","path2curve","toPath","_","eq","equaliseTransform","real","matrix","to2","transform","getBBox","extractTransform","values","Str","split","separator","from2","easing","easyeasy","easing_formulas","match","bezierrg","curve","pipe","del","stop","callback","repeat","origin","animation","requestAnimFrame","stopAnimation","version","paperproto","elements","circle","rect","path","ellipse","text","image","formatrg","doc","document","win","window","oldRaphael","was","Paper","ca","supportsTouch","DocumentTouch","E","String","events","touchMap","mousedown","mousemove","mouseup","lowerCase","toLowerCase","Math","max","min","pow","PI","objectToString","toString","colourRegExp","_ISURL","isnan","NaN","Infinity","-Infinity","round","parseFloat","toInt","parseInt","upperCase","toUpperCase","_availableAttrs","arrow-end","arrow-start","blur","clip-rect","cursor","fill","fill-opacity","font","font-family","font-size","font-style","font-weight","gradient","href","letter-spacing","opacity","rx","ry","src","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","target","text-anchor","title","class","_availableAnimAttrs","commaSpaces","hsrg","hs","rg","p2s","pathCommand","tCommand","pathValues","eldata","_radial_gradient","rectPath","_rectPath","w","h","ellipsePath","getPath","_getPath","attrs","bbox","_getBBox","set","mapPath","pathi","_g","type","SVGAngle","implementation","hasFeature","createElement","innerHTML","firstChild","style","behavior","adj","svg","vml","_Paper","fn","_id","o","isArray","angle","atan2","rad","deg","snapTo","tolerance","rem","createUUID","uuidRegEx","uuidReplacer","replace","random","setWindow","newwin","initWin","toHex","color","bod","trim","docum","ActiveXObject","write","close","body","createPopup","range","createTextRange","queryCommandValue","display","appendChild","defaultView","getComputedStyle","getPropertyValue","hsbtoString","s","hsltoString","rgbtoString","prepareRGB","clr","packageRGB","rgb","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","v","G","B","X","C","H","V","L","M","_path2string","_preload","img","cssText","onload","removeChild","onerror","colour","indexOf","error","substring","charAt","red","green","blue","hsb","hsl","getColor","reset","parsePathString","pathString","pth","paths","arr","pathClone","paramCounts","q","parseTransformString","TString","ps","sleep","c1x","c1y","c2x","c2y","t13","t12","t3","mx","my","alpha","end","curveDim","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","methodname","pathDimensions","Y","dim","xmin","ymin","xmax","ymax","bb","pathArray","pathToRelative","_pathToRelative","rel","pa","len","pathToAbsolute","_pathToAbsolute","crz","dots","l2c","q2c","a2c","large_arc_flag","sweep_flag","recursive","_120","rotate","cos","sin","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","dot","qx","qy","attrs2","processPath","pcom","tq","T","Q","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","tear","_parseDots","par","offset","_tear","bottom","toMatrix","_tofront","_toback","_insertafter","el2","_insertbefore","transformPath","_extractTransform","tstr","tdata","dx","dy","sx","sy","tlen","command","absolute","inver","invert","translate","scale","dirtyT","getEmpty","_equaliseTransform","tt1","tt2","maxlength","_getContainer","container","getElementById","tagName","pixelWidth","offsetWidth","pixelHeight","offsetHeight","matrixproto","norm","normalize","mag","out","me","get","fromCharCode","toFilter","row","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","shorter","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","getEventPosition","scrollY","documentElement","scrollTop","scrollX","scrollLeft","clientX","clientY","addEvent","addEventListener","pos","_f","olde","targetTouches","removeEventListener","attachEvent","event","detachEvent","drag","dragMove","dragi","touches","touch","identifier","_drag","node","nextSibling","parent","parentNode","opera","getElementByPoint","insertBefore","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","elproto","eventName","unbind","shape","removeData","getData","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","onDragOver","undrag","unmousedown","__set__","format","itemsArray","Set","setStart","setFinish","getSize","canvas","setSize","setViewBox","fit","raphael","getOffset","elem","box","getBoundingClientRect","ownerDocument","docElem","clientTop","clientLeft","pageYOffset","left","pageXOffset","elementFromPoint","so","sr","createSVGRect","hits","getIntersectionList","getById","raphaelid","getElementsByBBox","forEach","bot","thisArg","getElementsByPoint","isPointInside","rp","realPath","isWithoutTransform","removed","dirty","bboxwt","glow","offsetx","offsety","getPointAtSegmentLength","getLengthFactory","istotal","subpath","onlystart","point","sp","subpaths","getTotalLength","getPointAtLength","getSubpathsAtLength","getSubpath","ef","linear","<",">","<>","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Now","paused","now","time","that","init","upto255","animateWith","onAnimation","delay","floor","json","100","lastKey","animate","setTime","pause","resume","items","setproto","method","clear","index","insertion","tail","todel","arglen","exclude","collector","insertAfter","glowConfig","ret","shape2","index2","registerFont","face","fonts","fontcopy","glyphs","family","prop","glyph","getFont","weight","stretch","normal","bold","lighter","bolder","RegExp","fontName","test","thefont","print","string","size","letter_spacing","line_spacing","letters","notfirst","lineHeight","shifty","descent","curr","token","str","fullfill","tokenRegex","objNotationRegex","replacer","all","quote","quotedName","isFunc","ninja","st","isLoaded","readyState","glob","current_event","comaseparator","numsort","firstDefined","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","zIndex","_events","nes","names","es","sep","exist","hasOwnProperty","nt","subname","cur","nts","off","funcs","once","xlink","markers","block","classic","diamond","open","oval","markerCounter","setAttributeNS","setAttribute","createElementNS","webkitTapHighlightColor","addGradientFill","fx","fy","SVG","_fx","_fy","dir","isNaN","vector","defs","gradientTransform","stop-color","stop-opacity","isFinite","fillurl","fillOpacity","isIE9or10","mode","documentMode","location","protocol","host","pathname","search","updatePosition","pattern","patternTransform","addArrow","isEnd","refX","se","arrows","endPath","endMarker","startPath","startMarker","pathId","markerId","use","marker","getElementsByTagName","markerHeight","markerWidth","orient","refY","xlink:href","delta","startdx","enddx","dasharray","-",".","-.","-..",". ","- ","--","- .","--.","--..","addDashes","butt","square","dashes","setFillAndStroke","vis","visibility","att","nodeValue","val","createTextNode","pn","hl","clip","rc","clip-path","getAttribute","startString","endString","isURL","ig","patternUnits","stops","cssrule","tuneText","fontSize","tspan","texts","tspans","dif","getRealNode","Element","sw","hide","show","remove","containerStyle","canvasHidden","parentElement","clientWidth","clientHeight","def","subkey","toFront","toBack","afterNode","beforeNode","fltr","stdDeviation","_blur","filter","removeAttribute","preserveAspectRatio","_viewBox","con","Error","isFloating","cnvs","css","xmlns","xmlns:xlink","_left","_top","renderfix","vb","paperSize","aspectRatio","_vbSize","viewBox","getScreenCTM","createSVGMatrix","desc","map","Z","bites","blurregexp","cssDot","zoom","pathTypes","ovalTypes","path2vml","total","vals","isMove","compensation","setCoords","fillpos","flip","kx","ky","coordsize","rotation","coordorigin","fillsize","position","newpath","isOval","div","clipRect","dstyle","textpath","textpathStyle","fontFamily","fontWeight","fontStyle","createNode","newstroke","strokeColor","joinstyle","miterlimit","endcap","dashstyle","span","brect","W","right","dirtyattrs","dd","bbx","fxfy","color2","clrs","colors","focus","focussize","focusposition","_oid","oldt","vbs","_viewBoxShift","vbt","skew","isGrad","isPatt","bbt","auxGetBBox","runtimeStyle","margin","Path","textpathok","cs","styleSheets","createStyleSheet","addRule","namespaces","rvml","562","render","_vm","_h","$createElement","_c","_self","staticClass","_m","_v","nativeOn","click","$event","collapse","staticRenderFns","role","data-toggle","aria-controls","633","jQuery","configurable","enumerable","__esModule","default","toObject","JSON","parse","toBoolean","required","barColors","xkey","ykeys","labels","hoverCallback","Function","axes","Boolean","hideHover","stacked","grid","gridTextColor","gridTextSize","Number","gridTextFamily","gridTextWeight","formatter","lineColors","xLabels","lineWidth","pointSize","pointFillColors","pointStrokeColors","smooth","parseTime","postUnits","preUnits","dateFormat","xLabelFormat","yLabelFormat","xLabelAngle","goals","goalStrokeWidth","goalLineColors","eventStrokeWidth","eventLineColors","behaveLikeLine","u","addOption","addOptionAsObject","bar","props","donut","line","area","__super__","Morris","EventEmitter","handlers","fire","commas","pad2","Grid","resizeHandler","options","extend","gridDefaults","defaults","units","elementWidth","elementHeight","selectFrom","setData","bind","pageX","hitTest","_x","selectionRect","pageY","changedTouches","rangeSelect","innerHeight","rangeSelectColor","startRange","endRange","timeoutId","clearTimeout","postInit","gridLineColor","gridStrokeWidth","numLines","padding","cumulative","parseDate","yboundary","autoGridLines","redraw","log","ceil","_calc","measureText","yAxisFormat","calc","transY","transX","drawGrid","drawGoals","drawEvents","draw","drawYAxisLabel","drawGridLine","drawGoal","drawEvent","getTime","getDay","setMonth","UTC","Hover","append","update","html","moveTo","innerWidth","outerWidth","outerHeight","Line","hilight","onHoverOut","onHoverMove","onGridClick","pointStrokeWidths","xLabelMargin","calcPoints","generatePaths","_y","_ymax","displayHoverForRow","hoverContentForRow","colorFor","createPath","drawXAxis","drawSeries","drawXAxisLabel","labelSeries","reverse","seriesPoints","_drawLineFor","_drawPointFor","drawLinePoint","drawLinePath","gradients","prevHilight","pointShrinkSeries","pointGrowSeries","lineWidthForSeries","pointSizeForSeries","pointStrokeWidthForSeries","pointStrokeColorForSeries","LABEL_SPECS","AUTO_LABEL_ORDER","second","fmt","incr","getFullYear","getMonth","getDate","getHours","getMinutes","setUTCMinutes","getUTCMinutes","getSeconds","setUTCSeconds","getUTCSeconds","decade","setFullYear","year","month","week","setDate","day","hour","30min","15min","10min","5min","minute","30sec","15sec","10sec","5sec","Area","_drawFillFor","drawFilledPath","fillForSeries","Bar","barSizeRatio","barGap","barOpacity","barRadius","calcBars","xAxisLabelTopPadding","barSize","bars","verticalGridCondition","drawBar","verticalGridColor","verticalGridOpacity","roundedRect","Donut","select","backgroundColor","labelColor","segments","DonutSegment","text1","drawEmptyDonutLabel","text2","deselect","setLabels","inner","outer","sin_p0","cos_p0","sin_p1","cos_p1","is_long","calcSegment","selectedPath","calcArc","calcArcPoints","arc","drawDonutArc","drawDonutSegment","selected","_scopeId","computed","keys","esModule","locals","mixins","chart","watch","$nextTick","BarChart","LineChart","AreaChart","refs","parts","media","sourceMap","insertAt","singleton","styleSheet","childNodes","sources","btoa","unescape","encodeURIComponent","stringify","navigator","userAgent","head","DEBUG"],"mappings":"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","file":"static/js/54.cbd5a396ce69f9367a35.js","sourcesContent":["webpackJsonp([54],{\n\n/***/ 269:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(135)(\n  /* script */\n  __webpack_require__(388),\n  /* template */\n  __webpack_require__(562),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 388:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global, $) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_raphael_raphael__ = __webpack_require__(542);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_raphael_raphael___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_raphael_raphael__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_morris__ = __webpack_require__(633);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_morris___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue_morris__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import '../../assets/css/plugins/morris/morris-0.4.3.min.css';\n// import Raphael from '../../assets/js/plugins/morris/raphael.js'\n// import Morri from '../../assets/js/plugins/morris/morris.js'\n\nglobal.Raphael = __WEBPACK_IMPORTED_MODULE_0_raphael_raphael___default.a;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n\t\tname: 'index',\n\t\tdata: function data() {\n\t\t\t\treturn {\n\t\t\t\t\t\tdonutData: [{ label: 'Trader', value: 20125 }, { label: 'IB', value: 2587 }, { label: 'MIB', value: 151 }, { label: 'PIB', value: 36\n\t\t\t\t\t\t\t\t//  resize:true 设置自动调整大小会报错冲突\n\t\t\t\t\t\t}]\n\t\t\t\t};\n\t\t},\n\n\t\tcomponents: {\n\t\t\t\tRaphael: __WEBPACK_IMPORTED_MODULE_0_raphael_raphael___default.a,\n\t\t\t\tDonutChart: __WEBPACK_IMPORTED_MODULE_1_vue_morris__[\"DonutChart\"]\n\t\t},\n\t\tmounted: function mounted() {\n\t\t\t\t$('.collapse-link').on('click', function () {\n\t\t\t\t\t\tvar ibox = $(this).closest('div.ibox');\n\t\t\t\t\t\tvar button = $(this).find('i');\n\t\t\t\t\t\tvar content = ibox.find('div.ibox-content');\n\t\t\t\t\t\tcontent.slideToggle(200);\n\t\t\t\t\t\tbutton.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\n\t\t\t\t\t\tibox.toggleClass('').toggleClass('border-bottom');\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tibox.resize();\n\t\t\t\t\t\t\t\t// 会报错-->raphael\n\t\t\t\t\t\t\t\tibox.find('[id^=map-]').resize();\n\t\t\t\t\t\t}, 50);\n\t\t\t\t});\n\t\t},\n\t\tmethods: {}\n});\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(74), __webpack_require__(9)))\n\n/***/ }),\n\n/***/ 542:\n/***/ (function(module, exports, __webpack_require__) {\n\n// ┌───────────────────────────────────────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël 2.2.0 - JavaScript Vector Library                                                             │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright © 2008-2016 Dmitry Baranovskiy (http://raphaeljs.com)                                       │ \\\\\n// │ Copyright © 2008-2016 Sencha Labs (http://sencha.com)                                                 │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Licensed under the MIT (https://github.com/DmitryBaranovskiy/raphael/blob/master/license.txt) license.│ \\\\\n// └───────────────────────────────────────────────────────────────────────────────────────────────────────┘ \\\\\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Raphael\"] = factory();\n\telse\n\t\troot[\"Raphael\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(R) {\n\n\t    return R;\n\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(eve) {\n\n\t    /*\\\n\t     * Raphael\n\t     [ method ]\n\t     **\n\t     * Creates a canvas object on which to draw.\n\t     * You must do this first, as all future calls to drawing methods\n\t     * from this instance will be bound to this canvas.\n\t     > Parameters\n\t     **\n\t     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\n\t     - width (number)\n\t     - height (number)\n\t     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n\t     * or\n\t     - x (number)\n\t     - y (number)\n\t     - width (number)\n\t     - height (number)\n\t     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n\t     * or\n\t     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\n\t     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n\t     * or\n\t     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\n\t     = (object) @Paper\n\t     > Usage\n\t     | // Each of the following examples create a canvas\n\t     | // that is 320px wide by 200px high.\n\t     | // Canvas is created at the viewport’s 10,50 coordinate.\n\t     | var paper = Raphael(10, 50, 320, 200);\n\t     | // Canvas is created at the top left corner of the #notepad element\n\t     | // (or its top right corner in dir=\"rtl\" elements)\n\t     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\n\t     | // Same as above\n\t     | var paper = Raphael(\"notepad\", 320, 200);\n\t     | // Image dump\n\t     | var set = Raphael([\"notepad\", 320, 200, {\n\t     |     type: \"rect\",\n\t     |     x: 10,\n\t     |     y: 10,\n\t     |     width: 25,\n\t     |     height: 25,\n\t     |     stroke: \"#f00\"\n\t     | }, {\n\t     |     type: \"text\",\n\t     |     x: 30,\n\t     |     y: 40,\n\t     |     text: \"Dump\"\n\t     | }]);\n\t    \\*/\n\t    function R(first) {\n\t        if (R.is(first, \"function\")) {\n\t            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\n\t        } else if (R.is(first, array)) {\n\t            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\n\t        } else {\n\t            var args = Array.prototype.slice.call(arguments, 0);\n\t            if (R.is(args[args.length - 1], \"function\")) {\n\t                var f = args.pop();\n\t                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\n\t                    f.call(R._engine.create[apply](R, args));\n\t                });\n\t            } else {\n\t                return R._engine.create[apply](R, arguments);\n\t            }\n\t        }\n\t    }\n\t    R.version = \"2.2.0\";\n\t    R.eve = eve;\n\t    var loaded,\n\t        separator = /[, ]+/,\n\t        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\n\t        formatrg = /\\{(\\d+)\\}/g,\n\t        proto = \"prototype\",\n\t        has = \"hasOwnProperty\",\n\t        g = {\n\t            doc: document,\n\t            win: window\n\t        },\n\t        oldRaphael = {\n\t            was: Object.prototype[has].call(g.win, \"Raphael\"),\n\t            is: g.win.Raphael\n\t        },\n\t        Paper = function () {\n\t            /*\\\n\t             * Paper.ca\n\t             [ property (object) ]\n\t             **\n\t             * Shortcut for @Paper.customAttributes\n\t            \\*/\n\t            /*\\\n\t             * Paper.customAttributes\n\t             [ property (object) ]\n\t             **\n\t             * If you have a set of attributes that you would like to represent\n\t             * as a function of some number you can do it easily with custom attributes:\n\t             > Usage\n\t             | paper.customAttributes.hue = function (num) {\n\t             |     num = num % 1;\n\t             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\n\t             | };\n\t             | // Custom attribute “hue” will change fill\n\t             | // to be given hue with fixed saturation and brightness.\n\t             | // Now you can use it like this:\n\t             | var c = paper.circle(10, 10, 10).attr({hue: .45});\n\t             | // or even like this:\n\t             | c.animate({hue: 1}, 1e3);\n\t             |\n\t             | // You could also create custom attribute\n\t             | // with multiple parameters:\n\t             | paper.customAttributes.hsb = function (h, s, b) {\n\t             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\n\t             | };\n\t             | c.attr({hsb: \"0.5 .8 1\"});\n\t             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\n\t            \\*/\n\t            this.ca = this.customAttributes = {};\n\t        },\n\t        paperproto,\n\t        appendChild = \"appendChild\",\n\t        apply = \"apply\",\n\t        concat = \"concat\",\n\t        supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\n\t        E = \"\",\n\t        S = \" \",\n\t        Str = String,\n\t        split = \"split\",\n\t        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\n\t        touchMap = {\n\t            mousedown: \"touchstart\",\n\t            mousemove: \"touchmove\",\n\t            mouseup: \"touchend\"\n\t        },\n\t        lowerCase = Str.prototype.toLowerCase,\n\t        math = Math,\n\t        mmax = math.max,\n\t        mmin = math.min,\n\t        abs = math.abs,\n\t        pow = math.pow,\n\t        PI = math.PI,\n\t        nu = \"number\",\n\t        string = \"string\",\n\t        array = \"array\",\n\t        toString = \"toString\",\n\t        fillString = \"fill\",\n\t        objectToString = Object.prototype.toString,\n\t        paper = {},\n\t        push = \"push\",\n\t        ISURL = R._ISURL = /^url\\(['\"]?(.+?)['\"]?\\)$/i,\n\t        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\n\t        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\n\t        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n\t        round = math.round,\n\t        setAttribute = \"setAttribute\",\n\t        toFloat = parseFloat,\n\t        toInt = parseInt,\n\t        upperCase = Str.prototype.toUpperCase,\n\t        availableAttrs = R._availableAttrs = {\n\t            \"arrow-end\": \"none\",\n\t            \"arrow-start\": \"none\",\n\t            blur: 0,\n\t            \"clip-rect\": \"0 0 1e9 1e9\",\n\t            cursor: \"default\",\n\t            cx: 0,\n\t            cy: 0,\n\t            fill: \"#fff\",\n\t            \"fill-opacity\": 1,\n\t            font: '10px \"Arial\"',\n\t            \"font-family\": '\"Arial\"',\n\t            \"font-size\": \"10\",\n\t            \"font-style\": \"normal\",\n\t            \"font-weight\": 400,\n\t            gradient: 0,\n\t            height: 0,\n\t            href: \"http://raphaeljs.com/\",\n\t            \"letter-spacing\": 0,\n\t            opacity: 1,\n\t            path: \"M0,0\",\n\t            r: 0,\n\t            rx: 0,\n\t            ry: 0,\n\t            src: \"\",\n\t            stroke: \"#000\",\n\t            \"stroke-dasharray\": \"\",\n\t            \"stroke-linecap\": \"butt\",\n\t            \"stroke-linejoin\": \"butt\",\n\t            \"stroke-miterlimit\": 0,\n\t            \"stroke-opacity\": 1,\n\t            \"stroke-width\": 1,\n\t            target: \"_blank\",\n\t            \"text-anchor\": \"middle\",\n\t            title: \"Raphael\",\n\t            transform: \"\",\n\t            width: 0,\n\t            x: 0,\n\t            y: 0,\n\t            \"class\": \"\"\n\t        },\n\t        availableAnimAttrs = R._availableAnimAttrs = {\n\t            blur: nu,\n\t            \"clip-rect\": \"csv\",\n\t            cx: nu,\n\t            cy: nu,\n\t            fill: \"colour\",\n\t            \"fill-opacity\": nu,\n\t            \"font-size\": nu,\n\t            height: nu,\n\t            opacity: nu,\n\t            path: \"path\",\n\t            r: nu,\n\t            rx: nu,\n\t            ry: nu,\n\t            stroke: \"colour\",\n\t            \"stroke-opacity\": nu,\n\t            \"stroke-width\": nu,\n\t            transform: \"transform\",\n\t            width: nu,\n\t            x: nu,\n\t            y: nu\n\t        },\n\t        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\n\t        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\n\t        hsrg = {hs: 1, rg: 1},\n\t        p2s = /,?([achlmqrstvxz]),?/gi,\n\t        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n\t        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n\t        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\n\t        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\n\t        eldata = {},\n\t        sortByKey = function (a, b) {\n\t            return a.key - b.key;\n\t        },\n\t        sortByNumber = function (a, b) {\n\t            return toFloat(a) - toFloat(b);\n\t        },\n\t        fun = function () {},\n\t        pipe = function (x) {\n\t            return x;\n\t        },\n\t        rectPath = R._rectPath = function (x, y, w, h, r) {\n\t            if (r) {\n\t                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n\t            }\n\t            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n\t        },\n\t        ellipsePath = function (x, y, rx, ry) {\n\t            if (ry == null) {\n\t                ry = rx;\n\t            }\n\t            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n\t        },\n\t        getPath = R._getPath = {\n\t            path: function (el) {\n\t                return el.attr(\"path\");\n\t            },\n\t            circle: function (el) {\n\t                var a = el.attrs;\n\t                return ellipsePath(a.cx, a.cy, a.r);\n\t            },\n\t            ellipse: function (el) {\n\t                var a = el.attrs;\n\t                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\n\t            },\n\t            rect: function (el) {\n\t                var a = el.attrs;\n\t                return rectPath(a.x, a.y, a.width, a.height, a.r);\n\t            },\n\t            image: function (el) {\n\t                var a = el.attrs;\n\t                return rectPath(a.x, a.y, a.width, a.height);\n\t            },\n\t            text: function (el) {\n\t                var bbox = el._getBBox();\n\t                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n\t            },\n\t            set : function(el) {\n\t                var bbox = el._getBBox();\n\t                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n\t            }\n\t        },\n\t        /*\\\n\t         * Raphael.mapPath\n\t         [ method ]\n\t         **\n\t         * Transform the path string with given matrix.\n\t         > Parameters\n\t         - path (string) path string\n\t         - matrix (object) see @Matrix\n\t         = (string) transformed path string\n\t        \\*/\n\t        mapPath = R.mapPath = function (path, matrix) {\n\t            if (!matrix) {\n\t                return path;\n\t            }\n\t            var x, y, i, j, ii, jj, pathi;\n\t            path = path2curve(path);\n\t            for (i = 0, ii = path.length; i < ii; i++) {\n\t                pathi = path[i];\n\t                for (j = 1, jj = pathi.length; j < jj; j += 2) {\n\t                    x = matrix.x(pathi[j], pathi[j + 1]);\n\t                    y = matrix.y(pathi[j], pathi[j + 1]);\n\t                    pathi[j] = x;\n\t                    pathi[j + 1] = y;\n\t                }\n\t            }\n\t            return path;\n\t        };\n\n\t    R._g = g;\n\t    /*\\\n\t     * Raphael.type\n\t     [ property (string) ]\n\t     **\n\t     * Can be “SVG”, “VML” or empty, depending on browser support.\n\t    \\*/\n\t    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\n\t    if (R.type == \"VML\") {\n\t        var d = g.doc.createElement(\"div\"),\n\t            b;\n\t        d.innerHTML = '<v:shape adj=\"1\"/>';\n\t        b = d.firstChild;\n\t        b.style.behavior = \"url(#default#VML)\";\n\t        if (!(b && typeof b.adj == \"object\")) {\n\t            return (R.type = E);\n\t        }\n\t        d = null;\n\t    }\n\t    /*\\\n\t     * Raphael.svg\n\t     [ property (boolean) ]\n\t     **\n\t     * `true` if browser supports SVG.\n\t    \\*/\n\t    /*\\\n\t     * Raphael.vml\n\t     [ property (boolean) ]\n\t     **\n\t     * `true` if browser supports VML.\n\t    \\*/\n\t    R.svg = !(R.vml = R.type == \"VML\");\n\t    R._Paper = Paper;\n\t    /*\\\n\t     * Raphael.fn\n\t     [ property (object) ]\n\t     **\n\t     * You can add your own method to the canvas. For example if you want to draw a pie chart,\n\t     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\n\t     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\n\t     * Raphaël instance is created, otherwise it will take no effect. Please note that the\n\t     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\n\t     * ensure any namespacing ensures proper context.\n\t     > Usage\n\t     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\n\t     |     return this.path( ... );\n\t     | };\n\t     | // or create namespace\n\t     | Raphael.fn.mystuff = {\n\t     |     arrow: function () {…},\n\t     |     star: function () {…},\n\t     |     // etc…\n\t     | };\n\t     | var paper = Raphael(10, 10, 630, 480);\n\t     | // then use it\n\t     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\n\t     | paper.mystuff.arrow();\n\t     | paper.mystuff.star();\n\t    \\*/\n\t    R.fn = paperproto = Paper.prototype = R.prototype;\n\t    R._id = 0;\n\t    /*\\\n\t     * Raphael.is\n\t     [ method ]\n\t     **\n\t     * Handful of replacements for `typeof` operator.\n\t     > Parameters\n\t     - o (…) any object or primitive\n\t     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\n\t     = (boolean) is given value is of given type\n\t    \\*/\n\t    R.is = function (o, type) {\n\t        type = lowerCase.call(type);\n\t        if (type == \"finite\") {\n\t            return !isnan[has](+o);\n\t        }\n\t        if (type == \"array\") {\n\t            return o instanceof Array;\n\t        }\n\t        return  (type == \"null\" && o === null) ||\n\t                (type == typeof o && o !== null) ||\n\t                (type == \"object\" && o === Object(o)) ||\n\t                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\n\t                objectToString.call(o).slice(8, -1).toLowerCase() == type;\n\t    };\n\n\t    function clone(obj) {\n\t        if (typeof obj == \"function\" || Object(obj) !== obj) {\n\t            return obj;\n\t        }\n\t        var res = new obj.constructor;\n\t        for (var key in obj) if (obj[has](key)) {\n\t            res[key] = clone(obj[key]);\n\t        }\n\t        return res;\n\t    }\n\n\t    /*\\\n\t     * Raphael.angle\n\t     [ method ]\n\t     **\n\t     * Returns angle between two or three points\n\t     > Parameters\n\t     - x1 (number) x coord of first point\n\t     - y1 (number) y coord of first point\n\t     - x2 (number) x coord of second point\n\t     - y2 (number) y coord of second point\n\t     - x3 (number) #optional x coord of third point\n\t     - y3 (number) #optional y coord of third point\n\t     = (number) angle in degrees.\n\t    \\*/\n\t    R.angle = function (x1, y1, x2, y2, x3, y3) {\n\t        if (x3 == null) {\n\t            var x = x1 - x2,\n\t                y = y1 - y2;\n\t            if (!x && !y) {\n\t                return 0;\n\t            }\n\t            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n\t        } else {\n\t            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\n\t        }\n\t    };\n\t    /*\\\n\t     * Raphael.rad\n\t     [ method ]\n\t     **\n\t     * Transform angle to radians\n\t     > Parameters\n\t     - deg (number) angle in degrees\n\t     = (number) angle in radians.\n\t    \\*/\n\t    R.rad = function (deg) {\n\t        return deg % 360 * PI / 180;\n\t    };\n\t    /*\\\n\t     * Raphael.deg\n\t     [ method ]\n\t     **\n\t     * Transform angle to degrees\n\t     > Parameters\n\t     - rad (number) angle in radians\n\t     = (number) angle in degrees.\n\t    \\*/\n\t    R.deg = function (rad) {\n\t        return Math.round ((rad * 180 / PI% 360)* 1000) / 1000;\n\t    };\n\t    /*\\\n\t     * Raphael.snapTo\n\t     [ method ]\n\t     **\n\t     * Snaps given value to given grid.\n\t     > Parameters\n\t     - values (array|number) given array of values or step of the grid\n\t     - value (number) value to adjust\n\t     - tolerance (number) #optional tolerance for snapping. Default is `10`.\n\t     = (number) adjusted value.\n\t    \\*/\n\t    R.snapTo = function (values, value, tolerance) {\n\t        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\n\t        if (R.is(values, array)) {\n\t            var i = values.length;\n\t            while (i--) if (abs(values[i] - value) <= tolerance) {\n\t                return values[i];\n\t            }\n\t        } else {\n\t            values = +values;\n\t            var rem = value % values;\n\t            if (rem < tolerance) {\n\t                return value - rem;\n\t            }\n\t            if (rem > values - tolerance) {\n\t                return value - rem + values;\n\t            }\n\t        }\n\t        return value;\n\t    };\n\n\t    /*\\\n\t     * Raphael.createUUID\n\t     [ method ]\n\t     **\n\t     * Returns RFC4122, version 4 ID\n\t    \\*/\n\t    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\n\t        return function () {\n\t            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\n\t        };\n\t    })(/[xy]/g, function (c) {\n\t        var r = math.random() * 16 | 0,\n\t            v = c == \"x\" ? r : (r & 3 | 8);\n\t        return v.toString(16);\n\t    });\n\n\t    /*\\\n\t     * Raphael.setWindow\n\t     [ method ]\n\t     **\n\t     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\n\t     > Parameters\n\t     - newwin (window) new window object\n\t    \\*/\n\t    R.setWindow = function (newwin) {\n\t        eve(\"raphael.setWindow\", R, g.win, newwin);\n\t        g.win = newwin;\n\t        g.doc = g.win.document;\n\t        if (R._engine.initWin) {\n\t            R._engine.initWin(g.win);\n\t        }\n\t    };\n\t    var toHex = function (color) {\n\t        if (R.vml) {\n\t            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\n\t            var trim = /^\\s+|\\s+$/g;\n\t            var bod;\n\t            try {\n\t                var docum = new ActiveXObject(\"htmlfile\");\n\t                docum.write(\"<body>\");\n\t                docum.close();\n\t                bod = docum.body;\n\t            } catch(e) {\n\t                bod = createPopup().document.body;\n\t            }\n\t            var range = bod.createTextRange();\n\t            toHex = cacher(function (color) {\n\t                try {\n\t                    bod.style.color = Str(color).replace(trim, E);\n\t                    var value = range.queryCommandValue(\"ForeColor\");\n\t                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\n\t                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\n\t                } catch(e) {\n\t                    return \"none\";\n\t                }\n\t            });\n\t        } else {\n\t            var i = g.doc.createElement(\"i\");\n\t            i.title = \"Rapha\\xebl Colour Picker\";\n\t            i.style.display = \"none\";\n\t            g.doc.body.appendChild(i);\n\t            toHex = cacher(function (color) {\n\t                i.style.color = color;\n\t                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n\t            });\n\t        }\n\t        return toHex(color);\n\t    },\n\t    hsbtoString = function () {\n\t        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n\t    },\n\t    hsltoString = function () {\n\t        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n\t    },\n\t    rgbtoString = function () {\n\t        return this.hex;\n\t    },\n\t    prepareRGB = function (r, g, b) {\n\t        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n\t            b = r.b;\n\t            g = r.g;\n\t            r = r.r;\n\t        }\n\t        if (g == null && R.is(r, string)) {\n\t            var clr = R.getRGB(r);\n\t            r = clr.r;\n\t            g = clr.g;\n\t            b = clr.b;\n\t        }\n\t        if (r > 1 || g > 1 || b > 1) {\n\t            r /= 255;\n\t            g /= 255;\n\t            b /= 255;\n\t        }\n\n\t        return [r, g, b];\n\t    },\n\t    packageRGB = function (r, g, b, o) {\n\t        r *= 255;\n\t        g *= 255;\n\t        b *= 255;\n\t        var rgb = {\n\t            r: r,\n\t            g: g,\n\t            b: b,\n\t            hex: R.rgb(r, g, b),\n\t            toString: rgbtoString\n\t        };\n\t        R.is(o, \"finite\") && (rgb.opacity = o);\n\t        return rgb;\n\t    };\n\n\t    /*\\\n\t     * Raphael.color\n\t     [ method ]\n\t     **\n\t     * Parses the color string and returns object with all values for the given color.\n\t     > Parameters\n\t     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\n\t     = (object) Combined RGB & HSB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue,\n\t     o     hex (string) color in HTML/CSS format: #••••••,\n\t     o     error (boolean) `true` if string can’t be parsed,\n\t     o     h (number) hue,\n\t     o     s (number) saturation,\n\t     o     v (number) value (brightness),\n\t     o     l (number) lightness\n\t     o }\n\t    \\*/\n\t    R.color = function (clr) {\n\t        var rgb;\n\t        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n\t            rgb = R.hsb2rgb(clr);\n\t            clr.r = rgb.r;\n\t            clr.g = rgb.g;\n\t            clr.b = rgb.b;\n\t            clr.hex = rgb.hex;\n\t        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n\t            rgb = R.hsl2rgb(clr);\n\t            clr.r = rgb.r;\n\t            clr.g = rgb.g;\n\t            clr.b = rgb.b;\n\t            clr.hex = rgb.hex;\n\t        } else {\n\t            if (R.is(clr, \"string\")) {\n\t                clr = R.getRGB(clr);\n\t            }\n\t            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\n\t                rgb = R.rgb2hsl(clr);\n\t                clr.h = rgb.h;\n\t                clr.s = rgb.s;\n\t                clr.l = rgb.l;\n\t                rgb = R.rgb2hsb(clr);\n\t                clr.v = rgb.b;\n\t            } else {\n\t                clr = {hex: \"none\"};\n\t                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n\t            }\n\t        }\n\t        clr.toString = rgbtoString;\n\t        return clr;\n\t    };\n\t    /*\\\n\t     * Raphael.hsb2rgb\n\t     [ method ]\n\t     **\n\t     * Converts HSB values to RGB object.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - v (number) value or brightness\n\t     = (object) RGB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue,\n\t     o     hex (string) color in HTML/CSS format: #••••••\n\t     o }\n\t    \\*/\n\t    R.hsb2rgb = function (h, s, v, o) {\n\t        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n\t            v = h.b;\n\t            s = h.s;\n\t            o = h.o;\n\t            h = h.h;\n\t        }\n\t        h *= 360;\n\t        var R, G, B, X, C;\n\t        h = (h % 360) / 60;\n\t        C = v * s;\n\t        X = C * (1 - abs(h % 2 - 1));\n\t        R = G = B = v - C;\n\n\t        h = ~~h;\n\t        R += [C, X, 0, 0, X, C][h];\n\t        G += [X, C, C, X, 0, 0][h];\n\t        B += [0, 0, X, C, C, X][h];\n\t        return packageRGB(R, G, B, o);\n\t    };\n\t    /*\\\n\t     * Raphael.hsl2rgb\n\t     [ method ]\n\t     **\n\t     * Converts HSL values to RGB object.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - l (number) luminosity\n\t     = (object) RGB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue,\n\t     o     hex (string) color in HTML/CSS format: #••••••\n\t     o }\n\t    \\*/\n\t    R.hsl2rgb = function (h, s, l, o) {\n\t        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n\t            l = h.l;\n\t            s = h.s;\n\t            h = h.h;\n\t        }\n\t        if (h > 1 || s > 1 || l > 1) {\n\t            h /= 360;\n\t            s /= 100;\n\t            l /= 100;\n\t        }\n\t        h *= 360;\n\t        var R, G, B, X, C;\n\t        h = (h % 360) / 60;\n\t        C = 2 * s * (l < .5 ? l : 1 - l);\n\t        X = C * (1 - abs(h % 2 - 1));\n\t        R = G = B = l - C / 2;\n\n\t        h = ~~h;\n\t        R += [C, X, 0, 0, X, C][h];\n\t        G += [X, C, C, X, 0, 0][h];\n\t        B += [0, 0, X, C, C, X][h];\n\t        return packageRGB(R, G, B, o);\n\t    };\n\t    /*\\\n\t     * Raphael.rgb2hsb\n\t     [ method ]\n\t     **\n\t     * Converts RGB values to HSB object.\n\t     > Parameters\n\t     - r (number) red\n\t     - g (number) green\n\t     - b (number) blue\n\t     = (object) HSB object in format:\n\t     o {\n\t     o     h (number) hue\n\t     o     s (number) saturation\n\t     o     b (number) brightness\n\t     o }\n\t    \\*/\n\t    R.rgb2hsb = function (r, g, b) {\n\t        b = prepareRGB(r, g, b);\n\t        r = b[0];\n\t        g = b[1];\n\t        b = b[2];\n\n\t        var H, S, V, C;\n\t        V = mmax(r, g, b);\n\t        C = V - mmin(r, g, b);\n\t        H = (C == 0 ? null :\n\t             V == r ? (g - b) / C :\n\t             V == g ? (b - r) / C + 2 :\n\t                      (r - g) / C + 4\n\t            );\n\t        H = ((H + 360) % 6) * 60 / 360;\n\t        S = C == 0 ? 0 : C / V;\n\t        return {h: H, s: S, b: V, toString: hsbtoString};\n\t    };\n\t    /*\\\n\t     * Raphael.rgb2hsl\n\t     [ method ]\n\t     **\n\t     * Converts RGB values to HSL object.\n\t     > Parameters\n\t     - r (number) red\n\t     - g (number) green\n\t     - b (number) blue\n\t     = (object) HSL object in format:\n\t     o {\n\t     o     h (number) hue\n\t     o     s (number) saturation\n\t     o     l (number) luminosity\n\t     o }\n\t    \\*/\n\t    R.rgb2hsl = function (r, g, b) {\n\t        b = prepareRGB(r, g, b);\n\t        r = b[0];\n\t        g = b[1];\n\t        b = b[2];\n\n\t        var H, S, L, M, m, C;\n\t        M = mmax(r, g, b);\n\t        m = mmin(r, g, b);\n\t        C = M - m;\n\t        H = (C == 0 ? null :\n\t             M == r ? (g - b) / C :\n\t             M == g ? (b - r) / C + 2 :\n\t                      (r - g) / C + 4);\n\t        H = ((H + 360) % 6) * 60 / 360;\n\t        L = (M + m) / 2;\n\t        S = (C == 0 ? 0 :\n\t             L < .5 ? C / (2 * L) :\n\t                      C / (2 - 2 * L));\n\t        return {h: H, s: S, l: L, toString: hsltoString};\n\t    };\n\t    R._path2string = function () {\n\t        return this.join(\",\").replace(p2s, \"$1\");\n\t    };\n\t    function repush(array, item) {\n\t        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n\t            return array.push(array.splice(i, 1)[0]);\n\t        }\n\t    }\n\t    function cacher(f, scope, postprocessor) {\n\t        function newf() {\n\t            var arg = Array.prototype.slice.call(arguments, 0),\n\t                args = arg.join(\"\\u2400\"),\n\t                cache = newf.cache = newf.cache || {},\n\t                count = newf.count = newf.count || [];\n\t            if (cache[has](args)) {\n\t                repush(count, args);\n\t                return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t            }\n\t            count.length >= 1e3 && delete cache[count.shift()];\n\t            count.push(args);\n\t            cache[args] = f[apply](scope, arg);\n\t            return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t        }\n\t        return newf;\n\t    }\n\n\t    var preload = R._preload = function (src, f) {\n\t        var img = g.doc.createElement(\"img\");\n\t        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\t        img.onload = function () {\n\t            f.call(this);\n\t            this.onload = null;\n\t            g.doc.body.removeChild(this);\n\t        };\n\t        img.onerror = function () {\n\t            g.doc.body.removeChild(this);\n\t        };\n\t        g.doc.body.appendChild(img);\n\t        img.src = src;\n\t    };\n\n\t    function clrToString() {\n\t        return this.hex;\n\t    }\n\n\t    /*\\\n\t     * Raphael.getRGB\n\t     [ method ]\n\t     **\n\t     * Parses colour string as RGB object\n\t     > Parameters\n\t     - colour (string) colour string in one of formats:\n\t     # <ul>\n\t     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n\t     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n\t     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n\t     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n\t     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n\t     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n\t     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n\t     #     <li>hsl(•••, •••, •••) — same as hsb</li>\n\t     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\n\t     # </ul>\n\t     = (object) RGB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue\n\t     o     hex (string) color in HTML/CSS format: #••••••,\n\t     o     error (boolean) true if string can’t be parsed\n\t     o }\n\t    \\*/\n\t    R.getRGB = cacher(function (colour) {\n\t        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n\t            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n\t        }\n\t        if (colour == \"none\") {\n\t            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\n\t        }\n\t        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\t        var res,\n\t            red,\n\t            green,\n\t            blue,\n\t            opacity,\n\t            t,\n\t            values,\n\t            rgb = colour.match(colourRegExp);\n\t        if (rgb) {\n\t            if (rgb[2]) {\n\t                blue = toInt(rgb[2].substring(5), 16);\n\t                green = toInt(rgb[2].substring(3, 5), 16);\n\t                red = toInt(rgb[2].substring(1, 3), 16);\n\t            }\n\t            if (rgb[3]) {\n\t                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n\t                green = toInt((t = rgb[3].charAt(2)) + t, 16);\n\t                red = toInt((t = rgb[3].charAt(1)) + t, 16);\n\t            }\n\t            if (rgb[4]) {\n\t                values = rgb[4][split](commaSpaces);\n\t                red = toFloat(values[0]);\n\t                values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t                green = toFloat(values[1]);\n\t                values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t                blue = toFloat(values[2]);\n\t                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n\t                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t            }\n\t            if (rgb[5]) {\n\t                values = rgb[5][split](commaSpaces);\n\t                red = toFloat(values[0]);\n\t                values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t                green = toFloat(values[1]);\n\t                values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t                blue = toFloat(values[2]);\n\t                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n\t                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t                return R.hsb2rgb(red, green, blue, opacity);\n\t            }\n\t            if (rgb[6]) {\n\t                values = rgb[6][split](commaSpaces);\n\t                red = toFloat(values[0]);\n\t                values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t                green = toFloat(values[1]);\n\t                values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t                blue = toFloat(values[2]);\n\t                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n\t                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t                return R.hsl2rgb(red, green, blue, opacity);\n\t            }\n\t            rgb = {r: red, g: green, b: blue, toString: clrToString};\n\t            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n\t            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\n\t            return rgb;\n\t        }\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n\t    }, R);\n\t    /*\\\n\t     * Raphael.hsb\n\t     [ method ]\n\t     **\n\t     * Converts HSB values to hex representation of the colour.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - b (number) value or brightness\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.hsb = cacher(function (h, s, b) {\n\t        return R.hsb2rgb(h, s, b).hex;\n\t    });\n\t    /*\\\n\t     * Raphael.hsl\n\t     [ method ]\n\t     **\n\t     * Converts HSL values to hex representation of the colour.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - l (number) luminosity\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.hsl = cacher(function (h, s, l) {\n\t        return R.hsl2rgb(h, s, l).hex;\n\t    });\n\t    /*\\\n\t     * Raphael.rgb\n\t     [ method ]\n\t     **\n\t     * Converts RGB values to hex representation of the colour.\n\t     > Parameters\n\t     - r (number) red\n\t     - g (number) green\n\t     - b (number) blue\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.rgb = cacher(function (r, g, b) {\n\t        function round(x) { return (x + 0.5) | 0; }\n\t        return \"#\" + (16777216 | round(b) | (round(g) << 8) | (round(r) << 16)).toString(16).slice(1);\n\t    });\n\t    /*\\\n\t     * Raphael.getColor\n\t     [ method ]\n\t     **\n\t     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\n\t     > Parameters\n\t     - value (number) #optional brightness, default is `0.75`\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.getColor = function (value) {\n\t        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\n\t            rgb = this.hsb2rgb(start.h, start.s, start.b);\n\t        start.h += .075;\n\t        if (start.h > 1) {\n\t            start.h = 0;\n\t            start.s -= .2;\n\t            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\n\t        }\n\t        return rgb.hex;\n\t    };\n\t    /*\\\n\t     * Raphael.getColor.reset\n\t     [ method ]\n\t     **\n\t     * Resets spectrum position for @Raphael.getColor back to red.\n\t    \\*/\n\t    R.getColor.reset = function () {\n\t        delete this.start;\n\t    };\n\n\t    // http://schepers.cc/getting-to-the-point\n\t    function catmullRom2bezier(crp, z) {\n\t        var d = [];\n\t        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n\t            var p = [\n\t                        {x: +crp[i - 2], y: +crp[i - 1]},\n\t                        {x: +crp[i],     y: +crp[i + 1]},\n\t                        {x: +crp[i + 2], y: +crp[i + 3]},\n\t                        {x: +crp[i + 4], y: +crp[i + 5]}\n\t                    ];\n\t            if (z) {\n\t                if (!i) {\n\t                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n\t                } else if (iLen - 4 == i) {\n\t                    p[3] = {x: +crp[0], y: +crp[1]};\n\t                } else if (iLen - 2 == i) {\n\t                    p[2] = {x: +crp[0], y: +crp[1]};\n\t                    p[3] = {x: +crp[2], y: +crp[3]};\n\t                }\n\t            } else {\n\t                if (iLen - 4 == i) {\n\t                    p[3] = p[2];\n\t                } else if (!i) {\n\t                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n\t                }\n\t            }\n\t            d.push([\"C\",\n\t                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n\t                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n\t                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n\t                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n\t                  p[2].x,\n\t                  p[2].y\n\t            ]);\n\t        }\n\n\t        return d;\n\t    }\n\t    /*\\\n\t     * Raphael.parsePathString\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Parses given path string into an array of arrays of path segments.\n\t     > Parameters\n\t     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\n\t     = (array) array of segments.\n\t    \\*/\n\t    R.parsePathString = function (pathString) {\n\t        if (!pathString) {\n\t            return null;\n\t        }\n\t        var pth = paths(pathString);\n\t        if (pth.arr) {\n\t            return pathClone(pth.arr);\n\t        }\n\n\t        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\n\t            data = [];\n\t        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\n\t            data = pathClone(pathString);\n\t        }\n\t        if (!data.length) {\n\t            Str(pathString).replace(pathCommand, function (a, b, c) {\n\t                var params = [],\n\t                    name = b.toLowerCase();\n\t                c.replace(pathValues, function (a, b) {\n\t                    b && params.push(+b);\n\t                });\n\t                if (name == \"m\" && params.length > 2) {\n\t                    data.push([b][concat](params.splice(0, 2)));\n\t                    name = \"l\";\n\t                    b = b == \"m\" ? \"l\" : \"L\";\n\t                }\n\t                if (name == \"r\") {\n\t                    data.push([b][concat](params));\n\t                } else while (params.length >= paramCounts[name]) {\n\t                    data.push([b][concat](params.splice(0, paramCounts[name])));\n\t                    if (!paramCounts[name]) {\n\t                        break;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t        data.toString = R._path2string;\n\t        pth.arr = pathClone(data);\n\t        return data;\n\t    };\n\t    /*\\\n\t     * Raphael.parseTransformString\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Parses given path string into an array of transformations.\n\t     > Parameters\n\t     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\n\t     = (array) array of transformations.\n\t    \\*/\n\t    R.parseTransformString = cacher(function (TString) {\n\t        if (!TString) {\n\t            return null;\n\t        }\n\t        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n\t            data = [];\n\t        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\n\t            data = pathClone(TString);\n\t        }\n\t        if (!data.length) {\n\t            Str(TString).replace(tCommand, function (a, b, c) {\n\t                var params = [],\n\t                    name = lowerCase.call(b);\n\t                c.replace(pathValues, function (a, b) {\n\t                    b && params.push(+b);\n\t                });\n\t                data.push([b][concat](params));\n\t            });\n\t        }\n\t        data.toString = R._path2string;\n\t        return data;\n\t    });\n\t    // PATHS\n\t    var paths = function (ps) {\n\t        var p = paths.ps = paths.ps || {};\n\t        if (p[ps]) {\n\t            p[ps].sleep = 100;\n\t        } else {\n\t            p[ps] = {\n\t                sleep: 100\n\t            };\n\t        }\n\t        setTimeout(function () {\n\t            for (var key in p) if (p[has](key) && key != ps) {\n\t                p[key].sleep--;\n\t                !p[key].sleep && delete p[key];\n\t            }\n\t        });\n\t        return p[ps];\n\t    };\n\t    /*\\\n\t     * Raphael.findDotsAtSegment\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Find dot coordinates on the given cubic bezier curve at the given t.\n\t     > Parameters\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     - t (number) position on the curve (0..1)\n\t     = (object) point information in format:\n\t     o {\n\t     o     x: (number) x coordinate of the point\n\t     o     y: (number) y coordinate of the point\n\t     o     m: {\n\t     o         x: (number) x coordinate of the left anchor\n\t     o         y: (number) y coordinate of the left anchor\n\t     o     }\n\t     o     n: {\n\t     o         x: (number) x coordinate of the right anchor\n\t     o         y: (number) y coordinate of the right anchor\n\t     o     }\n\t     o     start: {\n\t     o         x: (number) x coordinate of the start of the curve\n\t     o         y: (number) y coordinate of the start of the curve\n\t     o     }\n\t     o     end: {\n\t     o         x: (number) x coordinate of the end of the curve\n\t     o         y: (number) y coordinate of the end of the curve\n\t     o     }\n\t     o     alpha: (number) angle of the curve derivative at the point\n\t     o }\n\t    \\*/\n\t    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t        var t1 = 1 - t,\n\t            t13 = pow(t1, 3),\n\t            t12 = pow(t1, 2),\n\t            t2 = t * t,\n\t            t3 = t2 * t,\n\t            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n\t            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n\t            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n\t            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n\t            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n\t            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n\t            ax = t1 * p1x + t * c1x,\n\t            ay = t1 * p1y + t * c1y,\n\t            cx = t1 * c2x + t * p2x,\n\t            cy = t1 * c2y + t * p2y,\n\t            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n\t        (mx > nx || my < ny) && (alpha += 180);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            m: {x: mx, y: my},\n\t            n: {x: nx, y: ny},\n\t            start: {x: ax, y: ay},\n\t            end: {x: cx, y: cy},\n\t            alpha: alpha\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.bezierBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Return bounding box of a given cubic bezier curve\n\t     > Parameters\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     * or\n\t     - bez (array) array of six points for bezier curve\n\t     = (object) point information in format:\n\t     o {\n\t     o     min: {\n\t     o         x: (number) x coordinate of the left point\n\t     o         y: (number) y coordinate of the top point\n\t     o     }\n\t     o     max: {\n\t     o         x: (number) x coordinate of the right point\n\t     o         y: (number) y coordinate of the bottom point\n\t     o     }\n\t     o }\n\t    \\*/\n\t    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\t        if (!R.is(p1x, \"array\")) {\n\t            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n\t        }\n\t        var bbox = curveDim.apply(null, p1x);\n\t        return {\n\t            x: bbox.min.x,\n\t            y: bbox.min.y,\n\t            x2: bbox.max.x,\n\t            y2: bbox.max.y,\n\t            width: bbox.max.x - bbox.min.x,\n\t            height: bbox.max.y - bbox.min.y\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.isPointInsideBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside bounding boxes.\n\t     > Parameters\n\t     - bbox (string) bounding box\n\t     - x (string) x coordinate of the point\n\t     - y (string) y coordinate of the point\n\t     = (boolean) `true` if point inside\n\t    \\*/\n\t    R.isPointInsideBBox = function (bbox, x, y) {\n\t        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\n\t    };\n\t    /*\\\n\t     * Raphael.isBBoxIntersect\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if two bounding boxes intersect\n\t     > Parameters\n\t     - bbox1 (string) first bounding box\n\t     - bbox2 (string) second bounding box\n\t     = (boolean) `true` if they intersect\n\t    \\*/\n\t    R.isBBoxIntersect = function (bbox1, bbox2) {\n\t        var i = R.isPointInsideBBox;\n\t        return i(bbox2, bbox1.x, bbox1.y)\n\t            || i(bbox2, bbox1.x2, bbox1.y)\n\t            || i(bbox2, bbox1.x, bbox1.y2)\n\t            || i(bbox2, bbox1.x2, bbox1.y2)\n\t            || i(bbox1, bbox2.x, bbox2.y)\n\t            || i(bbox1, bbox2.x2, bbox2.y)\n\t            || i(bbox1, bbox2.x, bbox2.y2)\n\t            || i(bbox1, bbox2.x2, bbox2.y2)\n\t            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n\t            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n\t    };\n\t    function base3(t, p1, p2, p3, p4) {\n\t        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n\t            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n\t        return t * t2 - 3 * p1 + 3 * p2;\n\t    }\n\t    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\t        if (z == null) {\n\t            z = 1;\n\t        }\n\t        z = z > 1 ? 1 : z < 0 ? 0 : z;\n\t        var z2 = z / 2,\n\t            n = 12,\n\t            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\n\t            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n\t            sum = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var ct = z2 * Tvalues[i] + z2,\n\t                xbase = base3(ct, x1, x2, x3, x4),\n\t                ybase = base3(ct, y1, y2, y3, y4),\n\t                comb = xbase * xbase + ybase * ybase;\n\t            sum += Cvalues[i] * math.sqrt(comb);\n\t        }\n\t        return z2 * sum;\n\t    }\n\t    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n\t        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n\t            return;\n\t        }\n\t        var t = 1,\n\t            step = t / 2,\n\t            t2 = t - step,\n\t            l,\n\t            e = .01;\n\t        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        while (abs(l - ll) > e) {\n\t            step /= 2;\n\t            t2 += (l < ll ? 1 : -1) * step;\n\t            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        }\n\t        return t2;\n\t    }\n\t    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n\t        if (\n\t            mmax(x1, x2) < mmin(x3, x4) ||\n\t            mmin(x1, x2) > mmax(x3, x4) ||\n\t            mmax(y1, y2) < mmin(y3, y4) ||\n\t            mmin(y1, y2) > mmax(y3, y4)\n\t        ) {\n\t            return;\n\t        }\n\t        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n\t            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n\t            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\t        if (!denominator) {\n\t            return;\n\t        }\n\t        var px = nx / denominator,\n\t            py = ny / denominator,\n\t            px2 = +px.toFixed(2),\n\t            py2 = +py.toFixed(2);\n\t        if (\n\t            px2 < +mmin(x1, x2).toFixed(2) ||\n\t            px2 > +mmax(x1, x2).toFixed(2) ||\n\t            px2 < +mmin(x3, x4).toFixed(2) ||\n\t            px2 > +mmax(x3, x4).toFixed(2) ||\n\t            py2 < +mmin(y1, y2).toFixed(2) ||\n\t            py2 > +mmax(y1, y2).toFixed(2) ||\n\t            py2 < +mmin(y3, y4).toFixed(2) ||\n\t            py2 > +mmax(y3, y4).toFixed(2)\n\t        ) {\n\t            return;\n\t        }\n\t        return {x: px, y: py};\n\t    }\n\t    function inter(bez1, bez2) {\n\t        return interHelper(bez1, bez2);\n\t    }\n\t    function interCount(bez1, bez2) {\n\t        return interHelper(bez1, bez2, 1);\n\t    }\n\t    function interHelper(bez1, bez2, justCount) {\n\t        var bbox1 = R.bezierBBox(bez1),\n\t            bbox2 = R.bezierBBox(bez2);\n\t        if (!R.isBBoxIntersect(bbox1, bbox2)) {\n\t            return justCount ? 0 : [];\n\t        }\n\t        var l1 = bezlen.apply(0, bez1),\n\t            l2 = bezlen.apply(0, bez2),\n\t            n1 = mmax(~~(l1 / 5), 1),\n\t            n2 = mmax(~~(l2 / 5), 1),\n\t            dots1 = [],\n\t            dots2 = [],\n\t            xy = {},\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0; i < n1 + 1; i++) {\n\t            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\n\t            dots1.push({x: p.x, y: p.y, t: i / n1});\n\t        }\n\t        for (i = 0; i < n2 + 1; i++) {\n\t            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\n\t            dots2.push({x: p.x, y: p.y, t: i / n2});\n\t        }\n\t        for (i = 0; i < n1; i++) {\n\t            for (var j = 0; j < n2; j++) {\n\t                var di = dots1[i],\n\t                    di1 = dots1[i + 1],\n\t                    dj = dots2[j],\n\t                    dj1 = dots2[j + 1],\n\t                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n\t                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n\t                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\t                if (is) {\n\t                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n\t                        continue;\n\t                    }\n\t                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n\t                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n\t                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\t                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\n\t                        if (justCount) {\n\t                            res++;\n\t                        } else {\n\t                            res.push({\n\t                                x: is.x,\n\t                                y: is.y,\n\t                                t1: mmin(t1, 1),\n\t                                t2: mmin(t2, 1)\n\t                            });\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    /*\\\n\t     * Raphael.pathIntersection\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Finds intersections of two paths\n\t     > Parameters\n\t     - path1 (string) path string\n\t     - path2 (string) path string\n\t     = (array) dots of intersection\n\t     o [\n\t     o     {\n\t     o         x: (number) x coordinate of the point\n\t     o         y: (number) y coordinate of the point\n\t     o         t1: (number) t value for segment of path1\n\t     o         t2: (number) t value for segment of path2\n\t     o         segment1: (number) order number for segment of path1\n\t     o         segment2: (number) order number for segment of path2\n\t     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\n\t     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n\t     o     }\n\t     o ]\n\t    \\*/\n\t    R.pathIntersection = function (path1, path2) {\n\t        return interPathHelper(path1, path2);\n\t    };\n\t    R.pathIntersectionNumber = function (path1, path2) {\n\t        return interPathHelper(path1, path2, 1);\n\t    };\n\t    function interPathHelper(path1, path2, justCount) {\n\t        path1 = R._path2curve(path1);\n\t        path2 = R._path2curve(path2);\n\t        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0, ii = path1.length; i < ii; i++) {\n\t            var pi = path1[i];\n\t            if (pi[0] == \"M\") {\n\t                x1 = x1m = pi[1];\n\t                y1 = y1m = pi[2];\n\t            } else {\n\t                if (pi[0] == \"C\") {\n\t                    bez1 = [x1, y1].concat(pi.slice(1));\n\t                    x1 = bez1[6];\n\t                    y1 = bez1[7];\n\t                } else {\n\t                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n\t                    x1 = x1m;\n\t                    y1 = y1m;\n\t                }\n\t                for (var j = 0, jj = path2.length; j < jj; j++) {\n\t                    var pj = path2[j];\n\t                    if (pj[0] == \"M\") {\n\t                        x2 = x2m = pj[1];\n\t                        y2 = y2m = pj[2];\n\t                    } else {\n\t                        if (pj[0] == \"C\") {\n\t                            bez2 = [x2, y2].concat(pj.slice(1));\n\t                            x2 = bez2[6];\n\t                            y2 = bez2[7];\n\t                        } else {\n\t                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n\t                            x2 = x2m;\n\t                            y2 = y2m;\n\t                        }\n\t                        var intr = interHelper(bez1, bez2, justCount);\n\t                        if (justCount) {\n\t                            res += intr;\n\t                        } else {\n\t                            for (var k = 0, kk = intr.length; k < kk; k++) {\n\t                                intr[k].segment1 = i;\n\t                                intr[k].segment2 = j;\n\t                                intr[k].bez1 = bez1;\n\t                                intr[k].bez2 = bez2;\n\t                            }\n\t                            res = res.concat(intr);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    /*\\\n\t     * Raphael.isPointInsidePath\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside a given closed path.\n\t     > Parameters\n\t     - path (string) path string\n\t     - x (number) x of the point\n\t     - y (number) y of the point\n\t     = (boolean) true, if point is inside the path\n\t    \\*/\n\t    R.isPointInsidePath = function (path, x, y) {\n\t        var bbox = R.pathBBox(path);\n\t        return R.isPointInsideBBox(bbox, x, y) &&\n\t               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n\t    };\n\t    R._removedFactory = function (methodname) {\n\t        return function () {\n\t            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.pathBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Return bounding box of a given path\n\t     > Parameters\n\t     - path (string) path string\n\t     = (object) bounding box\n\t     o {\n\t     o     x: (number) x coordinate of the left top point of the box\n\t     o     y: (number) y coordinate of the left top point of the box\n\t     o     x2: (number) x coordinate of the right bottom point of the box\n\t     o     y2: (number) y coordinate of the right bottom point of the box\n\t     o     width: (number) width of the box\n\t     o     height: (number) height of the box\n\t     o     cx: (number) x coordinate of the center of the box\n\t     o     cy: (number) y coordinate of the center of the box\n\t     o }\n\t    \\*/\n\t    var pathDimensions = R.pathBBox = function (path) {\n\t        var pth = paths(path);\n\t        if (pth.bbox) {\n\t            return clone(pth.bbox);\n\t        }\n\t        if (!path) {\n\t            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\n\t        }\n\t        path = path2curve(path);\n\t        var x = 0,\n\t            y = 0,\n\t            X = [],\n\t            Y = [],\n\t            p;\n\t        for (var i = 0, ii = path.length; i < ii; i++) {\n\t            p = path[i];\n\t            if (p[0] == \"M\") {\n\t                x = p[1];\n\t                y = p[2];\n\t                X.push(x);\n\t                Y.push(y);\n\t            } else {\n\t                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                X = X[concat](dim.min.x, dim.max.x);\n\t                Y = Y[concat](dim.min.y, dim.max.y);\n\t                x = p[5];\n\t                y = p[6];\n\t            }\n\t        }\n\t        var xmin = mmin[apply](0, X),\n\t            ymin = mmin[apply](0, Y),\n\t            xmax = mmax[apply](0, X),\n\t            ymax = mmax[apply](0, Y),\n\t            width = xmax - xmin,\n\t            height = ymax - ymin,\n\t                bb = {\n\t                x: xmin,\n\t                y: ymin,\n\t                x2: xmax,\n\t                y2: ymax,\n\t                width: width,\n\t                height: height,\n\t                cx: xmin + width / 2,\n\t                cy: ymin + height / 2\n\t            };\n\t        pth.bbox = clone(bb);\n\t        return bb;\n\t    },\n\t        pathClone = function (pathArray) {\n\t            var res = clone(pathArray);\n\t            res.toString = R._path2string;\n\t            return res;\n\t        },\n\t        pathToRelative = R._pathToRelative = function (pathArray) {\n\t            var pth = paths(pathArray);\n\t            if (pth.rel) {\n\t                return pathClone(pth.rel);\n\t            }\n\t            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n\t                pathArray = R.parsePathString(pathArray);\n\t            }\n\t            var res = [],\n\t                x = 0,\n\t                y = 0,\n\t                mx = 0,\n\t                my = 0,\n\t                start = 0;\n\t            if (pathArray[0][0] == \"M\") {\n\t                x = pathArray[0][1];\n\t                y = pathArray[0][2];\n\t                mx = x;\n\t                my = y;\n\t                start++;\n\t                res.push([\"M\", x, y]);\n\t            }\n\t            for (var i = start, ii = pathArray.length; i < ii; i++) {\n\t                var r = res[i] = [],\n\t                    pa = pathArray[i];\n\t                if (pa[0] != lowerCase.call(pa[0])) {\n\t                    r[0] = lowerCase.call(pa[0]);\n\t                    switch (r[0]) {\n\t                        case \"a\":\n\t                            r[1] = pa[1];\n\t                            r[2] = pa[2];\n\t                            r[3] = pa[3];\n\t                            r[4] = pa[4];\n\t                            r[5] = pa[5];\n\t                            r[6] = +(pa[6] - x).toFixed(3);\n\t                            r[7] = +(pa[7] - y).toFixed(3);\n\t                            break;\n\t                        case \"v\":\n\t                            r[1] = +(pa[1] - y).toFixed(3);\n\t                            break;\n\t                        case \"m\":\n\t                            mx = pa[1];\n\t                            my = pa[2];\n\t                        default:\n\t                            for (var j = 1, jj = pa.length; j < jj; j++) {\n\t                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n\t                            }\n\t                    }\n\t                } else {\n\t                    r = res[i] = [];\n\t                    if (pa[0] == \"m\") {\n\t                        mx = pa[1] + x;\n\t                        my = pa[2] + y;\n\t                    }\n\t                    for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                        res[i][k] = pa[k];\n\t                    }\n\t                }\n\t                var len = res[i].length;\n\t                switch (res[i][0]) {\n\t                    case \"z\":\n\t                        x = mx;\n\t                        y = my;\n\t                        break;\n\t                    case \"h\":\n\t                        x += +res[i][len - 1];\n\t                        break;\n\t                    case \"v\":\n\t                        y += +res[i][len - 1];\n\t                        break;\n\t                    default:\n\t                        x += +res[i][len - 2];\n\t                        y += +res[i][len - 1];\n\t                }\n\t            }\n\t            res.toString = R._path2string;\n\t            pth.rel = pathClone(res);\n\t            return res;\n\t        },\n\t        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\n\t            var pth = paths(pathArray);\n\t            if (pth.abs) {\n\t                return pathClone(pth.abs);\n\t            }\n\t            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n\t                pathArray = R.parsePathString(pathArray);\n\t            }\n\t            if (!pathArray || !pathArray.length) {\n\t                return [[\"M\", 0, 0]];\n\t            }\n\t            var res = [],\n\t                x = 0,\n\t                y = 0,\n\t                mx = 0,\n\t                my = 0,\n\t                start = 0;\n\t            if (pathArray[0][0] == \"M\") {\n\t                x = +pathArray[0][1];\n\t                y = +pathArray[0][2];\n\t                mx = x;\n\t                my = y;\n\t                start++;\n\t                res[0] = [\"M\", x, y];\n\t            }\n\t            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n\t            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n\t                res.push(r = []);\n\t                pa = pathArray[i];\n\t                if (pa[0] != upperCase.call(pa[0])) {\n\t                    r[0] = upperCase.call(pa[0]);\n\t                    switch (r[0]) {\n\t                        case \"A\":\n\t                            r[1] = pa[1];\n\t                            r[2] = pa[2];\n\t                            r[3] = pa[3];\n\t                            r[4] = pa[4];\n\t                            r[5] = pa[5];\n\t                            r[6] = +(pa[6] + x);\n\t                            r[7] = +(pa[7] + y);\n\t                            break;\n\t                        case \"V\":\n\t                            r[1] = +pa[1] + y;\n\t                            break;\n\t                        case \"H\":\n\t                            r[1] = +pa[1] + x;\n\t                            break;\n\t                        case \"R\":\n\t                            var dots = [x, y][concat](pa.slice(1));\n\t                            for (var j = 2, jj = dots.length; j < jj; j++) {\n\t                                dots[j] = +dots[j] + x;\n\t                                dots[++j] = +dots[j] + y;\n\t                            }\n\t                            res.pop();\n\t                            res = res[concat](catmullRom2bezier(dots, crz));\n\t                            break;\n\t                        case \"M\":\n\t                            mx = +pa[1] + x;\n\t                            my = +pa[2] + y;\n\t                        default:\n\t                            for (j = 1, jj = pa.length; j < jj; j++) {\n\t                                r[j] = +pa[j] + ((j % 2) ? x : y);\n\t                            }\n\t                    }\n\t                } else if (pa[0] == \"R\") {\n\t                    dots = [x, y][concat](pa.slice(1));\n\t                    res.pop();\n\t                    res = res[concat](catmullRom2bezier(dots, crz));\n\t                    r = [\"R\"][concat](pa.slice(-2));\n\t                } else {\n\t                    for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                        r[k] = pa[k];\n\t                    }\n\t                }\n\t                switch (r[0]) {\n\t                    case \"Z\":\n\t                        x = mx;\n\t                        y = my;\n\t                        break;\n\t                    case \"H\":\n\t                        x = r[1];\n\t                        break;\n\t                    case \"V\":\n\t                        y = r[1];\n\t                        break;\n\t                    case \"M\":\n\t                        mx = r[r.length - 2];\n\t                        my = r[r.length - 1];\n\t                    default:\n\t                        x = r[r.length - 2];\n\t                        y = r[r.length - 1];\n\t                }\n\t            }\n\t            res.toString = R._path2string;\n\t            pth.abs = pathClone(res);\n\t            return res;\n\t        },\n\t        l2c = function (x1, y1, x2, y2) {\n\t            return [x1, y1, x2, y2, x2, y2];\n\t        },\n\t        q2c = function (x1, y1, ax, ay, x2, y2) {\n\t            var _13 = 1 / 3,\n\t                _23 = 2 / 3;\n\t            return [\n\t                    _13 * x1 + _23 * ax,\n\t                    _13 * y1 + _23 * ay,\n\t                    _13 * x2 + _23 * ax,\n\t                    _13 * y2 + _23 * ay,\n\t                    x2,\n\t                    y2\n\t                ];\n\t        },\n\t        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\t            // for more information of where this math came from visit:\n\t            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n\t            var _120 = PI * 120 / 180,\n\t                rad = PI / 180 * (+angle || 0),\n\t                res = [],\n\t                xy,\n\t                rotate = cacher(function (x, y, rad) {\n\t                    var X = x * math.cos(rad) - y * math.sin(rad),\n\t                        Y = x * math.sin(rad) + y * math.cos(rad);\n\t                    return {x: X, y: Y};\n\t                });\n\t            if (!recursive) {\n\t                xy = rotate(x1, y1, -rad);\n\t                x1 = xy.x;\n\t                y1 = xy.y;\n\t                xy = rotate(x2, y2, -rad);\n\t                x2 = xy.x;\n\t                y2 = xy.y;\n\t                var cos = math.cos(PI / 180 * angle),\n\t                    sin = math.sin(PI / 180 * angle),\n\t                    x = (x1 - x2) / 2,\n\t                    y = (y1 - y2) / 2;\n\t                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\t                if (h > 1) {\n\t                    h = math.sqrt(h);\n\t                    rx = h * rx;\n\t                    ry = h * ry;\n\t                }\n\t                var rx2 = rx * rx,\n\t                    ry2 = ry * ry,\n\t                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\n\t                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n\t                    cx = k * rx * y / ry + (x1 + x2) / 2,\n\t                    cy = k * -ry * x / rx + (y1 + y2) / 2,\n\t                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n\t                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n\t                f1 = x1 < cx ? PI - f1 : f1;\n\t                f2 = x2 < cx ? PI - f2 : f2;\n\t                f1 < 0 && (f1 = PI * 2 + f1);\n\t                f2 < 0 && (f2 = PI * 2 + f2);\n\t                if (sweep_flag && f1 > f2) {\n\t                    f1 = f1 - PI * 2;\n\t                }\n\t                if (!sweep_flag && f2 > f1) {\n\t                    f2 = f2 - PI * 2;\n\t                }\n\t            } else {\n\t                f1 = recursive[0];\n\t                f2 = recursive[1];\n\t                cx = recursive[2];\n\t                cy = recursive[3];\n\t            }\n\t            var df = f2 - f1;\n\t            if (abs(df) > _120) {\n\t                var f2old = f2,\n\t                    x2old = x2,\n\t                    y2old = y2;\n\t                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n\t                x2 = cx + rx * math.cos(f2);\n\t                y2 = cy + ry * math.sin(f2);\n\t                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n\t            }\n\t            df = f2 - f1;\n\t            var c1 = math.cos(f1),\n\t                s1 = math.sin(f1),\n\t                c2 = math.cos(f2),\n\t                s2 = math.sin(f2),\n\t                t = math.tan(df / 4),\n\t                hx = 4 / 3 * rx * t,\n\t                hy = 4 / 3 * ry * t,\n\t                m1 = [x1, y1],\n\t                m2 = [x1 + hx * s1, y1 - hy * c1],\n\t                m3 = [x2 + hx * s2, y2 - hy * c2],\n\t                m4 = [x2, y2];\n\t            m2[0] = 2 * m1[0] - m2[0];\n\t            m2[1] = 2 * m1[1] - m2[1];\n\t            if (recursive) {\n\t                return [m2, m3, m4][concat](res);\n\t            } else {\n\t                res = [m2, m3, m4][concat](res).join()[split](\",\");\n\t                var newres = [];\n\t                for (var i = 0, ii = res.length; i < ii; i++) {\n\t                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n\t                }\n\t                return newres;\n\t            }\n\t        },\n\t        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t            var t1 = 1 - t;\n\t            return {\n\t                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n\t                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n\t            };\n\t        },\n\t        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\t            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\n\t                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\n\t                c = p1x - c1x,\n\t                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\n\t                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\n\t                y = [p1y, p2y],\n\t                x = [p1x, p2x],\n\t                dot;\n\t            abs(t1) > \"1e12\" && (t1 = .5);\n\t            abs(t2) > \"1e12\" && (t2 = .5);\n\t            if (t1 > 0 && t1 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            if (t2 > 0 && t2 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\n\t            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\n\t            c = p1y - c1y;\n\t            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\n\t            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\n\t            abs(t1) > \"1e12\" && (t1 = .5);\n\t            abs(t2) > \"1e12\" && (t2 = .5);\n\t            if (t1 > 0 && t1 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            if (t2 > 0 && t2 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            return {\n\t                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\n\t                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\n\t            };\n\t        }),\n\t        path2curve = R._path2curve = cacher(function (path, path2) {\n\t            var pth = !path2 && paths(path);\n\t            if (!path2 && pth.curve) {\n\t                return pathClone(pth.curve);\n\t            }\n\t            var p = pathToAbsolute(path),\n\t                p2 = path2 && pathToAbsolute(path2),\n\t                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t                processPath = function (path, d, pcom) {\n\t                    var nx, ny, tq = {T:1, Q:1};\n\t                    if (!path) {\n\t                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n\t                    }\n\t                    !(path[0] in tq) && (d.qx = d.qy = null);\n\t                    switch (path[0]) {\n\t                        case \"M\":\n\t                            d.X = path[1];\n\t                            d.Y = path[2];\n\t                            break;\n\t                        case \"A\":\n\t                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\n\t                            break;\n\t                        case \"S\":\n\t                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n\t                                nx = d.x * 2 - d.bx;          // And reflect the previous\n\t                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n\t                            }\n\t                            else {                            // or some else or nothing\n\t                                nx = d.x;\n\t                                ny = d.y;\n\t                            }\n\t                            path = [\"C\", nx, ny][concat](path.slice(1));\n\t                            break;\n\t                        case \"T\":\n\t                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n\t                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n\t                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\n\t                            }\n\t                            else {                            // or something else or nothing\n\t                                d.qx = d.x;\n\t                                d.qy = d.y;\n\t                            }\n\t                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n\t                            break;\n\t                        case \"Q\":\n\t                            d.qx = path[1];\n\t                            d.qy = path[2];\n\t                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n\t                            break;\n\t                        case \"L\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\n\t                            break;\n\t                        case \"H\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\n\t                            break;\n\t                        case \"V\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\n\t                            break;\n\t                        case \"Z\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\n\t                            break;\n\t                    }\n\t                    return path;\n\t                },\n\t                fixArc = function (pp, i) {\n\t                    if (pp[i].length > 7) {\n\t                        pp[i].shift();\n\t                        var pi = pp[i];\n\t                        while (pi.length) {\n\t                            pcoms1[i]=\"A\"; // if created multiple C:s, their original seg is saved\n\t                            p2 && (pcoms2[i]=\"A\"); // the same as above\n\t                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\n\t                        }\n\t                        pp.splice(i, 1);\n\t                        ii = mmax(p.length, p2 && p2.length || 0);\n\t                    }\n\t                },\n\t                fixM = function (path1, path2, a1, a2, i) {\n\t                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n\t                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n\t                        a1.bx = 0;\n\t                        a1.by = 0;\n\t                        a1.x = path1[i][1];\n\t                        a1.y = path1[i][2];\n\t                        ii = mmax(p.length, p2 && p2.length || 0);\n\t                    }\n\t                },\n\t                pcoms1 = [], // path commands of original path p\n\t                pcoms2 = [], // path commands of original path p2\n\t                pfirst = \"\", // temporary holder for original path command\n\t                pcom = \"\"; // holder for previous path command of original path\n\t            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n\t                p[i] && (pfirst = p[i][0]); // save current path command\n\n\t                if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n\t                {\n\t                    pcoms1[i] = pfirst; // Save current path command\n\t                    i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\n\t                }\n\t                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n\t                if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n\t                // which may produce multiple C:s\n\t                // so we have to make sure that C is also C in original path\n\n\t                fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n\t                if (p2) { // the same procedures is done to p2\n\t                    p2[i] && (pfirst = p2[i][0]);\n\t                    if (pfirst != \"C\")\n\t                    {\n\t                        pcoms2[i] = pfirst;\n\t                        i && (pcom = pcoms2[i-1]);\n\t                    }\n\t                    p2[i] = processPath(p2[i], attrs2, pcom);\n\n\t                    if (pcoms2[i]!=\"A\" && pfirst==\"C\") pcoms2[i]=\"C\";\n\n\t                    fixArc(p2, i);\n\t                }\n\t                fixM(p, p2, attrs, attrs2, i);\n\t                fixM(p2, p, attrs2, attrs, i);\n\t                var seg = p[i],\n\t                    seg2 = p2 && p2[i],\n\t                    seglen = seg.length,\n\t                    seg2len = p2 && seg2.length;\n\t                attrs.x = seg[seglen - 2];\n\t                attrs.y = seg[seglen - 1];\n\t                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n\t                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n\t                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n\t                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n\t                attrs2.x = p2 && seg2[seg2len - 2];\n\t                attrs2.y = p2 && seg2[seg2len - 1];\n\t            }\n\t            if (!p2) {\n\t                pth.curve = pathClone(p);\n\t            }\n\t            return p2 ? [p, p2] : p;\n\t        }, null, pathClone),\n\t        parseDots = R._parseDots = cacher(function (gradient) {\n\t            var dots = [];\n\t            for (var i = 0, ii = gradient.length; i < ii; i++) {\n\t                var dot = {},\n\t                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\n\t                dot.color = R.getRGB(par[1]);\n\t                if (dot.color.error) {\n\t                    return null;\n\t                }\n\t                dot.opacity = dot.color.opacity;\n\t                dot.color = dot.color.hex;\n\t                par[2] && (dot.offset = par[2] + \"%\");\n\t                dots.push(dot);\n\t            }\n\t            for (i = 1, ii = dots.length - 1; i < ii; i++) {\n\t                if (!dots[i].offset) {\n\t                    var start = toFloat(dots[i - 1].offset || 0),\n\t                        end = 0;\n\t                    for (var j = i + 1; j < ii; j++) {\n\t                        if (dots[j].offset) {\n\t                            end = dots[j].offset;\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!end) {\n\t                        end = 100;\n\t                        j = ii;\n\t                    }\n\t                    end = toFloat(end);\n\t                    var d = (end - start) / (j - i + 1);\n\t                    for (; i < j; i++) {\n\t                        start += d;\n\t                        dots[i].offset = start + \"%\";\n\t                    }\n\t                }\n\t            }\n\t            return dots;\n\t        }),\n\t        tear = R._tear = function (el, paper) {\n\t            el == paper.top && (paper.top = el.prev);\n\t            el == paper.bottom && (paper.bottom = el.next);\n\t            el.next && (el.next.prev = el.prev);\n\t            el.prev && (el.prev.next = el.next);\n\t        },\n\t        tofront = R._tofront = function (el, paper) {\n\t            if (paper.top === el) {\n\t                return;\n\t            }\n\t            tear(el, paper);\n\t            el.next = null;\n\t            el.prev = paper.top;\n\t            paper.top.next = el;\n\t            paper.top = el;\n\t        },\n\t        toback = R._toback = function (el, paper) {\n\t            if (paper.bottom === el) {\n\t                return;\n\t            }\n\t            tear(el, paper);\n\t            el.next = paper.bottom;\n\t            el.prev = null;\n\t            paper.bottom.prev = el;\n\t            paper.bottom = el;\n\t        },\n\t        insertafter = R._insertafter = function (el, el2, paper) {\n\t            tear(el, paper);\n\t            el2 == paper.top && (paper.top = el);\n\t            el2.next && (el2.next.prev = el);\n\t            el.next = el2.next;\n\t            el.prev = el2;\n\t            el2.next = el;\n\t        },\n\t        insertbefore = R._insertbefore = function (el, el2, paper) {\n\t            tear(el, paper);\n\t            el2 == paper.bottom && (paper.bottom = el);\n\t            el2.prev && (el2.prev.next = el);\n\t            el.prev = el2.prev;\n\t            el2.prev = el;\n\t            el.next = el2;\n\t        },\n\t        /*\\\n\t         * Raphael.toMatrix\n\t         [ method ]\n\t         **\n\t         * Utility method\n\t         **\n\t         * Returns matrix of transformations applied to a given path\n\t         > Parameters\n\t         - path (string) path string\n\t         - transform (string|array) transformation string\n\t         = (object) @Matrix\n\t        \\*/\n\t        toMatrix = R.toMatrix = function (path, transform) {\n\t            var bb = pathDimensions(path),\n\t                el = {\n\t                    _: {\n\t                        transform: E\n\t                    },\n\t                    getBBox: function () {\n\t                        return bb;\n\t                    }\n\t                };\n\t            extractTransform(el, transform);\n\t            return el.matrix;\n\t        },\n\t        /*\\\n\t         * Raphael.transformPath\n\t         [ method ]\n\t         **\n\t         * Utility method\n\t         **\n\t         * Returns path transformed by a given transformation\n\t         > Parameters\n\t         - path (string) path string\n\t         - transform (string|array) transformation string\n\t         = (string) path\n\t        \\*/\n\t        transformPath = R.transformPath = function (path, transform) {\n\t            return mapPath(path, toMatrix(path, transform));\n\t        },\n\t        extractTransform = R._extractTransform = function (el, tstr) {\n\t            if (tstr == null) {\n\t                return el._.transform;\n\t            }\n\t            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n\t            var tdata = R.parseTransformString(tstr),\n\t                deg = 0,\n\t                dx = 0,\n\t                dy = 0,\n\t                sx = 1,\n\t                sy = 1,\n\t                _ = el._,\n\t                m = new Matrix;\n\t            _.transform = tdata || [];\n\t            if (tdata) {\n\t                for (var i = 0, ii = tdata.length; i < ii; i++) {\n\t                    var t = tdata[i],\n\t                        tlen = t.length,\n\t                        command = Str(t[0]).toLowerCase(),\n\t                        absolute = t[0] != command,\n\t                        inver = absolute ? m.invert() : 0,\n\t                        x1,\n\t                        y1,\n\t                        x2,\n\t                        y2,\n\t                        bb;\n\t                    if (command == \"t\" && tlen == 3) {\n\t                        if (absolute) {\n\t                            x1 = inver.x(0, 0);\n\t                            y1 = inver.y(0, 0);\n\t                            x2 = inver.x(t[1], t[2]);\n\t                            y2 = inver.y(t[1], t[2]);\n\t                            m.translate(x2 - x1, y2 - y1);\n\t                        } else {\n\t                            m.translate(t[1], t[2]);\n\t                        }\n\t                    } else if (command == \"r\") {\n\t                        if (tlen == 2) {\n\t                            bb = bb || el.getBBox(1);\n\t                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                            deg += t[1];\n\t                        } else if (tlen == 4) {\n\t                            if (absolute) {\n\t                                x2 = inver.x(t[2], t[3]);\n\t                                y2 = inver.y(t[2], t[3]);\n\t                                m.rotate(t[1], x2, y2);\n\t                            } else {\n\t                                m.rotate(t[1], t[2], t[3]);\n\t                            }\n\t                            deg += t[1];\n\t                        }\n\t                    } else if (command == \"s\") {\n\t                        if (tlen == 2 || tlen == 3) {\n\t                            bb = bb || el.getBBox(1);\n\t                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                            sx *= t[1];\n\t                            sy *= t[tlen - 1];\n\t                        } else if (tlen == 5) {\n\t                            if (absolute) {\n\t                                x2 = inver.x(t[3], t[4]);\n\t                                y2 = inver.y(t[3], t[4]);\n\t                                m.scale(t[1], t[2], x2, y2);\n\t                            } else {\n\t                                m.scale(t[1], t[2], t[3], t[4]);\n\t                            }\n\t                            sx *= t[1];\n\t                            sy *= t[2];\n\t                        }\n\t                    } else if (command == \"m\" && tlen == 7) {\n\t                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n\t                    }\n\t                    _.dirtyT = 1;\n\t                    el.matrix = m;\n\t                }\n\t            }\n\n\t            /*\\\n\t             * Element.matrix\n\t             [ property (object) ]\n\t             **\n\t             * Keeps @Matrix object, which represents element transformation\n\t            \\*/\n\t            el.matrix = m;\n\n\t            _.sx = sx;\n\t            _.sy = sy;\n\t            _.deg = deg;\n\t            _.dx = dx = m.e;\n\t            _.dy = dy = m.f;\n\n\t            if (sx == 1 && sy == 1 && !deg && _.bbox) {\n\t                _.bbox.x += +dx;\n\t                _.bbox.y += +dy;\n\t            } else {\n\t                _.dirtyT = 1;\n\t            }\n\t        },\n\t        getEmpty = function (item) {\n\t            var l = item[0];\n\t            switch (l.toLowerCase()) {\n\t                case \"t\": return [l, 0, 0];\n\t                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n\t                case \"r\": if (item.length == 4) {\n\t                    return [l, 0, item[2], item[3]];\n\t                } else {\n\t                    return [l, 0];\n\t                }\n\t                case \"s\": if (item.length == 5) {\n\t                    return [l, 1, 1, item[3], item[4]];\n\t                } else if (item.length == 3) {\n\t                    return [l, 1, 1];\n\t                } else {\n\t                    return [l, 1];\n\t                }\n\t            }\n\t        },\n\t        equaliseTransform = R._equaliseTransform = function (t1, t2) {\n\t            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n\t            t1 = R.parseTransformString(t1) || [];\n\t            t2 = R.parseTransformString(t2) || [];\n\t            var maxlength = mmax(t1.length, t2.length),\n\t                from = [],\n\t                to = [],\n\t                i = 0, j, jj,\n\t                tt1, tt2;\n\t            for (; i < maxlength; i++) {\n\t                tt1 = t1[i] || getEmpty(t2[i]);\n\t                tt2 = t2[i] || getEmpty(tt1);\n\t                if ((tt1[0] != tt2[0]) ||\n\t                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n\t                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n\t                    ) {\n\t                    return;\n\t                }\n\t                from[i] = [];\n\t                to[i] = [];\n\t                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\n\t                    j in tt1 && (from[i][j] = tt1[j]);\n\t                    j in tt2 && (to[i][j] = tt2[j]);\n\t                }\n\t            }\n\t            return {\n\t                from: from,\n\t                to: to\n\t            };\n\t        };\n\t    R._getContainer = function (x, y, w, h) {\n\t        var container;\n\t        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\n\t        if (container == null) {\n\t            return;\n\t        }\n\t        if (container.tagName) {\n\t            if (y == null) {\n\t                return {\n\t                    container: container,\n\t                    width: container.style.pixelWidth || container.offsetWidth,\n\t                    height: container.style.pixelHeight || container.offsetHeight\n\t                };\n\t            } else {\n\t                return {\n\t                    container: container,\n\t                    width: y,\n\t                    height: w\n\t                };\n\t            }\n\t        }\n\t        return {\n\t            container: 1,\n\t            x: x,\n\t            y: y,\n\t            width: w,\n\t            height: h\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.pathToRelative\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path to relative form\n\t     > Parameters\n\t     - pathString (string|array) path string or array of segments\n\t     = (array) array of segments.\n\t    \\*/\n\t    R.pathToRelative = pathToRelative;\n\t    R._engine = {};\n\t    /*\\\n\t     * Raphael.path2curve\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path to a new path where all segments are cubic bezier curves.\n\t     > Parameters\n\t     - pathString (string|array) path string or array of segments\n\t     = (array) array of segments.\n\t    \\*/\n\t    R.path2curve = path2curve;\n\t    /*\\\n\t     * Raphael.matrix\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns matrix based on given parameters.\n\t     > Parameters\n\t     - a (number)\n\t     - b (number)\n\t     - c (number)\n\t     - d (number)\n\t     - e (number)\n\t     - f (number)\n\t     = (object) @Matrix\n\t    \\*/\n\t    R.matrix = function (a, b, c, d, e, f) {\n\t        return new Matrix(a, b, c, d, e, f);\n\t    };\n\t    function Matrix(a, b, c, d, e, f) {\n\t        if (a != null) {\n\t            this.a = +a;\n\t            this.b = +b;\n\t            this.c = +c;\n\t            this.d = +d;\n\t            this.e = +e;\n\t            this.f = +f;\n\t        } else {\n\t            this.a = 1;\n\t            this.b = 0;\n\t            this.c = 0;\n\t            this.d = 1;\n\t            this.e = 0;\n\t            this.f = 0;\n\t        }\n\t    }\n\t    (function (matrixproto) {\n\t        /*\\\n\t         * Matrix.add\n\t         [ method ]\n\t         **\n\t         * Adds given matrix to existing one.\n\t         > Parameters\n\t         - a (number)\n\t         - b (number)\n\t         - c (number)\n\t         - d (number)\n\t         - e (number)\n\t         - f (number)\n\t         or\n\t         - matrix (object) @Matrix\n\t        \\*/\n\t        matrixproto.add = function (a, b, c, d, e, f) {\n\t            var out = [[], [], []],\n\t                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n\t                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n\t                x, y, z, res;\n\n\t            if (a && a instanceof Matrix) {\n\t                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n\t            }\n\n\t            for (x = 0; x < 3; x++) {\n\t                for (y = 0; y < 3; y++) {\n\t                    res = 0;\n\t                    for (z = 0; z < 3; z++) {\n\t                        res += m[x][z] * matrix[z][y];\n\t                    }\n\t                    out[x][y] = res;\n\t                }\n\t            }\n\t            this.a = out[0][0];\n\t            this.b = out[1][0];\n\t            this.c = out[0][1];\n\t            this.d = out[1][1];\n\t            this.e = out[0][2];\n\t            this.f = out[1][2];\n\t        };\n\t        /*\\\n\t         * Matrix.invert\n\t         [ method ]\n\t         **\n\t         * Returns inverted version of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.invert = function () {\n\t            var me = this,\n\t                x = me.a * me.d - me.b * me.c;\n\t            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n\t        };\n\t        /*\\\n\t         * Matrix.clone\n\t         [ method ]\n\t         **\n\t         * Returns copy of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.clone = function () {\n\t            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n\t        };\n\t        /*\\\n\t         * Matrix.translate\n\t         [ method ]\n\t         **\n\t         * Translate the matrix\n\t         > Parameters\n\t         - x (number)\n\t         - y (number)\n\t        \\*/\n\t        matrixproto.translate = function (x, y) {\n\t            this.add(1, 0, 0, 1, x, y);\n\t        };\n\t        /*\\\n\t         * Matrix.scale\n\t         [ method ]\n\t         **\n\t         * Scales the matrix\n\t         > Parameters\n\t         - x (number)\n\t         - y (number) #optional\n\t         - cx (number) #optional\n\t         - cy (number) #optional\n\t        \\*/\n\t        matrixproto.scale = function (x, y, cx, cy) {\n\t            y == null && (y = x);\n\t            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n\t            this.add(x, 0, 0, y, 0, 0);\n\t            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n\t        };\n\t        /*\\\n\t         * Matrix.rotate\n\t         [ method ]\n\t         **\n\t         * Rotates the matrix\n\t         > Parameters\n\t         - a (number)\n\t         - x (number)\n\t         - y (number)\n\t        \\*/\n\t        matrixproto.rotate = function (a, x, y) {\n\t            a = R.rad(a);\n\t            x = x || 0;\n\t            y = y || 0;\n\t            var cos = +math.cos(a).toFixed(9),\n\t                sin = +math.sin(a).toFixed(9);\n\t            this.add(cos, sin, -sin, cos, x, y);\n\t            this.add(1, 0, 0, 1, -x, -y);\n\t        };\n\t        /*\\\n\t         * Matrix.x\n\t         [ method ]\n\t         **\n\t         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n\t         > Parameters\n\t         - x (number)\n\t         - y (number)\n\t         = (number) x\n\t        \\*/\n\t        matrixproto.x = function (x, y) {\n\t            return x * this.a + y * this.c + this.e;\n\t        };\n\t        /*\\\n\t         * Matrix.y\n\t         [ method ]\n\t         **\n\t         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n\t         > Parameters\n\t         - x (number)\n\t         - y (number)\n\t         = (number) y\n\t        \\*/\n\t        matrixproto.y = function (x, y) {\n\t            return x * this.b + y * this.d + this.f;\n\t        };\n\t        matrixproto.get = function (i) {\n\t            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n\t        };\n\t        matrixproto.toString = function () {\n\t            return R.svg ?\n\t                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\n\t                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\n\t        };\n\t        matrixproto.toFilter = function () {\n\t            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\n\t                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\n\t                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\n\t        };\n\t        matrixproto.offset = function () {\n\t            return [this.e.toFixed(4), this.f.toFixed(4)];\n\t        };\n\t        function norm(a) {\n\t            return a[0] * a[0] + a[1] * a[1];\n\t        }\n\t        function normalize(a) {\n\t            var mag = math.sqrt(norm(a));\n\t            a[0] && (a[0] /= mag);\n\t            a[1] && (a[1] /= mag);\n\t        }\n\t        /*\\\n\t         * Matrix.split\n\t         [ method ]\n\t         **\n\t         * Splits matrix into primitive transformations\n\t         = (object) in format:\n\t         o dx (number) translation by x\n\t         o dy (number) translation by y\n\t         o scalex (number) scale by x\n\t         o scaley (number) scale by y\n\t         o shear (number) shear\n\t         o rotate (number) rotation in deg\n\t         o isSimple (boolean) could it be represented via simple transformations\n\t        \\*/\n\t        matrixproto.split = function () {\n\t            var out = {};\n\t            // translation\n\t            out.dx = this.e;\n\t            out.dy = this.f;\n\n\t            // scale and shear\n\t            var row = [[this.a, this.c], [this.b, this.d]];\n\t            out.scalex = math.sqrt(norm(row[0]));\n\t            normalize(row[0]);\n\n\t            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n\t            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n\t            out.scaley = math.sqrt(norm(row[1]));\n\t            normalize(row[1]);\n\t            out.shear /= out.scaley;\n\n\t            // rotation\n\t            var sin = -row[0][1],\n\t                cos = row[1][1];\n\t            if (cos < 0) {\n\t                out.rotate = R.deg(math.acos(cos));\n\t                if (sin < 0) {\n\t                    out.rotate = 360 - out.rotate;\n\t                }\n\t            } else {\n\t                out.rotate = R.deg(math.asin(sin));\n\t            }\n\n\t            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n\t            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n\t            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n\t            return out;\n\t        };\n\t        /*\\\n\t         * Matrix.toTransformString\n\t         [ method ]\n\t         **\n\t         * Return transform string that represents given matrix\n\t         = (string) transform string\n\t        \\*/\n\t        matrixproto.toTransformString = function (shorter) {\n\t            var s = shorter || this[split]();\n\t            if (s.isSimple) {\n\t                s.scalex = +s.scalex.toFixed(4);\n\t                s.scaley = +s.scaley.toFixed(4);\n\t                s.rotate = +s.rotate.toFixed(4);\n\t                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\n\t                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n\t                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\n\t            } else {\n\t                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n\t            }\n\t        };\n\t    })(Matrix.prototype);\n\n\t    var preventDefault = function () {\n\t        this.returnValue = false;\n\t    },\n\t    preventTouch = function () {\n\t        return this.originalEvent.preventDefault();\n\t    },\n\t    stopPropagation = function () {\n\t        this.cancelBubble = true;\n\t    },\n\t    stopTouch = function () {\n\t        return this.originalEvent.stopPropagation();\n\t    },\n\t    getEventPosition = function (e) {\n\t        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n\n\t        return {\n\t            x: e.clientX + scrollX,\n\t            y: e.clientY + scrollY\n\t        };\n\t    },\n\t    addEvent = (function () {\n\t        if (g.doc.addEventListener) {\n\t            return function (obj, type, fn, element) {\n\t                var f = function (e) {\n\t                    var pos = getEventPosition(e);\n\t                    return fn.call(element, e, pos.x, pos.y);\n\t                };\n\t                obj.addEventListener(type, f, false);\n\n\t                if (supportsTouch && touchMap[type]) {\n\t                    var _f = function (e) {\n\t                        var pos = getEventPosition(e),\n\t                            olde = e;\n\n\t                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n\t                            if (e.targetTouches[i].target == obj) {\n\t                                e = e.targetTouches[i];\n\t                                e.originalEvent = olde;\n\t                                e.preventDefault = preventTouch;\n\t                                e.stopPropagation = stopTouch;\n\t                                break;\n\t                            }\n\t                        }\n\n\t                        return fn.call(element, e, pos.x, pos.y);\n\t                    };\n\t                    obj.addEventListener(touchMap[type], _f, false);\n\t                }\n\n\t                return function () {\n\t                    obj.removeEventListener(type, f, false);\n\n\t                    if (supportsTouch && touchMap[type])\n\t                        obj.removeEventListener(touchMap[type], _f, false);\n\n\t                    return true;\n\t                };\n\t            };\n\t        } else if (g.doc.attachEvent) {\n\t            return function (obj, type, fn, element) {\n\t                var f = function (e) {\n\t                    e = e || g.win.event;\n\t                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n\t                        x = e.clientX + scrollX,\n\t                        y = e.clientY + scrollY;\n\t                    e.preventDefault = e.preventDefault || preventDefault;\n\t                    e.stopPropagation = e.stopPropagation || stopPropagation;\n\t                    return fn.call(element, e, x, y);\n\t                };\n\t                obj.attachEvent(\"on\" + type, f);\n\t                var detacher = function () {\n\t                    obj.detachEvent(\"on\" + type, f);\n\t                    return true;\n\t                };\n\t                return detacher;\n\t            };\n\t        }\n\t    })(),\n\t    drag = [],\n\t    dragMove = function (e) {\n\t        var x = e.clientX,\n\t            y = e.clientY,\n\t            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n\t            dragi,\n\t            j = drag.length;\n\t        while (j--) {\n\t            dragi = drag[j];\n\t            if (supportsTouch && e.touches) {\n\t                var i = e.touches.length,\n\t                    touch;\n\t                while (i--) {\n\t                    touch = e.touches[i];\n\t                    if (touch.identifier == dragi.el._drag.id) {\n\t                        x = touch.clientX;\n\t                        y = touch.clientY;\n\t                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n\t                        break;\n\t                    }\n\t                }\n\t            } else {\n\t                e.preventDefault();\n\t            }\n\t            var node = dragi.el.node,\n\t                o,\n\t                next = node.nextSibling,\n\t                parent = node.parentNode,\n\t                display = node.style.display;\n\t            g.win.opera && parent.removeChild(node);\n\t            node.style.display = \"none\";\n\t            o = dragi.el.paper.getElementByPoint(x, y);\n\t            node.style.display = display;\n\t            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n\t            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\n\t            x += scrollX;\n\t            y += scrollY;\n\t            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n\t        }\n\t    },\n\t    dragUp = function (e) {\n\t        R.unmousemove(dragMove).unmouseup(dragUp);\n\t        var i = drag.length,\n\t            dragi;\n\t        while (i--) {\n\t            dragi = drag[i];\n\t            dragi.el._drag = {};\n\t            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n\t        }\n\t        drag = [];\n\t    },\n\t    /*\\\n\t     * Raphael.el\n\t     [ property (object) ]\n\t     **\n\t     * You can add your own method to elements. This is useful when you want to hack default functionality or\n\t     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\n\t     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\n\t     > Usage\n\t     | Raphael.el.red = function () {\n\t     |     this.attr({fill: \"#f00\"});\n\t     | };\n\t     | // then use it\n\t     | paper.circle(100, 100, 20).red();\n\t    \\*/\n\t    elproto = R.el = {};\n\t    /*\\\n\t     * Element.click\n\t     [ method ]\n\t     **\n\t     * Adds event handler for click for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unclick\n\t     [ method ]\n\t     **\n\t     * Removes event handler for click for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.dblclick\n\t     [ method ]\n\t     **\n\t     * Adds event handler for double click for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.undblclick\n\t     [ method ]\n\t     **\n\t     * Removes event handler for double click for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mousedown\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mousedown for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousedown\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mousedown for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mousemove\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mousemove for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousemove\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mousemove for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mouseout\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mouseout for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseout\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mouseout for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mouseover\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mouseover for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseover\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mouseover for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mouseup\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mouseup for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseup\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mouseup for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchstart\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchstart for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchstart\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchstart for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchmove\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchmove for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchmove\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchmove for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchend\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchend for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchend\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchend for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchcancel\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchcancel for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchcancel\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchcancel for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    for (var i = events.length; i--;) {\n\t        (function (eventName) {\n\t            R[eventName] = elproto[eventName] = function (fn, scope) {\n\t                if (R.is(fn, \"function\")) {\n\t                    this.events = this.events || [];\n\t                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\n\t                }\n\t                return this;\n\t            };\n\t            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n\t                var events = this.events || [],\n\t                    l = events.length;\n\t                while (l--){\n\t                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\n\t                        events[l].unbind();\n\t                        events.splice(l, 1);\n\t                        !events.length && delete this.events;\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t        })(events[i]);\n\t    }\n\n\t    /*\\\n\t     * Element.data\n\t     [ method ]\n\t     **\n\t     * Adds or retrieves given value associated with given key.\n\t     **\n\t     * See also @Element.removeData\n\t     > Parameters\n\t     - key (string) key to store data\n\t     - value (any) #optional value to store\n\t     = (object) @Element\n\t     * or, if value is not specified:\n\t     = (any) value\n\t     * or, if key and value are not specified:\n\t     = (object) Key/value pairs for all the data associated with the element.\n\t     > Usage\n\t     | for (var i = 0, i < 5, i++) {\n\t     |     paper.circle(10 + 15 * i, 10, 10)\n\t     |          .attr({fill: \"#000\"})\n\t     |          .data(\"i\", i)\n\t     |          .click(function () {\n\t     |             alert(this.data(\"i\"));\n\t     |          });\n\t     | }\n\t    \\*/\n\t    elproto.data = function (key, value) {\n\t        var data = eldata[this.id] = eldata[this.id] || {};\n\t        if (arguments.length == 0) {\n\t            return data;\n\t        }\n\t        if (arguments.length == 1) {\n\t            if (R.is(key, \"object\")) {\n\t                for (var i in key) if (key[has](i)) {\n\t                    this.data(i, key[i]);\n\t                }\n\t                return this;\n\t            }\n\t            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\n\t            return data[key];\n\t        }\n\t        data[key] = value;\n\t        eve(\"raphael.data.set.\" + this.id, this, value, key);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.removeData\n\t     [ method ]\n\t     **\n\t     * Removes value associated with an element by given key.\n\t     * If key is not provided, removes all the data of the element.\n\t     > Parameters\n\t     - key (string) #optional key\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.removeData = function (key) {\n\t        if (key == null) {\n\t            eldata[this.id] = {};\n\t        } else {\n\t            eldata[this.id] && delete eldata[this.id][key];\n\t        }\n\t        return this;\n\t    };\n\t     /*\\\n\t     * Element.getData\n\t     [ method ]\n\t     **\n\t     * Retrieves the element data\n\t     = (object) data\n\t    \\*/\n\t    elproto.getData = function () {\n\t        return clone(eldata[this.id] || {});\n\t    };\n\t    /*\\\n\t     * Element.hover\n\t     [ method ]\n\t     **\n\t     * Adds event handlers for hover for the element.\n\t     > Parameters\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     - icontext (object) #optional context for hover in handler\n\t     - ocontext (object) #optional context for hover out handler\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n\t        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n\t    };\n\t    /*\\\n\t     * Element.unhover\n\t     [ method ]\n\t     **\n\t     * Removes event handlers for hover for the element.\n\t     > Parameters\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.unhover = function (f_in, f_out) {\n\t        return this.unmouseover(f_in).unmouseout(f_out);\n\t    };\n\t    var draggable = [];\n\t    /*\\\n\t     * Element.drag\n\t     [ method ]\n\t     **\n\t     * Adds event handlers for drag of the element.\n\t     > Parameters\n\t     - onmove (function) handler for moving\n\t     - onstart (function) handler for drag start\n\t     - onend (function) handler for drag end\n\t     - mcontext (object) #optional context for moving handler\n\t     - scontext (object) #optional context for drag start handler\n\t     - econtext (object) #optional context for drag end handler\n\t     * Additionally following `drag` events will be triggered: `drag.start.<id>` on start,\n\t     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\n\t     * `drag.over.<id>` will be fired as well.\n\t     *\n\t     * Start event and start handler will be called in specified context or in context of the element with following parameters:\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * Move event and move handler will be called in specified context or in context of the element with following parameters:\n\t     o dx (number) shift by x from the start point\n\t     o dy (number) shift by y from the start point\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * End event and end handler will be called in specified context or in context of the element with following parameters:\n\t     o event (object) DOM event object\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n\t        function start(e) {\n\t            (e.originalEvent || e).preventDefault();\n\t            var x = e.clientX,\n\t                y = e.clientY,\n\t                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n\t            this._drag.id = e.identifier;\n\t            if (supportsTouch && e.touches) {\n\t                var i = e.touches.length, touch;\n\t                while (i--) {\n\t                    touch = e.touches[i];\n\t                    this._drag.id = touch.identifier;\n\t                    if (touch.identifier == this._drag.id) {\n\t                        x = touch.clientX;\n\t                        y = touch.clientY;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            this._drag.x = x + scrollX;\n\t            this._drag.y = y + scrollY;\n\t            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\n\t            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n\t            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\n\t            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\n\t            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\n\t            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\n\t        }\n\t        this._drag = {};\n\t        draggable.push({el: this, start: start});\n\t        this.mousedown(start);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.onDragOver\n\t     [ method ]\n\t     **\n\t     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\n\t     > Parameters\n\t     - f (function) handler for event, first argument would be the element you are dragging over\n\t    \\*/\n\t    elproto.onDragOver = function (f) {\n\t        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\n\t    };\n\t    /*\\\n\t     * Element.undrag\n\t     [ method ]\n\t     **\n\t     * Removes all drag event handlers from given element.\n\t    \\*/\n\t    elproto.undrag = function () {\n\t        var i = draggable.length;\n\t        while (i--) if (draggable[i].el == this) {\n\t            this.unmousedown(draggable[i].start);\n\t            draggable.splice(i, 1);\n\t            eve.unbind(\"raphael.drag.*.\" + this.id);\n\t        }\n\t        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\n\t        drag = [];\n\t    };\n\t    /*\\\n\t     * Paper.circle\n\t     [ method ]\n\t     **\n\t     * Draws a circle.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - r (number) radius\n\t     = (object) Raphaël element object with type “circle”\n\t     **\n\t     > Usage\n\t     | var c = paper.circle(50, 50, 40);\n\t    \\*/\n\t    paperproto.circle = function (x, y, r) {\n\t        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.rect\n\t     [ method ]\n\t     *\n\t     * Draws a rectangle.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the top left corner\n\t     - y (number) y coordinate of the top left corner\n\t     - width (number) width\n\t     - height (number) height\n\t     - r (number) #optional radius for rounded corners, default is 0\n\t     = (object) Raphaël element object with type “rect”\n\t     **\n\t     > Usage\n\t     | // regular rectangle\n\t     | var c = paper.rect(10, 10, 50, 50);\n\t     | // rectangle with rounded corners\n\t     | var c = paper.rect(40, 40, 50, 50, 10);\n\t    \\*/\n\t    paperproto.rect = function (x, y, w, h, r) {\n\t        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.ellipse\n\t     [ method ]\n\t     **\n\t     * Draws an ellipse.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - rx (number) horizontal radius\n\t     - ry (number) vertical radius\n\t     = (object) Raphaël element object with type “ellipse”\n\t     **\n\t     > Usage\n\t     | var c = paper.ellipse(50, 50, 40, 20);\n\t    \\*/\n\t    paperproto.ellipse = function (x, y, rx, ry) {\n\t        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.path\n\t     [ method ]\n\t     **\n\t     * Creates a path element by given path data string.\n\t     > Parameters\n\t     - pathString (string) #optional path string in SVG format.\n\t     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\n\t     | \"M10,20L30,40\"\n\t     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\n\t     *\n\t     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\n\t     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n\t     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n\t     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n\t     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n\t     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n\t     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n\t     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n\t     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n\t     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n\t     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n\t     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\n\t     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\n\t     > Usage\n\t     | var c = paper.path(\"M10 10L90 90\");\n\t     | // draw a diagonal line:\n\t     | // move to 10,10, line to 90,90\n\t     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\n\t    \\*/\n\t    paperproto.path = function (pathString) {\n\t        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\n\t        var out = R._engine.path(R.format[apply](R, arguments), this);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.image\n\t     [ method ]\n\t     **\n\t     * Embeds an image into the surface.\n\t     **\n\t     > Parameters\n\t     **\n\t     - src (string) URI of the source image\n\t     - x (number) x coordinate position\n\t     - y (number) y coordinate position\n\t     - width (number) width of the image\n\t     - height (number) height of the image\n\t     = (object) Raphaël element object with type “image”\n\t     **\n\t     > Usage\n\t     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n\t    \\*/\n\t    paperproto.image = function (src, x, y, w, h) {\n\t        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.text\n\t     [ method ]\n\t     **\n\t     * Draws a text string. If you need line breaks, put “\\n” in the string.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate position\n\t     - y (number) y coordinate position\n\t     - text (string) The text string to draw\n\t     = (object) Raphaël element object with type “text”\n\t     **\n\t     > Usage\n\t     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\n\t    \\*/\n\t    paperproto.text = function (x, y, text) {\n\t        var out = R._engine.text(this, x || 0, y || 0, Str(text));\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.set\n\t     [ method ]\n\t     **\n\t     * Creates array-like object to keep and operate several elements at once.\n\t     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\n\t     * Sets act as pseudo elements — all methods available to an element can be used on a set.\n\t     = (object) array-like object that represents set of elements\n\t     **\n\t     > Usage\n\t     | var st = paper.set();\n\t     | st.push(\n\t     |     paper.circle(10, 10, 5),\n\t     |     paper.circle(30, 10, 5)\n\t     | );\n\t     | st.attr({fill: \"red\"}); // changes the fill of both circles\n\t    \\*/\n\t    paperproto.set = function (itemsArray) {\n\t        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\n\t        var out = new Set(itemsArray);\n\t        this.__set__ && this.__set__.push(out);\n\t        out[\"paper\"] = this;\n\t        out[\"type\"] = \"set\";\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.setStart\n\t     [ method ]\n\t     **\n\t     * Creates @Paper.set. All elements that will be created after calling this method and before calling\n\t     * @Paper.setFinish will be added to the set.\n\t     **\n\t     > Usage\n\t     | paper.setStart();\n\t     | paper.circle(10, 10, 5),\n\t     | paper.circle(30, 10, 5)\n\t     | var st = paper.setFinish();\n\t     | st.attr({fill: \"red\"}); // changes the fill of both circles\n\t    \\*/\n\t    paperproto.setStart = function (set) {\n\t        this.__set__ = set || this.set();\n\t    };\n\t    /*\\\n\t     * Paper.setFinish\n\t     [ method ]\n\t     **\n\t     * See @Paper.setStart. This method finishes catching and returns resulting set.\n\t     **\n\t     = (object) set\n\t    \\*/\n\t    paperproto.setFinish = function (set) {\n\t        var out = this.__set__;\n\t        delete this.__set__;\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.getSize\n\t     [ method ]\n\t     **\n\t     * Obtains current paper actual size.\n\t     **\n\t     = (object)\n\t     \\*/\n\t    paperproto.getSize = function () {\n\t        var container = this.canvas.parentNode;\n\t        return {\n\t            width: container.offsetWidth,\n\t            height: container.offsetHeight\n\t                };\n\t        };\n\t    /*\\\n\t     * Paper.setSize\n\t     [ method ]\n\t     **\n\t     * If you need to change dimensions of the canvas call this method\n\t     **\n\t     > Parameters\n\t     **\n\t     - width (number) new width of the canvas\n\t     - height (number) new height of the canvas\n\t    \\*/\n\t    paperproto.setSize = function (width, height) {\n\t        return R._engine.setSize.call(this, width, height);\n\t    };\n\t    /*\\\n\t     * Paper.setViewBox\n\t     [ method ]\n\t     **\n\t     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\n\t     * specifying new boundaries.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) new x position, default is `0`\n\t     - y (number) new y position, default is `0`\n\t     - w (number) new width of the canvas\n\t     - h (number) new height of the canvas\n\t     - fit (boolean) `true` if you want graphics to fit into new boundary box\n\t    \\*/\n\t    paperproto.setViewBox = function (x, y, w, h, fit) {\n\t        return R._engine.setViewBox.call(this, x, y, w, h, fit);\n\t    };\n\t    /*\\\n\t     * Paper.top\n\t     [ property ]\n\t     **\n\t     * Points to the topmost element on the paper\n\t    \\*/\n\t    /*\\\n\t     * Paper.bottom\n\t     [ property ]\n\t     **\n\t     * Points to the bottom element on the paper\n\t    \\*/\n\t    paperproto.top = paperproto.bottom = null;\n\t    /*\\\n\t     * Paper.raphael\n\t     [ property ]\n\t     **\n\t     * Points to the @Raphael object/function\n\t    \\*/\n\t    paperproto.raphael = R;\n\t    var getOffset = function (elem) {\n\t        var box = elem.getBoundingClientRect(),\n\t            doc = elem.ownerDocument,\n\t            body = doc.body,\n\t            docElem = doc.documentElement,\n\t            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n\t            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n\t            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n\t        return {\n\t            y: top,\n\t            x: left\n\t        };\n\t    };\n\t    /*\\\n\t     * Paper.getElementByPoint\n\t     [ method ]\n\t     **\n\t     * Returns you topmost element under given point.\n\t     **\n\t     = (object) Raphaël element object\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate from the top left corner of the window\n\t     - y (number) y coordinate from the top left corner of the window\n\t     > Usage\n\t     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\t    \\*/\n\t    paperproto.getElementByPoint = function (x, y) {\n\t        var paper = this,\n\t            svg = paper.canvas,\n\t            target = g.doc.elementFromPoint(x, y);\n\t        if (g.win.opera && target.tagName == \"svg\") {\n\t            var so = getOffset(svg),\n\t                sr = svg.createSVGRect();\n\t            sr.x = x - so.x;\n\t            sr.y = y - so.y;\n\t            sr.width = sr.height = 1;\n\t            var hits = svg.getIntersectionList(sr, null);\n\t            if (hits.length) {\n\t                target = hits[hits.length - 1];\n\t            }\n\t        }\n\t        if (!target) {\n\t            return null;\n\t        }\n\t        while (target.parentNode && target != svg.parentNode && !target.raphael) {\n\t            target = target.parentNode;\n\t        }\n\t        target == paper.canvas.parentNode && (target = svg);\n\t        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\n\t        return target;\n\t    };\n\n\t    /*\\\n\t     * Paper.getElementsByBBox\n\t     [ method ]\n\t     **\n\t     * Returns set of elements that have an intersecting bounding box\n\t     **\n\t     > Parameters\n\t     **\n\t     - bbox (object) bbox to check with\n\t     = (object) @Set\n\t     \\*/\n\t    paperproto.getElementsByBBox = function (bbox) {\n\t        var set = this.set();\n\t        this.forEach(function (el) {\n\t            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\n\t                set.push(el);\n\t            }\n\t        });\n\t        return set;\n\t    };\n\n\t    /*\\\n\t     * Paper.getById\n\t     [ method ]\n\t     **\n\t     * Returns you element by its internal ID.\n\t     **\n\t     > Parameters\n\t     **\n\t     - id (number) id\n\t     = (object) Raphaël element object\n\t    \\*/\n\t    paperproto.getById = function (id) {\n\t        var bot = this.bottom;\n\t        while (bot) {\n\t            if (bot.id == id) {\n\t                return bot;\n\t            }\n\t            bot = bot.next;\n\t        }\n\t        return null;\n\t    };\n\t    /*\\\n\t     * Paper.forEach\n\t     [ method ]\n\t     **\n\t     * Executes given function for each element on the paper\n\t     *\n\t     * If callback function returns `false` it will stop loop running.\n\t     **\n\t     > Parameters\n\t     **\n\t     - callback (function) function to run\n\t     - thisArg (object) context object for the callback\n\t     = (object) Paper object\n\t     > Usage\n\t     | paper.forEach(function (el) {\n\t     |     el.attr({ stroke: \"blue\" });\n\t     | });\n\t    \\*/\n\t    paperproto.forEach = function (callback, thisArg) {\n\t        var bot = this.bottom;\n\t        while (bot) {\n\t            if (callback.call(thisArg, bot) === false) {\n\t                return this;\n\t            }\n\t            bot = bot.next;\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Paper.getElementsByPoint\n\t     [ method ]\n\t     **\n\t     * Returns set of elements that have common point inside\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the point\n\t     - y (number) y coordinate of the point\n\t     = (object) @Set\n\t    \\*/\n\t    paperproto.getElementsByPoint = function (x, y) {\n\t        var set = this.set();\n\t        this.forEach(function (el) {\n\t            if (el.isPointInside(x, y)) {\n\t                set.push(el);\n\t            }\n\t        });\n\t        return set;\n\t    };\n\t    function x_y() {\n\t        return this.x + S + this.y;\n\t    }\n\t    function x_y_w_h() {\n\t        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n\t    }\n\t    /*\\\n\t     * Element.isPointInside\n\t     [ method ]\n\t     **\n\t     * Determine if given point is inside this element’s shape\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the point\n\t     - y (number) y coordinate of the point\n\t     = (boolean) `true` if point inside the shape\n\t    \\*/\n\t    elproto.isPointInside = function (x, y) {\n\t        var rp = this.realPath = getPath[this.type](this);\n\t        if (this.attr('transform') && this.attr('transform').length) {\n\t            rp = R.transformPath(rp, this.attr('transform'));\n\t        }\n\t        return R.isPointInsidePath(rp, x, y);\n\t    };\n\t    /*\\\n\t     * Element.getBBox\n\t     [ method ]\n\t     **\n\t     * Return bounding box for a given element\n\t     **\n\t     > Parameters\n\t     **\n\t     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\n\t     = (object) Bounding box object:\n\t     o {\n\t     o     x: (number) top left corner x\n\t     o     y: (number) top left corner y\n\t     o     x2: (number) bottom right corner x\n\t     o     y2: (number) bottom right corner y\n\t     o     width: (number) width\n\t     o     height: (number) height\n\t     o }\n\t    \\*/\n\t    elproto.getBBox = function (isWithoutTransform) {\n\t        if (this.removed) {\n\t            return {};\n\t        }\n\t        var _ = this._;\n\t        if (isWithoutTransform) {\n\t            if (_.dirty || !_.bboxwt) {\n\t                this.realPath = getPath[this.type](this);\n\t                _.bboxwt = pathDimensions(this.realPath);\n\t                _.bboxwt.toString = x_y_w_h;\n\t                _.dirty = 0;\n\t            }\n\t            return _.bboxwt;\n\t        }\n\t        if (_.dirty || _.dirtyT || !_.bbox) {\n\t            if (_.dirty || !this.realPath) {\n\t                _.bboxwt = 0;\n\t                this.realPath = getPath[this.type](this);\n\t            }\n\t            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\n\t            _.bbox.toString = x_y_w_h;\n\t            _.dirty = _.dirtyT = 0;\n\t        }\n\t        return _.bbox;\n\t    };\n\t    /*\\\n\t     * Element.clone\n\t     [ method ]\n\t     **\n\t     = (object) clone of a given element\n\t     **\n\t    \\*/\n\t    elproto.clone = function () {\n\t        if (this.removed) {\n\t            return null;\n\t        }\n\t        var out = this.paper[this.type]().attr(this.attr());\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Element.glow\n\t     [ method ]\n\t     **\n\t     * Return set of elements that create glow-like effect around given element. See @Paper.set.\n\t     *\n\t     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\n\t     **\n\t     > Parameters\n\t     **\n\t     - glow (object) #optional parameters object with all properties optional:\n\t     o {\n\t     o     width (number) size of the glow, default is `10`\n\t     o     fill (boolean) will it be filled, default is `false`\n\t     o     opacity (number) opacity, default is `0.5`\n\t     o     offsetx (number) horizontal offset, default is `0`\n\t     o     offsety (number) vertical offset, default is `0`\n\t     o     color (string) glow colour, default is `black`\n\t     o }\n\t     = (object) @Paper.set of elements that represents glow\n\t    \\*/\n\t    elproto.glow = function (glow) {\n\t        if (this.type == \"text\") {\n\t            return null;\n\t        }\n\t        glow = glow || {};\n\t        var s = {\n\t            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\n\t            fill: glow.fill || false,\n\t            opacity: glow.opacity == null ? .5 : glow.opacity,\n\t            offsetx: glow.offsetx || 0,\n\t            offsety: glow.offsety || 0,\n\t            color: glow.color || \"#000\"\n\t        },\n\t            c = s.width / 2,\n\t            r = this.paper,\n\t            out = r.set(),\n\t            path = this.realPath || getPath[this.type](this);\n\t        path = this.matrix ? mapPath(path, this.matrix) : path;\n\t        for (var i = 1; i < c + 1; i++) {\n\t            out.push(r.path(path).attr({\n\t                stroke: s.color,\n\t                fill: s.fill ? s.color : \"none\",\n\t                \"stroke-linejoin\": \"round\",\n\t                \"stroke-linecap\": \"round\",\n\t                \"stroke-width\": +(s.width / c * i).toFixed(3),\n\t                opacity: +(s.opacity / c).toFixed(3)\n\t            }));\n\t        }\n\t        return out.insertBefore(this).translate(s.offsetx, s.offsety);\n\t    };\n\t    var curveslengths = {},\n\t    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n\t        if (length == null) {\n\t            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n\t        } else {\n\t            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n\t        }\n\t    },\n\t    getLengthFactory = function (istotal, subpath) {\n\t        return function (path, length, onlystart) {\n\t            path = path2curve(path);\n\t            var x, y, p, l, sp = \"\", subpaths = {}, point,\n\t                len = 0;\n\t            for (var i = 0, ii = path.length; i < ii; i++) {\n\t                p = path[i];\n\t                if (p[0] == \"M\") {\n\t                    x = +p[1];\n\t                    y = +p[2];\n\t                } else {\n\t                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                    if (len + l > length) {\n\t                        if (subpath && !subpaths.start) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\n\t                            if (onlystart) {return sp;}\n\t                            subpaths.start = sp;\n\t                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\n\t                            len += l;\n\t                            x = +p[5];\n\t                            y = +p[6];\n\t                            continue;\n\t                        }\n\t                        if (!istotal && !subpath) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            return {x: point.x, y: point.y, alpha: point.alpha};\n\t                        }\n\t                    }\n\t                    len += l;\n\t                    x = +p[5];\n\t                    y = +p[6];\n\t                }\n\t                sp += p.shift() + p;\n\t            }\n\t            subpaths.end = sp;\n\t            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n\t            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\n\t            return point;\n\t        };\n\t    };\n\t    var getTotalLength = getLengthFactory(1),\n\t        getPointAtLength = getLengthFactory(),\n\t        getSubpathsAtLength = getLengthFactory(0, 1);\n\t    /*\\\n\t     * Raphael.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns length of the given path in pixels.\n\t     **\n\t     > Parameters\n\t     **\n\t     - path (string) SVG path string.\n\t     **\n\t     = (number) length.\n\t    \\*/\n\t    R.getTotalLength = getTotalLength;\n\t    /*\\\n\t     * Raphael.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Return coordinates of the point located at the given length on the given path.\n\t     **\n\t     > Parameters\n\t     **\n\t     - path (string) SVG path string\n\t     - length (number)\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate\n\t     o     y: (number) y coordinate\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    R.getPointAtLength = getPointAtLength;\n\t    /*\\\n\t     * Raphael.getSubpath\n\t     [ method ]\n\t     **\n\t     * Return subpath of a given path from given length to given length.\n\t     **\n\t     > Parameters\n\t     **\n\t     - path (string) SVG path string\n\t     - from (number) position of the start of the segment\n\t     - to (number) position of the end of the segment\n\t     **\n\t     = (string) pathstring for the segment\n\t    \\*/\n\t    R.getSubpath = function (path, from, to) {\n\t        if (this.getTotalLength(path) - to < 1e-6) {\n\t            return getSubpathsAtLength(path, from).end;\n\t        }\n\t        var a = getSubpathsAtLength(path, to, 1);\n\t        return from ? getSubpathsAtLength(a, from).end : a;\n\t    };\n\t    /*\\\n\t     * Element.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns length of the path in pixels. Only works for element of “path” type.\n\t     = (number) length.\n\t    \\*/\n\t    elproto.getTotalLength = function () {\n\t        var path = this.getPath();\n\t        if (!path) {\n\t            return;\n\t        }\n\n\t        if (this.node.getTotalLength) {\n\t            return this.node.getTotalLength();\n\t        }\n\n\t        return getTotalLength(path);\n\t    };\n\t    /*\\\n\t     * Element.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\n\t     **\n\t     > Parameters\n\t     **\n\t     - length (number)\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate\n\t     o     y: (number) y coordinate\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    elproto.getPointAtLength = function (length) {\n\t        var path = this.getPath();\n\t        if (!path) {\n\t            return;\n\t        }\n\n\t        return getPointAtLength(path, length);\n\t    };\n\t    /*\\\n\t     * Element.getPath\n\t     [ method ]\n\t     **\n\t     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\n\t     = (object) path\n\t     **\n\t    \\*/\n\t    elproto.getPath = function () {\n\t        var path,\n\t            getPath = R._getPath[this.type];\n\n\t        if (this.type == \"text\" || this.type == \"set\") {\n\t            return;\n\t        }\n\n\t        if (getPath) {\n\t            path = getPath(this);\n\t        }\n\n\t        return path;\n\t    };\n\t    /*\\\n\t     * Element.getSubpath\n\t     [ method ]\n\t     **\n\t     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\n\t     **\n\t     > Parameters\n\t     **\n\t     - from (number) position of the start of the segment\n\t     - to (number) position of the end of the segment\n\t     **\n\t     = (string) pathstring for the segment\n\t    \\*/\n\t    elproto.getSubpath = function (from, to) {\n\t        var path = this.getPath();\n\t        if (!path) {\n\t            return;\n\t        }\n\n\t        return R.getSubpath(path, from, to);\n\t    };\n\t    /*\\\n\t     * Raphael.easing_formulas\n\t     [ property ]\n\t     **\n\t     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\n\t     # <ul>\n\t     #     <li>“linear”</li>\n\t     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\n\t     #     <li>“>” or “easeOut” or “ease-out”</li>\n\t     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\n\t     #     <li>“backIn” or “back-in”</li>\n\t     #     <li>“backOut” or “back-out”</li>\n\t     #     <li>“elastic”</li>\n\t     #     <li>“bounce”</li>\n\t     # </ul>\n\t     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\n\t    \\*/\n\t    var ef = R.easing_formulas = {\n\t        linear: function (n) {\n\t            return n;\n\t        },\n\t        \"<\": function (n) {\n\t            return pow(n, 1.7);\n\t        },\n\t        \">\": function (n) {\n\t            return pow(n, .48);\n\t        },\n\t        \"<>\": function (n) {\n\t            var q = .48 - n / 1.04,\n\t                Q = math.sqrt(.1734 + q * q),\n\t                x = Q - q,\n\t                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n\t                y = -Q - q,\n\t                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n\t                t = X + Y + .5;\n\t            return (1 - t) * 3 * t * t + t * t * t;\n\t        },\n\t        backIn: function (n) {\n\t            var s = 1.70158;\n\t            return n * n * ((s + 1) * n - s);\n\t        },\n\t        backOut: function (n) {\n\t            n = n - 1;\n\t            var s = 1.70158;\n\t            return n * n * ((s + 1) * n + s) + 1;\n\t        },\n\t        elastic: function (n) {\n\t            if (n == !!n) {\n\t                return n;\n\t            }\n\t            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\n\t        },\n\t        bounce: function (n) {\n\t            var s = 7.5625,\n\t                p = 2.75,\n\t                l;\n\t            if (n < (1 / p)) {\n\t                l = s * n * n;\n\t            } else {\n\t                if (n < (2 / p)) {\n\t                    n -= (1.5 / p);\n\t                    l = s * n * n + .75;\n\t                } else {\n\t                    if (n < (2.5 / p)) {\n\t                        n -= (2.25 / p);\n\t                        l = s * n * n + .9375;\n\t                    } else {\n\t                        n -= (2.625 / p);\n\t                        l = s * n * n + .984375;\n\t                    }\n\t                }\n\t            }\n\t            return l;\n\t        }\n\t    };\n\t    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\n\t    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\n\t    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\n\t    ef[\"back-in\"] = ef.backIn;\n\t    ef[\"back-out\"] = ef.backOut;\n\n\t    var animationElements = [],\n\t        requestAnimFrame = window.requestAnimationFrame       ||\n\t                           window.webkitRequestAnimationFrame ||\n\t                           window.mozRequestAnimationFrame    ||\n\t                           window.oRequestAnimationFrame      ||\n\t                           window.msRequestAnimationFrame     ||\n\t                           function (callback) {\n\t                               setTimeout(callback, 16);\n\t                           },\n\t        animation = function () {\n\t            var Now = +new Date,\n\t                l = 0;\n\t            for (; l < animationElements.length; l++) {\n\t                var e = animationElements[l];\n\t                if (e.el.removed || e.paused) {\n\t                    continue;\n\t                }\n\t                var time = Now - e.start,\n\t                    ms = e.ms,\n\t                    easing = e.easing,\n\t                    from = e.from,\n\t                    diff = e.diff,\n\t                    to = e.to,\n\t                    t = e.t,\n\t                    that = e.el,\n\t                    set = {},\n\t                    now,\n\t                    init = {},\n\t                    key;\n\t                if (e.initstatus) {\n\t                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\n\t                    e.status = e.initstatus;\n\t                    delete e.initstatus;\n\t                    e.stop && animationElements.splice(l--, 1);\n\t                } else {\n\t                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\n\t                }\n\t                if (time < 0) {\n\t                    continue;\n\t                }\n\t                if (time < ms) {\n\t                    var pos = easing(time / ms);\n\t                    for (var attr in from) if (from[has](attr)) {\n\t                        switch (availableAnimAttrs[attr]) {\n\t                            case nu:\n\t                                now = +from[attr] + pos * ms * diff[attr];\n\t                                break;\n\t                            case \"colour\":\n\t                                now = \"rgb(\" + [\n\t                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\n\t                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\n\t                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\n\t                                ].join(\",\") + \")\";\n\t                                break;\n\t                            case \"path\":\n\t                                now = [];\n\t                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                    now[i] = [from[attr][i][0]];\n\t                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\n\t                                    }\n\t                                    now[i] = now[i].join(S);\n\t                                }\n\t                                now = now.join(S);\n\t                                break;\n\t                            case \"transform\":\n\t                                if (diff[attr].real) {\n\t                                    now = [];\n\t                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                        now[i] = [from[attr][i][0]];\n\t                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\n\t                                        }\n\t                                    }\n\t                                } else {\n\t                                    var get = function (i) {\n\t                                        return +from[attr][i] + pos * ms * diff[attr][i];\n\t                                    };\n\t                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\n\t                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\n\t                                }\n\t                                break;\n\t                            case \"csv\":\n\t                                if (attr == \"clip-rect\") {\n\t                                    now = [];\n\t                                    i = 4;\n\t                                    while (i--) {\n\t                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\n\t                                    }\n\t                                }\n\t                                break;\n\t                            default:\n\t                                var from2 = [][concat](from[attr]);\n\t                                now = [];\n\t                                i = that.paper.customAttributes[attr].length;\n\t                                while (i--) {\n\t                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\n\t                                }\n\t                                break;\n\t                        }\n\t                        set[attr] = now;\n\t                    }\n\t                    that.attr(set);\n\t                    (function (id, that, anim) {\n\t                        setTimeout(function () {\n\t                            eve(\"raphael.anim.frame.\" + id, that, anim);\n\t                        });\n\t                    })(that.id, that, e.anim);\n\t                } else {\n\t                    (function(f, el, a) {\n\t                        setTimeout(function() {\n\t                            eve(\"raphael.anim.frame.\" + el.id, el, a);\n\t                            eve(\"raphael.anim.finish.\" + el.id, el, a);\n\t                            R.is(f, \"function\") && f.call(el);\n\t                        });\n\t                    })(e.callback, that, e.anim);\n\t                    that.attr(to);\n\t                    animationElements.splice(l--, 1);\n\t                    if (e.repeat > 1 && !e.next) {\n\t                        for (key in to) if (to[has](key)) {\n\t                            init[key] = e.totalOrigin[key];\n\t                        }\n\t                        e.el.attr(init);\n\t                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\n\t                    }\n\t                    if (e.next && !e.stop) {\n\t                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\n\t                    }\n\t                }\n\t            }\n\t            animationElements.length && requestAnimFrame(animation);\n\t        },\n\t        upto255 = function (color) {\n\t            return color > 255 ? 255 : color < 0 ? 0 : color;\n\t        };\n\t    /*\\\n\t     * Element.animateWith\n\t     [ method ]\n\t     **\n\t     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - el (object) element to sync with\n\t     - anim (object) animation to sync with\n\t     - params (object) #optional final attributes for the element, see also @Element.attr\n\t     - ms (number) #optional number of milliseconds for animation to run\n\t     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n\t     - callback (function) #optional callback function. Will be called at the end of animation.\n\t     * or\n\t     - element (object) element to sync with\n\t     - anim (object) animation to sync with\n\t     - animation (object) #optional animation object, see @Raphael.animation\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\n\t        var element = this;\n\t        if (element.removed) {\n\t            callback && callback.call(element);\n\t            return element;\n\t        }\n\t        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\n\t            x, y;\n\t        runAnimation(a, element, a.percents[0], null, element.attr());\n\t        for (var i = 0, ii = animationElements.length; i < ii; i++) {\n\t            if (animationElements[i].anim == anim && animationElements[i].el == el) {\n\t                animationElements[ii - 1].start = animationElements[i].start;\n\t                break;\n\t            }\n\t        }\n\t        return element;\n\t        //\n\t        //\n\t        // var a = params ? R.animation(params, ms, easing, callback) : anim,\n\t        //     status = element.status(anim);\n\t        // return this.animate(a).status(a, status * anim.ms / a.ms);\n\t    };\n\t    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\n\t        var cx = 3 * p1x,\n\t            bx = 3 * (p2x - p1x) - cx,\n\t            ax = 1 - cx - bx,\n\t            cy = 3 * p1y,\n\t            by = 3 * (p2y - p1y) - cy,\n\t            ay = 1 - cy - by;\n\t        function sampleCurveX(t) {\n\t            return ((ax * t + bx) * t + cx) * t;\n\t        }\n\t        function solve(x, epsilon) {\n\t            var t = solveCurveX(x, epsilon);\n\t            return ((ay * t + by) * t + cy) * t;\n\t        }\n\t        function solveCurveX(x, epsilon) {\n\t            var t0, t1, t2, x2, d2, i;\n\t            for(t2 = x, i = 0; i < 8; i++) {\n\t                x2 = sampleCurveX(t2) - x;\n\t                if (abs(x2) < epsilon) {\n\t                    return t2;\n\t                }\n\t                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\n\t                if (abs(d2) < 1e-6) {\n\t                    break;\n\t                }\n\t                t2 = t2 - x2 / d2;\n\t            }\n\t            t0 = 0;\n\t            t1 = 1;\n\t            t2 = x;\n\t            if (t2 < t0) {\n\t                return t0;\n\t            }\n\t            if (t2 > t1) {\n\t                return t1;\n\t            }\n\t            while (t0 < t1) {\n\t                x2 = sampleCurveX(t2);\n\t                if (abs(x2 - x) < epsilon) {\n\t                    return t2;\n\t                }\n\t                if (x > x2) {\n\t                    t0 = t2;\n\t                } else {\n\t                    t1 = t2;\n\t                }\n\t                t2 = (t1 - t0) / 2 + t0;\n\t            }\n\t            return t2;\n\t        }\n\t        return solve(t, 1 / (200 * duration));\n\t    }\n\t    elproto.onAnimation = function (f) {\n\t        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\n\t        return this;\n\t    };\n\t    function Animation(anim, ms) {\n\t        var percents = [],\n\t            newAnim = {};\n\t        this.ms = ms;\n\t        this.times = 1;\n\t        if (anim) {\n\t            for (var attr in anim) if (anim[has](attr)) {\n\t                newAnim[toFloat(attr)] = anim[attr];\n\t                percents.push(toFloat(attr));\n\t            }\n\t            percents.sort(sortByNumber);\n\t        }\n\t        this.anim = newAnim;\n\t        this.top = percents[percents.length - 1];\n\t        this.percents = percents;\n\t    }\n\t    /*\\\n\t     * Animation.delay\n\t     [ method ]\n\t     **\n\t     * Creates a copy of existing animation object with given delay.\n\t     **\n\t     > Parameters\n\t     **\n\t     - delay (number) number of ms to pass between animation start and actual animation\n\t     **\n\t     = (object) new altered Animation object\n\t     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\n\t     | circle1.animate(anim); // run the given animation immediately\n\t     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\n\t    \\*/\n\t    Animation.prototype.delay = function (delay) {\n\t        var a = new Animation(this.anim, this.ms);\n\t        a.times = this.times;\n\t        a.del = +delay || 0;\n\t        return a;\n\t    };\n\t    /*\\\n\t     * Animation.repeat\n\t     [ method ]\n\t     **\n\t     * Creates a copy of existing animation object with given repetition.\n\t     **\n\t     > Parameters\n\t     **\n\t     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\n\t     **\n\t     = (object) new altered Animation object\n\t    \\*/\n\t    Animation.prototype.repeat = function (times) {\n\t        var a = new Animation(this.anim, this.ms);\n\t        a.del = this.del;\n\t        a.times = math.floor(mmax(times, 0)) || 1;\n\t        return a;\n\t    };\n\t    function runAnimation(anim, element, percent, status, totalOrigin, times) {\n\t        percent = toFloat(percent);\n\t        var params,\n\t            isInAnim,\n\t            isInAnimSet,\n\t            percents = [],\n\t            next,\n\t            prev,\n\t            timestamp,\n\t            ms = anim.ms,\n\t            from = {},\n\t            to = {},\n\t            diff = {};\n\t        if (status) {\n\t            for (i = 0, ii = animationElements.length; i < ii; i++) {\n\t                var e = animationElements[i];\n\t                if (e.el.id == element.id && e.anim == anim) {\n\t                    if (e.percent != percent) {\n\t                        animationElements.splice(i, 1);\n\t                        isInAnimSet = 1;\n\t                    } else {\n\t                        isInAnim = e;\n\t                    }\n\t                    element.attr(e.totalOrigin);\n\t                    break;\n\t                }\n\t            }\n\t        } else {\n\t            status = +to; // NaN\n\t        }\n\t        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\n\t            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\n\t                percent = anim.percents[i];\n\t                prev = anim.percents[i - 1] || 0;\n\t                ms = ms / anim.top * (percent - prev);\n\t                next = anim.percents[i + 1];\n\t                params = anim.anim[percent];\n\t                break;\n\t            } else if (status) {\n\t                element.attr(anim.anim[anim.percents[i]]);\n\t            }\n\t        }\n\t        if (!params) {\n\t            return;\n\t        }\n\t        if (!isInAnim) {\n\t            for (var attr in params) if (params[has](attr)) {\n\t                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\n\t                    from[attr] = element.attr(attr);\n\t                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\n\t                    to[attr] = params[attr];\n\t                    switch (availableAnimAttrs[attr]) {\n\t                        case nu:\n\t                            diff[attr] = (to[attr] - from[attr]) / ms;\n\t                            break;\n\t                        case \"colour\":\n\t                            from[attr] = R.getRGB(from[attr]);\n\t                            var toColour = R.getRGB(to[attr]);\n\t                            diff[attr] = {\n\t                                r: (toColour.r - from[attr].r) / ms,\n\t                                g: (toColour.g - from[attr].g) / ms,\n\t                                b: (toColour.b - from[attr].b) / ms\n\t                            };\n\t                            break;\n\t                        case \"path\":\n\t                            var pathes = path2curve(from[attr], to[attr]),\n\t                                toPath = pathes[1];\n\t                            from[attr] = pathes[0];\n\t                            diff[attr] = [];\n\t                            for (i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                diff[attr][i] = [0];\n\t                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case \"transform\":\n\t                            var _ = element._,\n\t                                eq = equaliseTransform(_[attr], to[attr]);\n\t                            if (eq) {\n\t                                from[attr] = eq.from;\n\t                                to[attr] = eq.to;\n\t                                diff[attr] = [];\n\t                                diff[attr].real = true;\n\t                                for (i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                    diff[attr][i] = [from[attr][i][0]];\n\t                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                var m = (element.matrix || new Matrix),\n\t                                    to2 = {\n\t                                        _: {transform: _.transform},\n\t                                        getBBox: function () {\n\t                                            return element.getBBox(1);\n\t                                        }\n\t                                    };\n\t                                from[attr] = [\n\t                                    m.a,\n\t                                    m.b,\n\t                                    m.c,\n\t                                    m.d,\n\t                                    m.e,\n\t                                    m.f\n\t                                ];\n\t                                extractTransform(to2, to[attr]);\n\t                                to[attr] = to2._.transform;\n\t                                diff[attr] = [\n\t                                    (to2.matrix.a - m.a) / ms,\n\t                                    (to2.matrix.b - m.b) / ms,\n\t                                    (to2.matrix.c - m.c) / ms,\n\t                                    (to2.matrix.d - m.d) / ms,\n\t                                    (to2.matrix.e - m.e) / ms,\n\t                                    (to2.matrix.f - m.f) / ms\n\t                                ];\n\t                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\n\t                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\n\t                                // extractTransform(to2, to[attr]);\n\t                                // diff[attr] = [\n\t                                //     (to2._.sx - _.sx) / ms,\n\t                                //     (to2._.sy - _.sy) / ms,\n\t                                //     (to2._.deg - _.deg) / ms,\n\t                                //     (to2._.dx - _.dx) / ms,\n\t                                //     (to2._.dy - _.dy) / ms\n\t                                // ];\n\t                            }\n\t                            break;\n\t                        case \"csv\":\n\t                            var values = Str(params[attr])[split](separator),\n\t                                from2 = Str(from[attr])[split](separator);\n\t                            if (attr == \"clip-rect\") {\n\t                                from[attr] = from2;\n\t                                diff[attr] = [];\n\t                                i = from2.length;\n\t                                while (i--) {\n\t                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\n\t                                }\n\t                            }\n\t                            to[attr] = values;\n\t                            break;\n\t                        default:\n\t                            values = [][concat](params[attr]);\n\t                            from2 = [][concat](from[attr]);\n\t                            diff[attr] = [];\n\t                            i = element.paper.customAttributes[attr].length;\n\t                            while (i--) {\n\t                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t            }\n\t            var easing = params.easing,\n\t                easyeasy = R.easing_formulas[easing];\n\t            if (!easyeasy) {\n\t                easyeasy = Str(easing).match(bezierrg);\n\t                if (easyeasy && easyeasy.length == 5) {\n\t                    var curve = easyeasy;\n\t                    easyeasy = function (t) {\n\t                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\n\t                    };\n\t                } else {\n\t                    easyeasy = pipe;\n\t                }\n\t            }\n\t            timestamp = params.start || anim.start || +new Date;\n\t            e = {\n\t                anim: anim,\n\t                percent: percent,\n\t                timestamp: timestamp,\n\t                start: timestamp + (anim.del || 0),\n\t                status: 0,\n\t                initstatus: status || 0,\n\t                stop: false,\n\t                ms: ms,\n\t                easing: easyeasy,\n\t                from: from,\n\t                diff: diff,\n\t                to: to,\n\t                el: element,\n\t                callback: params.callback,\n\t                prev: prev,\n\t                next: next,\n\t                repeat: times || anim.times,\n\t                origin: element.attr(),\n\t                totalOrigin: totalOrigin\n\t            };\n\t            animationElements.push(e);\n\t            if (status && !isInAnim && !isInAnimSet) {\n\t                e.stop = true;\n\t                e.start = new Date - ms * status;\n\t                if (animationElements.length == 1) {\n\t                    return animation();\n\t                }\n\t            }\n\t            if (isInAnimSet) {\n\t                e.start = new Date - e.ms * status;\n\t            }\n\t            animationElements.length == 1 && requestAnimFrame(animation);\n\t        } else {\n\t            isInAnim.initstatus = status;\n\t            isInAnim.start = new Date - isInAnim.ms * status;\n\t        }\n\t        eve(\"raphael.anim.start.\" + element.id, element, anim);\n\t    }\n\t    /*\\\n\t     * Raphael.animation\n\t     [ method ]\n\t     **\n\t     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\n\t     * See also @Animation.delay and @Animation.repeat methods.\n\t     **\n\t     > Parameters\n\t     **\n\t     - params (object) final attributes for the element, see also @Element.attr\n\t     - ms (number) number of milliseconds for animation to run\n\t     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n\t     - callback (function) #optional callback function. Will be called at the end of animation.\n\t     **\n\t     = (object) @Animation\n\t    \\*/\n\t    R.animation = function (params, ms, easing, callback) {\n\t        if (params instanceof Animation) {\n\t            return params;\n\t        }\n\t        if (R.is(easing, \"function\") || !easing) {\n\t            callback = callback || easing || null;\n\t            easing = null;\n\t        }\n\t        params = Object(params);\n\t        ms = +ms || 0;\n\t        var p = {},\n\t            json,\n\t            attr;\n\t        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\n\t            json = true;\n\t            p[attr] = params[attr];\n\t        }\n\t        if (!json) {\n\t            // if percent-like syntax is used and end-of-all animation callback used\n\t            if(callback){\n\t                // find the last one\n\t                var lastKey = 0;\n\t                for(var i in params){\n\t                    var percent = toInt(i);\n\t                    if(params[has](i) && percent > lastKey){\n\t                        lastKey = percent;\n\t                    }\n\t                }\n\t                lastKey += '%';\n\t                // if already defined callback in the last keyframe, skip\n\t                !params[lastKey].callback && (params[lastKey].callback = callback);\n\t            }\n\t          return new Animation(params, ms);\n\t        } else {\n\t            easing && (p.easing = easing);\n\t            callback && (p.callback = callback);\n\t            return new Animation({100: p}, ms);\n\t        }\n\t    };\n\t    /*\\\n\t     * Element.animate\n\t     [ method ]\n\t     **\n\t     * Creates and starts animation for given element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - params (object) final attributes for the element, see also @Element.attr\n\t     - ms (number) number of milliseconds for animation to run\n\t     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n\t     - callback (function) #optional callback function. Will be called at the end of animation.\n\t     * or\n\t     - animation (object) animation object, see @Raphael.animation\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.animate = function (params, ms, easing, callback) {\n\t        var element = this;\n\t        if (element.removed) {\n\t            callback && callback.call(element);\n\t            return element;\n\t        }\n\t        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\n\t        runAnimation(anim, element, anim.percents[0], null, element.attr());\n\t        return element;\n\t    };\n\t    /*\\\n\t     * Element.setTime\n\t     [ method ]\n\t     **\n\t     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) animation object\n\t     - value (number) number of milliseconds from the beginning of the animation\n\t     **\n\t     = (object) original element if `value` is specified\n\t     * Note, that during animation following events are triggered:\n\t     *\n\t     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\n\t    \\*/\n\t    elproto.setTime = function (anim, value) {\n\t        if (anim && value != null) {\n\t            this.status(anim, mmin(value, anim.ms) / anim.ms);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.status\n\t     [ method ]\n\t     **\n\t     * Gets or sets the status of animation of the element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\n\t     **\n\t     = (number) status\n\t     * or\n\t     = (array) status if `anim` is not specified. Array of objects in format:\n\t     o {\n\t     o     anim: (object) animation object\n\t     o     status: (number) status\n\t     o }\n\t     * or\n\t     = (object) original element if `value` is specified\n\t    \\*/\n\t    elproto.status = function (anim, value) {\n\t        var out = [],\n\t            i = 0,\n\t            len,\n\t            e;\n\t        if (value != null) {\n\t            runAnimation(anim, this, -1, mmin(value, 1));\n\t            return this;\n\t        } else {\n\t            len = animationElements.length;\n\t            for (; i < len; i++) {\n\t                e = animationElements[i];\n\t                if (e.el.id == this.id && (!anim || e.anim == anim)) {\n\t                    if (anim) {\n\t                        return e.status;\n\t                    }\n\t                    out.push({\n\t                        anim: e.anim,\n\t                        status: e.status\n\t                    });\n\t                }\n\t            }\n\t            if (anim) {\n\t                return 0;\n\t            }\n\t            return out;\n\t        }\n\t    };\n\t    /*\\\n\t     * Element.pause\n\t     [ method ]\n\t     **\n\t     * Stops animation of the element with ability to resume it later on.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.pause = function (anim) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n\t            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\n\t                animationElements[i].paused = true;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.resume\n\t     [ method ]\n\t     **\n\t     * Resumes animation if it was paused with @Element.pause method.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.resume = function (anim) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n\t            var e = animationElements[i];\n\t            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\n\t                delete e.paused;\n\t                this.status(e.anim, e.status);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.stop\n\t     [ method ]\n\t     **\n\t     * Stops animation of the element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.stop = function (anim) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n\t            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\n\t                animationElements.splice(i--, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    function stopAnimation(paper) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\n\t            animationElements.splice(i--, 1);\n\t        }\n\t    }\n\t    eve.on(\"raphael.remove\", stopAnimation);\n\t    eve.on(\"raphael.clear\", stopAnimation);\n\t    elproto.toString = function () {\n\t        return \"Rapha\\xebl\\u2019s object\";\n\t    };\n\n\t    // Set\n\t    var Set = function (items) {\n\t        this.items = [];\n\t        this.length = 0;\n\t        this.type = \"set\";\n\t        if (items) {\n\t            for (var i = 0, ii = items.length; i < ii; i++) {\n\t                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\n\t                    this[this.items.length] = this.items[this.items.length] = items[i];\n\t                    this.length++;\n\t                }\n\t            }\n\t        }\n\t    },\n\t    setproto = Set.prototype;\n\t    /*\\\n\t     * Set.push\n\t     [ method ]\n\t     **\n\t     * Adds each argument to the current set.\n\t     = (object) original element\n\t    \\*/\n\t    setproto.push = function () {\n\t        var item,\n\t            len;\n\t        for (var i = 0, ii = arguments.length; i < ii; i++) {\n\t            item = arguments[i];\n\t            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\n\t                len = this.items.length;\n\t                this[len] = this.items[len] = item;\n\t                this.length++;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.pop\n\t     [ method ]\n\t     **\n\t     * Removes last element and returns it.\n\t     = (object) element\n\t    \\*/\n\t    setproto.pop = function () {\n\t        this.length && delete this[this.length--];\n\t        return this.items.pop();\n\t    };\n\t    /*\\\n\t     * Set.forEach\n\t     [ method ]\n\t     **\n\t     * Executes given function for each element in the set.\n\t     *\n\t     * If function returns `false` it will stop loop running.\n\t     **\n\t     > Parameters\n\t     **\n\t     - callback (function) function to run\n\t     - thisArg (object) context object for the callback\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.forEach = function (callback, thisArg) {\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            if (callback.call(thisArg, this.items[i], i) === false) {\n\t                return this;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    for (var method in elproto) if (elproto[has](method)) {\n\t        setproto[method] = (function (methodname) {\n\t            return function () {\n\t                var arg = arguments;\n\t                return this.forEach(function (el) {\n\t                    el[methodname][apply](el, arg);\n\t                });\n\t            };\n\t        })(method);\n\t    }\n\t    setproto.attr = function (name, value) {\n\t        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\n\t            for (var j = 0, jj = name.length; j < jj; j++) {\n\t                this.items[j].attr(name[j]);\n\t            }\n\t        } else {\n\t            for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t                this.items[i].attr(name, value);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.clear\n\t     [ method ]\n\t     **\n\t     * Removes all elements from the set\n\t    \\*/\n\t    setproto.clear = function () {\n\t        while (this.length) {\n\t            this.pop();\n\t        }\n\t    };\n\t    /*\\\n\t     * Set.splice\n\t     [ method ]\n\t     **\n\t     * Removes given element from the set\n\t     **\n\t     > Parameters\n\t     **\n\t     - index (number) position of the deletion\n\t     - count (number) number of element to remove\n\t     - insertion… (object) #optional elements to insert\n\t     = (object) set elements that were deleted\n\t    \\*/\n\t    setproto.splice = function (index, count, insertion) {\n\t        index = index < 0 ? mmax(this.length + index, 0) : index;\n\t        count = mmax(0, mmin(this.length - index, count));\n\t        var tail = [],\n\t            todel = [],\n\t            args = [],\n\t            i;\n\t        for (i = 2; i < arguments.length; i++) {\n\t            args.push(arguments[i]);\n\t        }\n\t        for (i = 0; i < count; i++) {\n\t            todel.push(this[index + i]);\n\t        }\n\t        for (; i < this.length - index; i++) {\n\t            tail.push(this[index + i]);\n\t        }\n\t        var arglen = args.length;\n\t        for (i = 0; i < arglen + tail.length; i++) {\n\t            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n\t        }\n\t        i = this.items.length = this.length -= count - arglen;\n\t        while (this[i]) {\n\t            delete this[i++];\n\t        }\n\t        return new Set(todel);\n\t    };\n\t    /*\\\n\t     * Set.exclude\n\t     [ method ]\n\t     **\n\t     * Removes given element from the set\n\t     **\n\t     > Parameters\n\t     **\n\t     - element (object) element to remove\n\t     = (boolean) `true` if object was found & removed from the set\n\t    \\*/\n\t    setproto.exclude = function (el) {\n\t        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n\t            this.splice(i, 1);\n\t            return true;\n\t        }\n\t    };\n\t    setproto.animate = function (params, ms, easing, callback) {\n\t        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\n\t        var len = this.items.length,\n\t            i = len,\n\t            item,\n\t            set = this,\n\t            collector;\n\t        if (!len) {\n\t            return this;\n\t        }\n\t        callback && (collector = function () {\n\t            !--len && callback.call(set);\n\t        });\n\t        easing = R.is(easing, string) ? easing : collector;\n\t        var anim = R.animation(params, ms, easing, collector);\n\t        item = this.items[--i].animate(anim);\n\t        while (i--) {\n\t            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\n\t            (this.items[i] && !this.items[i].removed) || len--;\n\t        }\n\t        return this;\n\t    };\n\t    setproto.insertAfter = function (el) {\n\t        var i = this.items.length;\n\t        while (i--) {\n\t            this.items[i].insertAfter(el);\n\t        }\n\t        return this;\n\t    };\n\t    setproto.getBBox = function () {\n\t        var x = [],\n\t            y = [],\n\t            x2 = [],\n\t            y2 = [];\n\t        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n\t            var box = this.items[i].getBBox();\n\t            x.push(box.x);\n\t            y.push(box.y);\n\t            x2.push(box.x + box.width);\n\t            y2.push(box.y + box.height);\n\t        }\n\t        x = mmin[apply](0, x);\n\t        y = mmin[apply](0, y);\n\t        x2 = mmax[apply](0, x2);\n\t        y2 = mmax[apply](0, y2);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            x2: x2,\n\t            y2: y2,\n\t            width: x2 - x,\n\t            height: y2 - y\n\t        };\n\t    };\n\t    setproto.clone = function (s) {\n\t        s = this.paper.set();\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            s.push(this.items[i].clone());\n\t        }\n\t        return s;\n\t    };\n\t    setproto.toString = function () {\n\t        return \"Rapha\\xebl\\u2018s set\";\n\t    };\n\n\t    setproto.glow = function(glowConfig) {\n\t        var ret = this.paper.set();\n\t        this.forEach(function(shape, index){\n\t            var g = shape.glow(glowConfig);\n\t            if(g != null){\n\t                g.forEach(function(shape2, index2){\n\t                    ret.push(shape2);\n\t                });\n\t            }\n\t        });\n\t        return ret;\n\t    };\n\n\n\t    /*\\\n\t     * Set.isPointInside\n\t     [ method ]\n\t     **\n\t     * Determine if given point is inside this set’s elements\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the point\n\t     - y (number) y coordinate of the point\n\t     = (boolean) `true` if point is inside any of the set's elements\n\t     \\*/\n\t    setproto.isPointInside = function (x, y) {\n\t        var isPointInside = false;\n\t        this.forEach(function (el) {\n\t            if (el.isPointInside(x, y)) {\n\t                isPointInside = true;\n\t                return false; // stop loop\n\t            }\n\t        });\n\t        return isPointInside;\n\t    };\n\n\t    /*\\\n\t     * Raphael.registerFont\n\t     [ method ]\n\t     **\n\t     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\n\t     * Returns original parameter, so it could be used with chaining.\n\t     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\n\t     **\n\t     > Parameters\n\t     **\n\t     - font (object) the font to register\n\t     = (object) the font you passed in\n\t     > Usage\n\t     | Cufon.registerFont(Raphael.registerFont({…}));\n\t    \\*/\n\t    R.registerFont = function (font) {\n\t        if (!font.face) {\n\t            return font;\n\t        }\n\t        this.fonts = this.fonts || {};\n\t        var fontcopy = {\n\t                w: font.w,\n\t                face: {},\n\t                glyphs: {}\n\t            },\n\t            family = font.face[\"font-family\"];\n\t        for (var prop in font.face) if (font.face[has](prop)) {\n\t            fontcopy.face[prop] = font.face[prop];\n\t        }\n\t        if (this.fonts[family]) {\n\t            this.fonts[family].push(fontcopy);\n\t        } else {\n\t            this.fonts[family] = [fontcopy];\n\t        }\n\t        if (!font.svg) {\n\t            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\n\t            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\n\t                var path = font.glyphs[glyph];\n\t                fontcopy.glyphs[glyph] = {\n\t                    w: path.w,\n\t                    k: {},\n\t                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\n\t                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\n\t                        }) + \"z\"\n\t                };\n\t                if (path.k) {\n\t                    for (var k in path.k) if (path[has](k)) {\n\t                        fontcopy.glyphs[glyph].k[k] = path.k[k];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return font;\n\t    };\n\t    /*\\\n\t     * Paper.getFont\n\t     [ method ]\n\t     **\n\t     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\n\t     **\n\t     > Parameters\n\t     **\n\t     - family (string) font family name or any word from it\n\t     - weight (string) #optional font weight\n\t     - style (string) #optional font style\n\t     - stretch (string) #optional font stretch\n\t     = (object) the font object\n\t     > Usage\n\t     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\n\t    \\*/\n\t    paperproto.getFont = function (family, weight, style, stretch) {\n\t        stretch = stretch || \"normal\";\n\t        style = style || \"normal\";\n\t        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\n\t        if (!R.fonts) {\n\t            return;\n\t        }\n\t        var font = R.fonts[family];\n\t        if (!font) {\n\t            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\n\t            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\n\t                if (name.test(fontName)) {\n\t                    font = R.fonts[fontName];\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        var thefont;\n\t        if (font) {\n\t            for (var i = 0, ii = font.length; i < ii; i++) {\n\t                thefont = font[i];\n\t                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return thefont;\n\t    };\n\t    /*\\\n\t     * Paper.print\n\t     [ method ]\n\t     **\n\t     * Creates path that represent given text written using given font at given position with given size.\n\t     * Result of the method is path element that contains whole text as a separate path.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x position of the text\n\t     - y (number) y position of the text\n\t     - string (string) text to print\n\t     - font (object) font object, see @Paper.getFont\n\t     - size (number) #optional size of the font, default is `16`\n\t     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\n\t     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\n\t     - line_spacing (number) #optional number in range `1..3`, default is `1`\n\t     = (object) resulting path element, which consist of all letters\n\t     > Usage\n\t     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\n\t    \\*/\n\t    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\n\t        origin = origin || \"middle\"; // baseline|middle\n\t        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\n\t        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\n\t        var letters = Str(string)[split](E),\n\t            shift = 0,\n\t            notfirst = 0,\n\t            path = E,\n\t            scale;\n\t        R.is(font, \"string\") && (font = this.getFont(font));\n\t        if (font) {\n\t            scale = (size || 16) / font.face[\"units-per-em\"];\n\t            var bb = font.face.bbox[split](separator),\n\t                top = +bb[0],\n\t                lineHeight = bb[3] - bb[1],\n\t                shifty = 0,\n\t                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\n\t            for (var i = 0, ii = letters.length; i < ii; i++) {\n\t                if (letters[i] == \"\\n\") {\n\t                    shift = 0;\n\t                    curr = 0;\n\t                    notfirst = 0;\n\t                    shifty += lineHeight * line_spacing;\n\t                } else {\n\t                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\n\t                        curr = font.glyphs[letters[i]];\n\t                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\n\t                    notfirst = 1;\n\t                }\n\t                if (curr && curr.d) {\n\t                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\n\t                }\n\t            }\n\t        }\n\t        return this.path(path).attr({\n\t            fill: \"#000\",\n\t            stroke: \"none\"\n\t        });\n\t    };\n\n\t    /*\\\n\t     * Paper.add\n\t     [ method ]\n\t     **\n\t     * Imports elements in JSON array in format `{type: type, <attributes>}`\n\t     **\n\t     > Parameters\n\t     **\n\t     - json (array)\n\t     = (object) resulting set of imported elements\n\t     > Usage\n\t     | paper.add([\n\t     |     {\n\t     |         type: \"circle\",\n\t     |         cx: 10,\n\t     |         cy: 10,\n\t     |         r: 5\n\t     |     },\n\t     |     {\n\t     |         type: \"rect\",\n\t     |         x: 10,\n\t     |         y: 10,\n\t     |         width: 10,\n\t     |         height: 10,\n\t     |         fill: \"#fc0\"\n\t     |     }\n\t     | ]);\n\t    \\*/\n\t    paperproto.add = function (json) {\n\t        if (R.is(json, \"array\")) {\n\t            var res = this.set(),\n\t                i = 0,\n\t                ii = json.length,\n\t                j;\n\t            for (; i < ii; i++) {\n\t                j = json[i] || {};\n\t                elements[has](j.type) && res.push(this[j.type]().attr(j));\n\t            }\n\t        }\n\t        return res;\n\t    };\n\n\t    /*\\\n\t     * Raphael.format\n\t     [ method ]\n\t     **\n\t     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\n\t     **\n\t     > Parameters\n\t     **\n\t     - token (string) string to format\n\t     - … (string) rest of arguments will be treated as parameters for replacement\n\t     = (string) formated string\n\t     > Usage\n\t     | var x = 10,\n\t     |     y = 20,\n\t     |     width = 40,\n\t     |     height = 50;\n\t     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n\t     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\n\t    \\*/\n\t    R.format = function (token, params) {\n\t        var args = R.is(params, array) ? [0][concat](params) : arguments;\n\t        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\n\t            return args[++i] == null ? E : args[i];\n\t        }));\n\t        return token || E;\n\t    };\n\t    /*\\\n\t     * Raphael.fullfill\n\t     [ method ]\n\t     **\n\t     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\n\t     **\n\t     > Parameters\n\t     **\n\t     - token (string) string to format\n\t     - json (object) object which properties will be used as a replacement\n\t     = (string) formated string\n\t     > Usage\n\t     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n\t     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n\t     |     x: 10,\n\t     |     y: 20,\n\t     |     dim: {\n\t     |         width: 40,\n\t     |         height: 50,\n\t     |         \"negative width\": -40\n\t     |     }\n\t     | }));\n\t    \\*/\n\t    R.fullfill = (function () {\n\t        var tokenRegex = /\\{([^\\}]+)\\}/g,\n\t            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n\t            replacer = function (all, key, obj) {\n\t                var res = obj;\n\t                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n\t                    name = name || quotedName;\n\t                    if (res) {\n\t                        if (name in res) {\n\t                            res = res[name];\n\t                        }\n\t                        typeof res == \"function\" && isFunc && (res = res());\n\t                    }\n\t                });\n\t                res = (res == null || res == obj ? all : res) + \"\";\n\t                return res;\n\t            };\n\t        return function (str, obj) {\n\t            return String(str).replace(tokenRegex, function (all, key) {\n\t                return replacer(all, key, obj);\n\t            });\n\t        };\n\t    })();\n\t    /*\\\n\t     * Raphael.ninja\n\t     [ method ]\n\t     **\n\t     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\n\t     * Beware, that in this case plugins could stop working, because they are depending on global variable existence.\n\t     **\n\t     = (object) Raphael object\n\t     > Usage\n\t     | (function (local_raphael) {\n\t     |     var paper = local_raphael(10, 10, 320, 200);\n\t     |     …\n\t     | })(Raphael.ninja());\n\t    \\*/\n\t    R.ninja = function () {\n\t        if (oldRaphael.was) {\n\t            g.win.Raphael = oldRaphael.is;\n\t        } else {\n\t            // IE8 raises an error when deleting window property\n\t            window.Raphael = undefined;\n\t            try {\n\t                delete window.Raphael;\n\t            } catch(e) {}\n\t        }\n\t        return R;\n\t    };\n\t    /*\\\n\t     * Raphael.st\n\t     [ property (object) ]\n\t     **\n\t     * You can add your own method to elements and sets. It is wise to add a set method for each element method\n\t     * you added, so you will be able to call the same method on sets too.\n\t     **\n\t     * See also @Raphael.el.\n\t     > Usage\n\t     | Raphael.el.red = function () {\n\t     |     this.attr({fill: \"#f00\"});\n\t     | };\n\t     | Raphael.st.red = function () {\n\t     |     this.forEach(function (el) {\n\t     |         el.red();\n\t     |     });\n\t     | };\n\t     | // then use it\n\t     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\n\t    \\*/\n\t    R.st = setproto;\n\n\t    eve.on(\"raphael.DOMload\", function () {\n\t        loaded = true;\n\t    });\n\n\t    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\n\t    (function (doc, loaded, f) {\n\t        if (doc.readyState == null && doc.addEventListener){\n\t            doc.addEventListener(loaded, f = function () {\n\t                doc.removeEventListener(loaded, f, false);\n\t                doc.readyState = \"complete\";\n\t            }, false);\n\t            doc.readyState = \"loading\";\n\t        }\n\t        function isLoaded() {\n\t            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\n\t        }\n\t        isLoaded();\n\t    })(document, \"DOMContentLoaded\");\n\n\t    return R;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t// \n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t// \n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t// \n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t// ┌────────────────────────────────────────────────────────────┐ \\\\\n\t// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n\t// ├────────────────────────────────────────────────────────────┤ \\\\\n\t// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n\t// └────────────────────────────────────────────────────────────┘ \\\\\n\n\t(function (glob) {\n\t    var version = \"0.5.0\",\n\t        has = \"hasOwnProperty\",\n\t        separator = /[\\.\\/]/,\n\t        comaseparator = /\\s*,\\s*/,\n\t        wildcard = \"*\",\n\t        fun = function () {},\n\t        numsort = function (a, b) {\n\t            return a - b;\n\t        },\n\t        current_event,\n\t        stop,\n\t        events = {n: {}},\n\t        firstDefined = function () {\n\t            for (var i = 0, ii = this.length; i < ii; i++) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        lastDefined = function () {\n\t            var i = this.length;\n\t            while (--i) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        objtos = Object.prototype.toString,\n\t        Str = String,\n\t        isArray = Array.isArray || function (ar) {\n\t            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n\t        };\n\t    /*\\\n\t     * eve\n\t     [ method ]\n\n\t     * Fires event with given `name`, given scope and other parameters.\n\n\t     > Arguments\n\n\t     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n\t     - scope (object) context for the event handlers\n\t     - varargs (...) the rest of arguments will be sent to event handlers\n\n\t     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n\t    \\*/\n\t        eve = function (name, scope) {\n\t            var e = events,\n\t                oldstop = stop,\n\t                args = Array.prototype.slice.call(arguments, 2),\n\t                listeners = eve.listeners(name),\n\t                z = 0,\n\t                f = false,\n\t                l,\n\t                indexed = [],\n\t                queue = {},\n\t                out = [],\n\t                ce = current_event,\n\t                errors = [];\n\t            out.firstDefined = firstDefined;\n\t            out.lastDefined = lastDefined;\n\t            current_event = name;\n\t            stop = 0;\n\t            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n\t                indexed.push(listeners[i].zIndex);\n\t                if (listeners[i].zIndex < 0) {\n\t                    queue[listeners[i].zIndex] = listeners[i];\n\t                }\n\t            }\n\t            indexed.sort(numsort);\n\t            while (indexed[z] < 0) {\n\t                l = queue[indexed[z++]];\n\t                out.push(l.apply(scope, args));\n\t                if (stop) {\n\t                    stop = oldstop;\n\t                    return out;\n\t                }\n\t            }\n\t            for (i = 0; i < ii; i++) {\n\t                l = listeners[i];\n\t                if (\"zIndex\" in l) {\n\t                    if (l.zIndex == indexed[z]) {\n\t                        out.push(l.apply(scope, args));\n\t                        if (stop) {\n\t                            break;\n\t                        }\n\t                        do {\n\t                            z++;\n\t                            l = queue[indexed[z]];\n\t                            l && out.push(l.apply(scope, args));\n\t                            if (stop) {\n\t                                break;\n\t                            }\n\t                        } while (l)\n\t                    } else {\n\t                        queue[l.zIndex] = l;\n\t                    }\n\t                } else {\n\t                    out.push(l.apply(scope, args));\n\t                    if (stop) {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            stop = oldstop;\n\t            current_event = ce;\n\t            return out;\n\t        };\n\t        // Undocumented. Debug only.\n\t        eve._events = events;\n\t    /*\\\n\t     * eve.listeners\n\t     [ method ]\n\n\t     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n\t     > Arguments\n\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n\t     = (array) array of event handlers\n\t    \\*/\n\t    eve.listeners = function (name) {\n\t        var names = isArray(name) ? name : name.split(separator),\n\t            e = events,\n\t            item,\n\t            items,\n\t            k,\n\t            i,\n\t            ii,\n\t            j,\n\t            jj,\n\t            nes,\n\t            es = [e],\n\t            out = [];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            nes = [];\n\t            for (j = 0, jj = es.length; j < jj; j++) {\n\t                e = es[j].n;\n\t                items = [e[names[i]], e[wildcard]];\n\t                k = 2;\n\t                while (k--) {\n\t                    item = items[k];\n\t                    if (item) {\n\t                        nes.push(item);\n\t                        out = out.concat(item.f || []);\n\t                    }\n\t                }\n\t            }\n\t            es = nes;\n\t        }\n\t        return out;\n\t    };\n\t    /*\\\n\t     * eve.separator\n\t     [ method ]\n\n\t     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n\t     * here. Be aware that if you pass a string longer than one character it will be treated as\n\t     * a list of characters.\n\n\t     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n\t    \\*/\n\t    eve.separator = function (sep) {\n\t        if (sep) {\n\t            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n\t            sep = \"[\" + sep + \"]\";\n\t            separator = new RegExp(sep);\n\t        } else {\n\t            separator = /[\\.\\/]/;\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.on\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n\t     | eve.on(\"*.under.*\", f);\n\t     | eve(\"mouse.under.floor\"); // triggers f\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     - name (array) if you don’t want to use separators, you can use array of strings\n\t     - f (function) event handler function\n\t     **\n\t     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n\t     > Example:\n\t     | eve.on(\"mouse\", eatIt)(2);\n\t     | eve.on(\"mouse\", scream);\n\t     | eve.on(\"mouse\", catchIt)(1);\n\t     * This will ensure that `catchIt` function will be called before `eatIt`.\n\t     *\n\t     * If you want to put your handler before non-indexed handlers, specify a negative value.\n\t     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n\t    \\*/\n\t    eve.on = function (name, f) {\n\t        if (typeof f != \"function\") {\n\t            return function () {};\n\t        }\n\t        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n\t        for (var i = 0, ii = names.length; i < ii; i++) {\n\t            (function (name) {\n\t                var names = isArray(name) ? name : Str(name).split(separator),\n\t                    e = events,\n\t                    exist;\n\t                for (var i = 0, ii = names.length; i < ii; i++) {\n\t                    e = e.n;\n\t                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n\t                }\n\t                e.f = e.f || [];\n\t                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n\t                    exist = true;\n\t                    break;\n\t                }\n\t                !exist && e.f.push(f);\n\t            }(names[i]));\n\t        }\n\t        return function (zIndex) {\n\t            if (+zIndex == +zIndex) {\n\t                f.zIndex = +zIndex;\n\t            }\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.f\n\t     [ method ]\n\t     **\n\t     * Returns function that will fire given event with optional arguments.\n\t     * Arguments that will be passed to the result function will be also\n\t     * concated to the list of final arguments.\n\t     | el.onclick = eve.f(\"click\", 1, 2);\n\t     | eve.on(\"click\", function (a, b, c) {\n\t     |     console.log(a, b, c); // 1, 2, [event object]\n\t     | });\n\t     > Arguments\n\t     - event (string) event name\n\t     - varargs (…) and any other arguments\n\t     = (function) possible event handler function\n\t    \\*/\n\t    eve.f = function (event) {\n\t        var attrs = [].slice.call(arguments, 1);\n\t        return function () {\n\t            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.stop\n\t     [ method ]\n\t     **\n\t     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n\t    \\*/\n\t    eve.stop = function () {\n\t        stop = 1;\n\t    };\n\t    /*\\\n\t     * eve.nt\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     > Arguments\n\t     **\n\t     - subname (string) #optional subname of the event\n\t     **\n\t     = (string) name of the event, if `subname` is not specified\n\t     * or\n\t     = (boolean) `true`, if current event’s name contains `subname`\n\t    \\*/\n\t    eve.nt = function (subname) {\n\t        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n\t        if (subname) {\n\t            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n\t        }\n\t        return cur;\n\t    };\n\t    /*\\\n\t     * eve.nts\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     **\n\t     = (array) names of the event\n\t    \\*/\n\t    eve.nts = function () {\n\t        return isArray(current_event) ? current_event : current_event.split(separator);\n\t    };\n\t    /*\\\n\t     * eve.off\n\t     [ method ]\n\t     **\n\t     * Removes given function from the list of event listeners assigned to given name.\n\t     * If no arguments specified all the events will be cleared.\n\t     **\n\t     > Arguments\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t    \\*/\n\t    /*\\\n\t     * eve.unbind\n\t     [ method ]\n\t     **\n\t     * See @eve.off\n\t    \\*/\n\t    eve.off = eve.unbind = function (name, f) {\n\t        if (!name) {\n\t            eve._events = events = {n: {}};\n\t            return;\n\t        }\n\t        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n\t        if (names.length > 1) {\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                eve.off(names[i], f);\n\t            }\n\t            return;\n\t        }\n\t        names = isArray(name) ? name : Str(name).split(separator);\n\t        var e,\n\t            key,\n\t            splice,\n\t            i, ii, j, jj,\n\t            cur = [events];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            for (j = 0; j < cur.length; j += splice.length - 2) {\n\t                splice = [j, 1];\n\t                e = cur[j].n;\n\t                if (names[i] != wildcard) {\n\t                    if (e[names[i]]) {\n\t                        splice.push(e[names[i]]);\n\t                    }\n\t                } else {\n\t                    for (key in e) if (e[has](key)) {\n\t                        splice.push(e[key]);\n\t                    }\n\t                }\n\t                cur.splice.apply(cur, splice);\n\t            }\n\t        }\n\t        for (i = 0, ii = cur.length; i < ii; i++) {\n\t            e = cur[i];\n\t            while (e.n) {\n\t                if (f) {\n\t                    if (e.f) {\n\t                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n\t                            e.f.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !e.f.length && delete e.f;\n\t                    }\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        var funcs = e.n[key].f;\n\t                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n\t                            funcs.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !funcs.length && delete e.n[key].f;\n\t                    }\n\t                } else {\n\t                    delete e.f;\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        delete e.n[key].f;\n\t                    }\n\t                }\n\t                e = e.n;\n\t            }\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.once\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name to only run once then unbind itself.\n\t     | eve.once(\"login\", f);\n\t     | eve(\"login\"); // triggers f\n\t     | eve(\"login\"); // no listeners\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     > Arguments\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     = (function) same return function as @eve.on\n\t    \\*/\n\t    eve.once = function (name, f) {\n\t        var f2 = function () {\n\t            eve.off(name, f2);\n\t            return f.apply(this, arguments);\n\t        };\n\t        return eve.on(name, f2);\n\t    };\n\t    /*\\\n\t     * eve.version\n\t     [ property (string) ]\n\t     **\n\t     * Current version of the library.\n\t    \\*/\n\t    eve.version = version;\n\t    eve.toString = function () {\n\t        return \"You are running Eve \" + version;\n\t    };\n\t    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : ( true ? (!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() { return eve; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))) : (glob.eve = eve));\n\t})(this);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(R) {\n\t    if (R && !R.svg) {\n\t        return;\n\t    }\n\n\t    var has = \"hasOwnProperty\",\n\t        Str = String,\n\t        toFloat = parseFloat,\n\t        toInt = parseInt,\n\t        math = Math,\n\t        mmax = math.max,\n\t        abs = math.abs,\n\t        pow = math.pow,\n\t        separator = /[, ]+/,\n\t        eve = R.eve,\n\t        E = \"\",\n\t        S = \" \";\n\t    var xlink = \"http://www.w3.org/1999/xlink\",\n\t        markers = {\n\t            block: \"M5,0 0,2.5 5,5z\",\n\t            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\n\t            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\n\t            open: \"M6,1 1,3.5 6,6\",\n\t            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\n\t        },\n\t        markerCounter = {};\n\t    R.toString = function () {\n\t        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\n\t    };\n\t    var $ = function (el, attr) {\n\t        if (attr) {\n\t            if (typeof el == \"string\") {\n\t                el = $(el);\n\t            }\n\t            for (var key in attr) if (attr[has](key)) {\n\t                if (key.substring(0, 6) == \"xlink:\") {\n\t                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\n\t                } else {\n\t                    el.setAttribute(key, Str(attr[key]));\n\t                }\n\t            }\n\t        } else {\n\t            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\n\t            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\n\t        }\n\t        return el;\n\t    },\n\t    addGradientFill = function (element, gradient) {\n\t        var type = \"linear\",\n\t            id = element.id + gradient,\n\t            fx = .5, fy = .5,\n\t            o = element.node,\n\t            SVG = element.paper,\n\t            s = o.style,\n\t            el = R._g.doc.getElementById(id);\n\t        if (!el) {\n\t            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\n\t                type = \"radial\";\n\t                if (_fx && _fy) {\n\t                    fx = toFloat(_fx);\n\t                    fy = toFloat(_fy);\n\t                    var dir = ((fy > .5) * 2 - 1);\n\t                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\n\t                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\n\t                        fy != .5 &&\n\t                        (fy = fy.toFixed(5) - 1e-5 * dir);\n\t                }\n\t                return E;\n\t            });\n\t            gradient = gradient.split(/\\s*\\-\\s*/);\n\t            if (type == \"linear\") {\n\t                var angle = gradient.shift();\n\t                angle = -toFloat(angle);\n\t                if (isNaN(angle)) {\n\t                    return null;\n\t                }\n\t                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\n\t                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\n\t                vector[2] *= max;\n\t                vector[3] *= max;\n\t                if (vector[2] < 0) {\n\t                    vector[0] = -vector[2];\n\t                    vector[2] = 0;\n\t                }\n\t                if (vector[3] < 0) {\n\t                    vector[1] = -vector[3];\n\t                    vector[3] = 0;\n\t                }\n\t            }\n\t            var dots = R._parseDots(gradient);\n\t            if (!dots) {\n\t                return null;\n\t            }\n\t            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\n\n\t            if (element.gradient && id != element.gradient.id) {\n\t                SVG.defs.removeChild(element.gradient);\n\t                delete element.gradient;\n\t            }\n\n\t            if (!element.gradient) {\n\t                el = $(type + \"Gradient\", {id: id});\n\t                element.gradient = el;\n\t                $(el, type == \"radial\" ? {\n\t                    fx: fx,\n\t                    fy: fy\n\t                } : {\n\t                    x1: vector[0],\n\t                    y1: vector[1],\n\t                    x2: vector[2],\n\t                    y2: vector[3],\n\t                    gradientTransform: element.matrix.invert()\n\t                });\n\t                SVG.defs.appendChild(el);\n\t                for (var i = 0, ii = dots.length; i < ii; i++) {\n\t                    el.appendChild($(\"stop\", {\n\t                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\n\t                        \"stop-color\": dots[i].color || \"#fff\",\n\t                        \"stop-opacity\": isFinite(dots[i].opacity) ? dots[i].opacity : 1\n\t                    }));\n\t                }\n\t            }\n\t        }\n\t        $(o, {\n\t            fill: fillurl(id),\n\t            opacity: 1,\n\t            \"fill-opacity\": 1\n\t        });\n\t        s.fill = E;\n\t        s.opacity = 1;\n\t        s.fillOpacity = 1;\n\t        return 1;\n\t    },\n\t    isIE9or10 = function () {\n\t      var mode = document.documentMode;\n\t      return mode && (mode === 9 || mode === 10);\n\t    },\n\t    fillurl = function (id) {\n\t      if (isIE9or10()) {\n\t          return \"url('#\" + id + \"')\";\n\t      }\n\t      var location = document.location;\n\t      var locationString = (\n\t          location.protocol + '//' +\n\t          location.host +\n\t          location.pathname +\n\t          location.search\n\t      );\n\t      return \"url('\" + locationString + \"#\" + id + \"')\";\n\t    },\n\t    updatePosition = function (o) {\n\t        var bbox = o.getBBox(1);\n\t        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\n\t    },\n\t    addArrow = function (o, value, isEnd) {\n\t        if (o.type == \"path\") {\n\t            var values = Str(value).toLowerCase().split(\"-\"),\n\t                p = o.paper,\n\t                se = isEnd ? \"end\" : \"start\",\n\t                node = o.node,\n\t                attrs = o.attrs,\n\t                stroke = attrs[\"stroke-width\"],\n\t                i = values.length,\n\t                type = \"classic\",\n\t                from,\n\t                to,\n\t                dx,\n\t                refX,\n\t                attr,\n\t                w = 3,\n\t                h = 3,\n\t                t = 5;\n\t            while (i--) {\n\t                switch (values[i]) {\n\t                    case \"block\":\n\t                    case \"classic\":\n\t                    case \"oval\":\n\t                    case \"diamond\":\n\t                    case \"open\":\n\t                    case \"none\":\n\t                        type = values[i];\n\t                        break;\n\t                    case \"wide\": h = 5; break;\n\t                    case \"narrow\": h = 2; break;\n\t                    case \"long\": w = 5; break;\n\t                    case \"short\": w = 2; break;\n\t                }\n\t            }\n\t            if (type == \"open\") {\n\t                w += 2;\n\t                h += 2;\n\t                t += 2;\n\t                dx = 1;\n\t                refX = isEnd ? 4 : 1;\n\t                attr = {\n\t                    fill: \"none\",\n\t                    stroke: attrs.stroke\n\t                };\n\t            } else {\n\t                refX = dx = w / 2;\n\t                attr = {\n\t                    fill: attrs.stroke,\n\t                    stroke: \"none\"\n\t                };\n\t            }\n\t            if (o._.arrows) {\n\t                if (isEnd) {\n\t                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\n\t                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\n\t                } else {\n\t                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\n\t                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\n\t                }\n\t            } else {\n\t                o._.arrows = {};\n\t            }\n\t            if (type != \"none\") {\n\t                var pathId = \"raphael-marker-\" + type,\n\t                    markerId = \"raphael-marker-\" + se + type + w + h + \"-obj\" + o.id;\n\t                if (!R._g.doc.getElementById(pathId)) {\n\t                    p.defs.appendChild($($(\"path\"), {\n\t                        \"stroke-linecap\": \"round\",\n\t                        d: markers[type],\n\t                        id: pathId\n\t                    }));\n\t                    markerCounter[pathId] = 1;\n\t                } else {\n\t                    markerCounter[pathId]++;\n\t                }\n\t                var marker = R._g.doc.getElementById(markerId),\n\t                    use;\n\t                if (!marker) {\n\t                    marker = $($(\"marker\"), {\n\t                        id: markerId,\n\t                        markerHeight: h,\n\t                        markerWidth: w,\n\t                        orient: \"auto\",\n\t                        refX: refX,\n\t                        refY: h / 2\n\t                    });\n\t                    use = $($(\"use\"), {\n\t                        \"xlink:href\": \"#\" + pathId,\n\t                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\n\t                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\n\t                    });\n\t                    marker.appendChild(use);\n\t                    p.defs.appendChild(marker);\n\t                    markerCounter[markerId] = 1;\n\t                } else {\n\t                    markerCounter[markerId]++;\n\t                    use = marker.getElementsByTagName(\"use\")[0];\n\t                }\n\t                $(use, attr);\n\t                var delta = dx * (type != \"diamond\" && type != \"oval\");\n\t                if (isEnd) {\n\t                    from = o._.arrows.startdx * stroke || 0;\n\t                    to = R.getTotalLength(attrs.path) - delta * stroke;\n\t                } else {\n\t                    from = delta * stroke;\n\t                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n\t                }\n\t                attr = {};\n\t                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\n\t                if (to || from) {\n\t                    attr.d = R.getSubpath(attrs.path, from, to);\n\t                }\n\t                $(node, attr);\n\t                o._.arrows[se + \"Path\"] = pathId;\n\t                o._.arrows[se + \"Marker\"] = markerId;\n\t                o._.arrows[se + \"dx\"] = delta;\n\t                o._.arrows[se + \"Type\"] = type;\n\t                o._.arrows[se + \"String\"] = value;\n\t            } else {\n\t                if (isEnd) {\n\t                    from = o._.arrows.startdx * stroke || 0;\n\t                    to = R.getTotalLength(attrs.path) - from;\n\t                } else {\n\t                    from = 0;\n\t                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n\t                }\n\t                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\n\t                delete o._.arrows[se + \"Path\"];\n\t                delete o._.arrows[se + \"Marker\"];\n\t                delete o._.arrows[se + \"dx\"];\n\t                delete o._.arrows[se + \"Type\"];\n\t                delete o._.arrows[se + \"String\"];\n\t            }\n\t            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\n\t                var item = R._g.doc.getElementById(attr);\n\t                item && item.parentNode.removeChild(item);\n\t            }\n\t        }\n\t    },\n\t    dasharray = {\n\t        \"-\": [3, 1],\n\t        \".\": [1, 1],\n\t        \"-.\": [3, 1, 1, 1],\n\t        \"-..\": [3, 1, 1, 1, 1, 1],\n\t        \". \": [1, 3],\n\t        \"- \": [4, 3],\n\t        \"--\": [8, 3],\n\t        \"- .\": [4, 3, 1, 3],\n\t        \"--.\": [8, 3, 1, 3],\n\t        \"--..\": [8, 3, 1, 3, 1, 3]\n\t    },\n\t    addDashes = function (o, value, params) {\n\t        value = dasharray[Str(value).toLowerCase()];\n\t        if (value) {\n\t            var width = o.attrs[\"stroke-width\"] || \"1\",\n\t                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\n\t                dashes = [],\n\t                i = value.length;\n\t            while (i--) {\n\t                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\n\t            }\n\t            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\n\t        }\n\t        else {\n\t          $(o.node, {\"stroke-dasharray\": \"none\"});\n\t        }\n\t    },\n\t    setFillAndStroke = function (o, params) {\n\t        var node = o.node,\n\t            attrs = o.attrs,\n\t            vis = node.style.visibility;\n\t        node.style.visibility = \"hidden\";\n\t        for (var att in params) {\n\t            if (params[has](att)) {\n\t                if (!R._availableAttrs[has](att)) {\n\t                    continue;\n\t                }\n\t                var value = params[att];\n\t                attrs[att] = value;\n\t                switch (att) {\n\t                    case \"blur\":\n\t                        o.blur(value);\n\t                        break;\n\t                    case \"title\":\n\t                        var title = node.getElementsByTagName(\"title\");\n\n\t                        // Use the existing <title>.\n\t                        if (title.length && (title = title[0])) {\n\t                          title.firstChild.nodeValue = value;\n\t                        } else {\n\t                          title = $(\"title\");\n\t                          var val = R._g.doc.createTextNode(value);\n\t                          title.appendChild(val);\n\t                          node.appendChild(title);\n\t                        }\n\t                        break;\n\t                    case \"href\":\n\t                    case \"target\":\n\t                        var pn = node.parentNode;\n\t                        if (pn.tagName.toLowerCase() != \"a\") {\n\t                            var hl = $(\"a\");\n\t                            pn.insertBefore(hl, node);\n\t                            hl.appendChild(node);\n\t                            pn = hl;\n\t                        }\n\t                        if (att == \"target\") {\n\t                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\n\t                        } else {\n\t                            pn.setAttributeNS(xlink, att, value);\n\t                        }\n\t                        break;\n\t                    case \"cursor\":\n\t                        node.style.cursor = value;\n\t                        break;\n\t                    case \"transform\":\n\t                        o.transform(value);\n\t                        break;\n\t                    case \"arrow-start\":\n\t                        addArrow(o, value);\n\t                        break;\n\t                    case \"arrow-end\":\n\t                        addArrow(o, value, 1);\n\t                        break;\n\t                    case \"clip-rect\":\n\t                        var rect = Str(value).split(separator);\n\t                        if (rect.length == 4) {\n\t                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\n\t                            var el = $(\"clipPath\"),\n\t                                rc = $(\"rect\");\n\t                            el.id = R.createUUID();\n\t                            $(rc, {\n\t                                x: rect[0],\n\t                                y: rect[1],\n\t                                width: rect[2],\n\t                                height: rect[3]\n\t                            });\n\t                            el.appendChild(rc);\n\t                            o.paper.defs.appendChild(el);\n\t                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\n\t                            o.clip = rc;\n\t                        }\n\t                        if (!value) {\n\t                            var path = node.getAttribute(\"clip-path\");\n\t                            if (path) {\n\t                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\n\t                                clip && clip.parentNode.removeChild(clip);\n\t                                $(node, {\"clip-path\": E});\n\t                                delete o.clip;\n\t                            }\n\t                        }\n\t                    break;\n\t                    case \"path\":\n\t                        if (o.type == \"path\") {\n\t                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\n\t                            o._.dirty = 1;\n\t                            if (o._.arrows) {\n\t                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n\t                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n\t                            }\n\t                        }\n\t                        break;\n\t                    case \"width\":\n\t                        node.setAttribute(att, value);\n\t                        o._.dirty = 1;\n\t                        if (attrs.fx) {\n\t                            att = \"x\";\n\t                            value = attrs.x;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    case \"x\":\n\t                        if (attrs.fx) {\n\t                            value = -attrs.x - (attrs.width || 0);\n\t                        }\n\t                    case \"rx\":\n\t                        if (att == \"rx\" && o.type == \"rect\") {\n\t                            break;\n\t                        }\n\t                    case \"cx\":\n\t                        node.setAttribute(att, value);\n\t                        o.pattern && updatePosition(o);\n\t                        o._.dirty = 1;\n\t                        break;\n\t                    case \"height\":\n\t                        node.setAttribute(att, value);\n\t                        o._.dirty = 1;\n\t                        if (attrs.fy) {\n\t                            att = \"y\";\n\t                            value = attrs.y;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    case \"y\":\n\t                        if (attrs.fy) {\n\t                            value = -attrs.y - (attrs.height || 0);\n\t                        }\n\t                    case \"ry\":\n\t                        if (att == \"ry\" && o.type == \"rect\") {\n\t                            break;\n\t                        }\n\t                    case \"cy\":\n\t                        node.setAttribute(att, value);\n\t                        o.pattern && updatePosition(o);\n\t                        o._.dirty = 1;\n\t                        break;\n\t                    case \"r\":\n\t                        if (o.type == \"rect\") {\n\t                            $(node, {rx: value, ry: value});\n\t                        } else {\n\t                            node.setAttribute(att, value);\n\t                        }\n\t                        o._.dirty = 1;\n\t                        break;\n\t                    case \"src\":\n\t                        if (o.type == \"image\") {\n\t                            node.setAttributeNS(xlink, \"href\", value);\n\t                        }\n\t                        break;\n\t                    case \"stroke-width\":\n\t                        if (o._.sx != 1 || o._.sy != 1) {\n\t                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\n\t                        }\n\t                        node.setAttribute(att, value);\n\t                        if (attrs[\"stroke-dasharray\"]) {\n\t                            addDashes(o, attrs[\"stroke-dasharray\"], params);\n\t                        }\n\t                        if (o._.arrows) {\n\t                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n\t                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n\t                        }\n\t                        break;\n\t                    case \"stroke-dasharray\":\n\t                        addDashes(o, value, params);\n\t                        break;\n\t                    case \"fill\":\n\t                        var isURL = Str(value).match(R._ISURL);\n\t                        if (isURL) {\n\t                            el = $(\"pattern\");\n\t                            var ig = $(\"image\");\n\t                            el.id = R.createUUID();\n\t                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\n\t                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\n\t                            el.appendChild(ig);\n\n\t                            (function (el) {\n\t                                R._preload(isURL[1], function () {\n\t                                    var w = this.offsetWidth,\n\t                                        h = this.offsetHeight;\n\t                                    $(el, {width: w, height: h});\n\t                                    $(ig, {width: w, height: h});\n\t                                });\n\t                            })(el);\n\t                            o.paper.defs.appendChild(el);\n\t                            $(node, {fill: \"url(#\" + el.id + \")\"});\n\t                            o.pattern = el;\n\t                            o.pattern && updatePosition(o);\n\t                            break;\n\t                        }\n\t                        var clr = R.getRGB(value);\n\t                        if (!clr.error) {\n\t                            delete params.gradient;\n\t                            delete attrs.gradient;\n\t                            !R.is(attrs.opacity, \"undefined\") &&\n\t                                R.is(params.opacity, \"undefined\") &&\n\t                                $(node, {opacity: attrs.opacity});\n\t                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\n\t                                R.is(params[\"fill-opacity\"], \"undefined\") &&\n\t                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\n\t                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\n\t                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\n\t                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n\t                                if (gradient) {\n\t                                    var stops = gradient.getElementsByTagName(\"stop\");\n\t                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\n\t                                }\n\t                            }\n\t                            attrs.gradient = value;\n\t                            attrs.fill = \"none\";\n\t                            break;\n\t                        }\n\t                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n\t                    case \"stroke\":\n\t                        clr = R.getRGB(value);\n\t                        node.setAttribute(att, clr.hex);\n\t                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n\t                        if (att == \"stroke\" && o._.arrows) {\n\t                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n\t                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n\t                        }\n\t                        break;\n\t                    case \"gradient\":\n\t                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\n\t                        break;\n\t                    case \"opacity\":\n\t                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\n\t                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\n\t                        }\n\t                        // fall\n\t                    case \"fill-opacity\":\n\t                        if (attrs.gradient) {\n\t                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n\t                            if (gradient) {\n\t                                stops = gradient.getElementsByTagName(\"stop\");\n\t                                $(stops[stops.length - 1], {\"stop-opacity\": value});\n\t                            }\n\t                            break;\n\t                        }\n\t                    default:\n\t                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\n\t                        var cssrule = att.replace(/(\\-.)/g, function (w) {\n\t                            return w.substring(1).toUpperCase();\n\t                        });\n\t                        node.style[cssrule] = value;\n\t                        o._.dirty = 1;\n\t                        node.setAttribute(att, value);\n\t                        break;\n\t                }\n\t            }\n\t        }\n\n\t        tuneText(o, params);\n\t        node.style.visibility = vis;\n\t    },\n\t    leading = 1.2,\n\t    tuneText = function (el, params) {\n\t        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\n\t            return;\n\t        }\n\t        var a = el.attrs,\n\t            node = el.node,\n\t            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\"font-size\"), 10) : 10;\n\n\t        if (params[has](\"text\")) {\n\t            a.text = params.text;\n\t            while (node.firstChild) {\n\t                node.removeChild(node.firstChild);\n\t            }\n\t            var texts = Str(params.text).split(\"\\n\"),\n\t                tspans = [],\n\t                tspan;\n\t            for (var i = 0, ii = texts.length; i < ii; i++) {\n\t                tspan = $(\"tspan\");\n\t                i && $(tspan, {dy: fontSize * leading, x: a.x});\n\t                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\n\t                node.appendChild(tspan);\n\t                tspans[i] = tspan;\n\t            }\n\t        } else {\n\t            tspans = node.getElementsByTagName(\"tspan\");\n\t            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\n\t                $(tspans[i], {dy: fontSize * leading, x: a.x});\n\t            } else {\n\t                $(tspans[0], {dy: 0});\n\t            }\n\t        }\n\t        $(node, {x: a.x, y: a.y});\n\t        el._.dirty = 1;\n\t        var bb = el._getBBox(),\n\t            dif = a.y - (bb.y + bb.height / 2);\n\t        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\n\t    },\n\t    getRealNode = function (node) {\n\t        if (node.parentNode && node.parentNode.tagName.toLowerCase() === \"a\") {\n\t            return node.parentNode;\n\t        } else {\n\t            return node;\n\t        }\n\t    },\n\t    Element = function (node, svg) {\n\t        var X = 0,\n\t            Y = 0;\n\t        /*\\\n\t         * Element.node\n\t         [ property (object) ]\n\t         **\n\t         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n\t         **\n\t         * Note: Don’t mess with it.\n\t         > Usage\n\t         | // draw a circle at coordinate 10,10 with radius of 10\n\t         | var c = paper.circle(10, 10, 10);\n\t         | c.node.onclick = function () {\n\t         |     c.attr(\"fill\", \"red\");\n\t         | };\n\t        \\*/\n\t        this[0] = this.node = node;\n\t        /*\\\n\t         * Element.raphael\n\t         [ property (object) ]\n\t         **\n\t         * Internal reference to @Raphael object. In case it is not available.\n\t         > Usage\n\t         | Raphael.el.red = function () {\n\t         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\n\t         |     hsb.h = 1;\n\t         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\n\t         | }\n\t        \\*/\n\t        node.raphael = true;\n\t        /*\\\n\t         * Element.id\n\t         [ property (number) ]\n\t         **\n\t         * Unique id of the element. Especially useful when you want to listen to events of the element,\n\t         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\n\t        \\*/\n\t        this.id = guid();\n\t        node.raphaelid = this.id;\n\n\t        /**\n\t        * Method that returns a 5 letter/digit id, enough for 36^5 = 60466176 elements\n\t        * @returns {string} id\n\t        */\n\t        function guid() {\n\t            return (\"0000\" + (Math.random()*Math.pow(36,5) << 0).toString(36)).slice(-5);\n\t        }\n\n\t        this.matrix = R.matrix();\n\t        this.realPath = null;\n\t        /*\\\n\t         * Element.paper\n\t         [ property (object) ]\n\t         **\n\t         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\n\t         > Usage\n\t         | Raphael.el.cross = function () {\n\t         |     this.attr({fill: \"red\"});\n\t         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\n\t         |         .attr({stroke: \"red\"});\n\t         | }\n\t        \\*/\n\t        this.paper = svg;\n\t        this.attrs = this.attrs || {};\n\t        this._ = {\n\t            transform: [],\n\t            sx: 1,\n\t            sy: 1,\n\t            deg: 0,\n\t            dx: 0,\n\t            dy: 0,\n\t            dirty: 1\n\t        };\n\t        !svg.bottom && (svg.bottom = this);\n\t        /*\\\n\t         * Element.prev\n\t         [ property (object) ]\n\t         **\n\t         * Reference to the previous element in the hierarchy.\n\t        \\*/\n\t        this.prev = svg.top;\n\t        svg.top && (svg.top.next = this);\n\t        svg.top = this;\n\t        /*\\\n\t         * Element.next\n\t         [ property (object) ]\n\t         **\n\t         * Reference to the next element in the hierarchy.\n\t        \\*/\n\t        this.next = null;\n\t    },\n\t    elproto = R.el;\n\n\t    Element.prototype = elproto;\n\t    elproto.constructor = Element;\n\n\t    R._engine.path = function (pathString, SVG) {\n\t        var el = $(\"path\");\n\t        SVG.canvas && SVG.canvas.appendChild(el);\n\t        var p = new Element(el, SVG);\n\t        p.type = \"path\";\n\t        setFillAndStroke(p, {\n\t            fill: \"none\",\n\t            stroke: \"#000\",\n\t            path: pathString\n\t        });\n\t        return p;\n\t    };\n\t    /*\\\n\t     * Element.rotate\n\t     [ method ]\n\t     **\n\t     * Deprecated! Use @Element.transform instead.\n\t     * Adds rotation by given angle around given point to the list of\n\t     * transformations of the element.\n\t     > Parameters\n\t     - deg (number) angle in degrees\n\t     - cx (number) #optional x coordinate of the centre of rotation\n\t     - cy (number) #optional y coordinate of the centre of rotation\n\t     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.rotate = function (deg, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        deg = Str(deg).split(separator);\n\t        if (deg.length - 1) {\n\t            cx = toFloat(deg[1]);\n\t            cy = toFloat(deg[2]);\n\t        }\n\t        deg = toFloat(deg[0]);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t            cx = bbox.x + bbox.width / 2;\n\t            cy = bbox.y + bbox.height / 2;\n\t        }\n\t        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.scale\n\t     [ method ]\n\t     **\n\t     * Deprecated! Use @Element.transform instead.\n\t     * Adds scale by given amount relative to given point to the list of\n\t     * transformations of the element.\n\t     > Parameters\n\t     - sx (number) horisontal scale amount\n\t     - sy (number) vertical scale amount\n\t     - cx (number) #optional x coordinate of the centre of scale\n\t     - cy (number) #optional y coordinate of the centre of scale\n\t     * If cx & cy aren’t specified centre of the shape is used instead.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.scale = function (sx, sy, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        sx = Str(sx).split(separator);\n\t        if (sx.length - 1) {\n\t            sy = toFloat(sx[1]);\n\t            cx = toFloat(sx[2]);\n\t            cy = toFloat(sx[3]);\n\t        }\n\t        sx = toFloat(sx[0]);\n\t        (sy == null) && (sy = sx);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t        }\n\t        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n\t        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n\t        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.translate\n\t     [ method ]\n\t     **\n\t     * Deprecated! Use @Element.transform instead.\n\t     * Adds translation by given amount to the list of transformations of the element.\n\t     > Parameters\n\t     - dx (number) horisontal shift\n\t     - dy (number) vertical shift\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.translate = function (dx, dy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        dx = Str(dx).split(separator);\n\t        if (dx.length - 1) {\n\t            dy = toFloat(dx[1]);\n\t        }\n\t        dx = toFloat(dx[0]) || 0;\n\t        dy = +dy || 0;\n\t        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.transform\n\t     [ method ]\n\t     **\n\t     * Adds transformation to the element which is separate to other attributes,\n\t     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\n\t     * of transformation string is similar to the path string syntax:\n\t     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\n\t     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\n\t     * scale and `m` is for matrix.\n\t     *\n\t     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\n\t     *\n\t     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\n\t     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\n\t     * coordinates as optional parameters, the default is the centre point of the element.\n\t     * Matrix accepts six parameters.\n\t     > Usage\n\t     | var el = paper.rect(10, 20, 300, 200);\n\t     | // translate 100, 100, rotate 45°, translate -100, 0\n\t     | el.transform(\"t100,100r45t-100,0\");\n\t     | // if you want you can append or prepend transformations\n\t     | el.transform(\"...t50,50\");\n\t     | el.transform(\"s2...\");\n\t     | // or even wrap\n\t     | el.transform(\"t50,50...t-50-50\");\n\t     | // to reset transformation call method with empty string\n\t     | el.transform(\"\");\n\t     | // to get current value call it without parameters\n\t     | console.log(el.transform());\n\t     > Parameters\n\t     - tstr (string) #optional transformation string\n\t     * If tstr isn’t specified\n\t     = (string) current transformation string\n\t     * else\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.transform = function (tstr) {\n\t        var _ = this._;\n\t        if (tstr == null) {\n\t            return _.transform;\n\t        }\n\t        R._extractTransform(this, tstr);\n\n\t        this.clip && $(this.clip, {transform: this.matrix.invert()});\n\t        this.pattern && updatePosition(this);\n\t        this.node && $(this.node, {transform: this.matrix});\n\n\t        if (_.sx != 1 || _.sy != 1) {\n\t            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\n\t            this.attr({\"stroke-width\": sw});\n\t        }\n\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.hide\n\t     [ method ]\n\t     **\n\t     * Makes element invisible. See @Element.show.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.hide = function () {\n\t        if(!this.removed) this.node.style.display = \"none\";\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.show\n\t     [ method ]\n\t     **\n\t     * Makes element visible. See @Element.hide.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.show = function () {\n\t        if(!this.removed) this.node.style.display = \"\";\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.remove\n\t     [ method ]\n\t     **\n\t     * Removes element from the paper.\n\t    \\*/\n\t    elproto.remove = function () {\n\t        var node = getRealNode(this.node);\n\t        if (this.removed || !node.parentNode) {\n\t            return;\n\t        }\n\t        var paper = this.paper;\n\t        paper.__set__ && paper.__set__.exclude(this);\n\t        eve.unbind(\"raphael.*.*.\" + this.id);\n\t        if (this.gradient) {\n\t            paper.defs.removeChild(this.gradient);\n\t        }\n\t        R._tear(this, paper);\n\n\t        node.parentNode.removeChild(node);\n\n\t        // Remove custom data for element\n\t        this.removeData();\n\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t        this.removed = true;\n\t    };\n\t    elproto._getBBox = function () {\n\t        if (this.node.style.display == \"none\") {\n\t            this.show();\n\t            var hide = true;\n\t        }\n\t        var canvasHidden = false,\n\t            containerStyle;\n\t        if (this.paper.canvas.parentElement) {\n\t          containerStyle = this.paper.canvas.parentElement.style;\n\t        } //IE10+ can't find parentElement\n\t        else if (this.paper.canvas.parentNode) {\n\t          containerStyle = this.paper.canvas.parentNode.style;\n\t        }\n\n\t        if(containerStyle && containerStyle.display == \"none\") {\n\t          canvasHidden = true;\n\t          containerStyle.display = \"\";\n\t        }\n\t        var bbox = {};\n\t        try {\n\t            bbox = this.node.getBBox();\n\t        } catch(e) {\n\t            // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\n\t            bbox = {\n\t                x: this.node.clientLeft,\n\t                y: this.node.clientTop,\n\t                width: this.node.clientWidth,\n\t                height: this.node.clientHeight\n\t            }\n\t        } finally {\n\t            bbox = bbox || {};\n\t            if(canvasHidden){\n\t              containerStyle.display = \"none\";\n\t            }\n\t        }\n\t        hide && this.hide();\n\t        return bbox;\n\t    };\n\t    /*\\\n\t     * Element.attr\n\t     [ method ]\n\t     **\n\t     * Sets the attributes of the element.\n\t     > Parameters\n\t     - attrName (string) attribute’s name\n\t     - value (string) value\n\t     * or\n\t     - params (object) object of name/value pairs\n\t     * or\n\t     - attrName (string) attribute’s name\n\t     * or\n\t     - attrNames (array) in this case method returns array of current values for given attribute names\n\t     = (object) @Element if attrsName & value or params are passed in.\n\t     = (...) value of the attribute if only attrsName is passed in.\n\t     = (array) array of values of the attribute if attrsNames is passed in.\n\t     = (object) object of attributes if nothing is passed in.\n\t     > Possible parameters\n\t     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\n\t     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\n\t     o clip-rect (string) comma or space separated values: x, y, width and height\n\t     o cursor (string) CSS type of the cursor\n\t     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\n\t     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\n\t     o fill (string) colour, gradient or image\n\t     o fill-opacity (number)\n\t     o font (string)\n\t     o font-family (string)\n\t     o font-size (number) font size in pixels\n\t     o font-weight (string)\n\t     o height (number)\n\t     o href (string) URL, if specified element behaves as hyperlink\n\t     o opacity (number)\n\t     o path (string) SVG path string format\n\t     o r (number) radius of the circle, ellipse or rounded corner on the rect\n\t     o rx (number) horisontal radius of the ellipse\n\t     o ry (number) vertical radius of the ellipse\n\t     o src (string) image URL, only works for @Element.image element\n\t     o stroke (string) stroke colour\n\t     o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\n\t     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\n\t     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\n\t     o stroke-miterlimit (number)\n\t     o stroke-opacity (number)\n\t     o stroke-width (number) stroke width in pixels, default is '1'\n\t     o target (string) used with href\n\t     o text (string) contents of the text element. Use `\\n` for multiline text\n\t     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\n\t     o title (string) will create tooltip with a given text\n\t     o transform (string) see @Element.transform\n\t     o width (number)\n\t     o x (number)\n\t     o y (number)\n\t     > Gradients\n\t     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\n\t     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\n\t     *\n\t     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\n\t     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\n\t     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\n\t     > Path String\n\t     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\n\t     > Colour Parsing\n\t     # <ul>\n\t     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n\t     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n\t     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n\t     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n\t     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n\t     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\n\t     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\n\t     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n\t     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n\t     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\n\t     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\n\t     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n\t     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\n\t     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\n\t     # </ul>\n\t    \\*/\n\t    elproto.attr = function (name, value) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (name == null) {\n\t            var res = {};\n\t            for (var a in this.attrs) if (this.attrs[has](a)) {\n\t                res[a] = this.attrs[a];\n\t            }\n\t            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n\t            res.transform = this._.transform;\n\t            return res;\n\t        }\n\t        if (value == null && R.is(name, \"string\")) {\n\t            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\n\t                return this.attrs.gradient;\n\t            }\n\t            if (name == \"transform\") {\n\t                return this._.transform;\n\t            }\n\t            var names = name.split(separator),\n\t                out = {};\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                name = names[i];\n\t                if (name in this.attrs) {\n\t                    out[name] = this.attrs[name];\n\t                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n\t                    out[name] = this.paper.customAttributes[name].def;\n\t                } else {\n\t                    out[name] = R._availableAttrs[name];\n\t                }\n\t            }\n\t            return ii - 1 ? out : out[names[0]];\n\t        }\n\t        if (value == null && R.is(name, \"array\")) {\n\t            out = {};\n\t            for (i = 0, ii = name.length; i < ii; i++) {\n\t                out[name[i]] = this.attr(name[i]);\n\t            }\n\t            return out;\n\t        }\n\t        if (value != null) {\n\t            var params = {};\n\t            params[name] = value;\n\t        } else if (name != null && R.is(name, \"object\")) {\n\t            params = name;\n\t        }\n\t        for (var key in params) {\n\t            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n\t        }\n\t        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n\t            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n\t            this.attrs[key] = params[key];\n\t            for (var subkey in par) if (par[has](subkey)) {\n\t                params[subkey] = par[subkey];\n\t            }\n\t        }\n\t        setFillAndStroke(this, params);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.toFront\n\t     [ method ]\n\t     **\n\t     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.toFront = function () {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        var node = getRealNode(this.node);\n\t        node.parentNode.appendChild(node);\n\t        var svg = this.paper;\n\t        svg.top != this && R._tofront(this, svg);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.toBack\n\t     [ method ]\n\t     **\n\t     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.toBack = function () {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        var node = getRealNode(this.node);\n\t        var parentNode = node.parentNode;\n\t        parentNode.insertBefore(node, parentNode.firstChild);\n\t        R._toback(this, this.paper);\n\t        var svg = this.paper;\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertAfter\n\t     [ method ]\n\t     **\n\t     * Inserts current object after the given one.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.insertAfter = function (element) {\n\t        if (this.removed || !element) {\n\t            return this;\n\t        }\n\n\t        var node = getRealNode(this.node);\n\t        var afterNode = getRealNode(element.node || element[element.length - 1].node);\n\t        if (afterNode.nextSibling) {\n\t            afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\n\t        } else {\n\t            afterNode.parentNode.appendChild(node);\n\t        }\n\t        R._insertafter(this, element, this.paper);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertBefore\n\t     [ method ]\n\t     **\n\t     * Inserts current object before the given one.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.insertBefore = function (element) {\n\t        if (this.removed || !element) {\n\t            return this;\n\t        }\n\n\t        var node = getRealNode(this.node);\n\t        var beforeNode = getRealNode(element.node || element[0].node);\n\t        beforeNode.parentNode.insertBefore(node, beforeNode);\n\t        R._insertbefore(this, element, this.paper);\n\t        return this;\n\t    };\n\t    elproto.blur = function (size) {\n\t        // Experimental. No Safari support. Use it on your own risk.\n\t        var t = this;\n\t        if (+size !== 0) {\n\t            var fltr = $(\"filter\"),\n\t                blur = $(\"feGaussianBlur\");\n\t            t.attrs.blur = size;\n\t            fltr.id = R.createUUID();\n\t            $(blur, {stdDeviation: +size || 1.5});\n\t            fltr.appendChild(blur);\n\t            t.paper.defs.appendChild(fltr);\n\t            t._blur = fltr;\n\t            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\n\t        } else {\n\t            if (t._blur) {\n\t                t._blur.parentNode.removeChild(t._blur);\n\t                delete t._blur;\n\t                delete t.attrs.blur;\n\t            }\n\t            t.node.removeAttribute(\"filter\");\n\t        }\n\t        return t;\n\t    };\n\t    R._engine.circle = function (svg, x, y, r) {\n\t        var el = $(\"circle\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\n\t        res.type = \"circle\";\n\t        $(el, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.rect = function (svg, x, y, w, h, r) {\n\t        var el = $(\"rect\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\n\t        res.type = \"rect\";\n\t        $(el, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.ellipse = function (svg, x, y, rx, ry) {\n\t        var el = $(\"ellipse\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\n\t        res.type = \"ellipse\";\n\t        $(el, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.image = function (svg, src, x, y, w, h) {\n\t        var el = $(\"image\");\n\t        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\n\t        el.setAttributeNS(xlink, \"href\", src);\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {x: x, y: y, width: w, height: h, src: src};\n\t        res.type = \"image\";\n\t        return res;\n\t    };\n\t    R._engine.text = function (svg, x, y, text) {\n\t        var el = $(\"text\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {\n\t            x: x,\n\t            y: y,\n\t            \"text-anchor\": \"middle\",\n\t            text: text,\n\t            \"font-family\": R._availableAttrs[\"font-family\"],\n\t            \"font-size\": R._availableAttrs[\"font-size\"],\n\t            stroke: \"none\",\n\t            fill: \"#000\"\n\t        };\n\t        res.type = \"text\";\n\t        setFillAndStroke(res, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.setSize = function (width, height) {\n\t        this.width = width || this.width;\n\t        this.height = height || this.height;\n\t        this.canvas.setAttribute(\"width\", this.width);\n\t        this.canvas.setAttribute(\"height\", this.height);\n\t        if (this._viewBox) {\n\t            this.setViewBox.apply(this, this._viewBox);\n\t        }\n\t        return this;\n\t    };\n\t    R._engine.create = function () {\n\t        var con = R._getContainer.apply(0, arguments),\n\t            container = con && con.container,\n\t            x = con.x,\n\t            y = con.y,\n\t            width = con.width,\n\t            height = con.height;\n\t        if (!container) {\n\t            throw new Error(\"SVG container not found.\");\n\t        }\n\t        var cnvs = $(\"svg\"),\n\t            css = \"overflow:hidden;\",\n\t            isFloating;\n\t        x = x || 0;\n\t        y = y || 0;\n\t        width = width || 512;\n\t        height = height || 342;\n\t        $(cnvs, {\n\t            height: height,\n\t            version: 1.1,\n\t            width: width,\n\t            xmlns: \"http://www.w3.org/2000/svg\",\n\t            \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\"\n\t        });\n\t        if (container == 1) {\n\t            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\n\t            R._g.doc.body.appendChild(cnvs);\n\t            isFloating = 1;\n\t        } else {\n\t            cnvs.style.cssText = css + \"position:relative\";\n\t            if (container.firstChild) {\n\t                container.insertBefore(cnvs, container.firstChild);\n\t            } else {\n\t                container.appendChild(cnvs);\n\t            }\n\t        }\n\t        container = new R._Paper;\n\t        container.width = width;\n\t        container.height = height;\n\t        container.canvas = cnvs;\n\t        container.clear();\n\t        container._left = container._top = 0;\n\t        isFloating && (container.renderfix = function () {});\n\t        container.renderfix();\n\t        return container;\n\t    };\n\t    R._engine.setViewBox = function (x, y, w, h, fit) {\n\t        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n\t        var paperSize = this.getSize(),\n\t            size = mmax(w / paperSize.width, h / paperSize.height),\n\t            top = this.top,\n\t            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\n\t            vb,\n\t            sw;\n\t        if (x == null) {\n\t            if (this._vbSize) {\n\t                size = 1;\n\t            }\n\t            delete this._vbSize;\n\t            vb = \"0 0 \" + this.width + S + this.height;\n\t        } else {\n\t            this._vbSize = size;\n\t            vb = x + S + y + S + w + S + h;\n\t        }\n\t        $(this.canvas, {\n\t            viewBox: vb,\n\t            preserveAspectRatio: aspectRatio\n\t        });\n\t        while (size && top) {\n\t            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\n\t            top.attr({\"stroke-width\": sw});\n\t            top._.dirty = 1;\n\t            top._.dirtyT = 1;\n\t            top = top.prev;\n\t        }\n\t        this._viewBox = [x, y, w, h, !!fit];\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Paper.renderfix\n\t     [ method ]\n\t     **\n\t     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependent\n\t     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\n\t     * This method fixes the issue.\n\t     **\n\t       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\n\t    \\*/\n\t    R.prototype.renderfix = function () {\n\t        var cnvs = this.canvas,\n\t            s = cnvs.style,\n\t            pos;\n\t        try {\n\t            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\n\t        } catch (e) {\n\t            pos = cnvs.createSVGMatrix();\n\t        }\n\t        var left = -pos.e % 1,\n\t            top = -pos.f % 1;\n\t        if (left || top) {\n\t            if (left) {\n\t                this._left = (this._left + left) % 1;\n\t                s.left = this._left + \"px\";\n\t            }\n\t            if (top) {\n\t                this._top = (this._top + top) % 1;\n\t                s.top = this._top + \"px\";\n\t            }\n\t        }\n\t    };\n\t    /*\\\n\t     * Paper.clear\n\t     [ method ]\n\t     **\n\t     * Clears the paper, i.e. removes all the elements.\n\t    \\*/\n\t    R.prototype.clear = function () {\n\t        R.eve(\"raphael.clear\", this);\n\t        var c = this.canvas;\n\t        while (c.firstChild) {\n\t            c.removeChild(c.firstChild);\n\t        }\n\t        this.bottom = this.top = null;\n\t        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\n\t        c.appendChild(this.desc);\n\t        c.appendChild(this.defs = $(\"defs\"));\n\t    };\n\t    /*\\\n\t     * Paper.remove\n\t     [ method ]\n\t     **\n\t     * Removes the paper from the DOM.\n\t    \\*/\n\t    R.prototype.remove = function () {\n\t        eve(\"raphael.remove\", this);\n\t        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t    };\n\t    var setproto = R.st;\n\t    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n\t        setproto[method] = (function (methodname) {\n\t            return function () {\n\t                var arg = arguments;\n\t                return this.forEach(function (el) {\n\t                    el[methodname].apply(el, arg);\n\t                });\n\t            };\n\t        })(method);\n\t    }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(R) {\n\t    if (R && !R.vml) {\n\t        return;\n\t    }\n\n\t    var has = \"hasOwnProperty\",\n\t        Str = String,\n\t        toFloat = parseFloat,\n\t        math = Math,\n\t        round = math.round,\n\t        mmax = math.max,\n\t        mmin = math.min,\n\t        abs = math.abs,\n\t        fillString = \"fill\",\n\t        separator = /[, ]+/,\n\t        eve = R.eve,\n\t        ms = \" progid:DXImageTransform.Microsoft\",\n\t        S = \" \",\n\t        E = \"\",\n\t        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\n\t        bites = /([clmz]),?([^clmz]*)/gi,\n\t        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\n\t        val = /-?[^,\\s-]+/g,\n\t        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",\n\t        zoom = 21600,\n\t        pathTypes = {path: 1, rect: 1, image: 1},\n\t        ovalTypes = {circle: 1, ellipse: 1},\n\t        path2vml = function (path) {\n\t            var total =  /[ahqstv]/ig,\n\t                command = R._pathToAbsolute;\n\t            Str(path).match(total) && (command = R._path2curve);\n\t            total = /[clmz]/g;\n\t            if (command == R._pathToAbsolute && !Str(path).match(total)) {\n\t                var res = Str(path).replace(bites, function (all, command, args) {\n\t                    var vals = [],\n\t                        isMove = command.toLowerCase() == \"m\",\n\t                        res = map[command];\n\t                    args.replace(val, function (value) {\n\t                        if (isMove && vals.length == 2) {\n\t                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\n\t                            vals = [];\n\t                        }\n\t                        vals.push(round(value * zoom));\n\t                    });\n\t                    return res + vals;\n\t                });\n\t                return res;\n\t            }\n\t            var pa = command(path), p, r;\n\t            res = [];\n\t            for (var i = 0, ii = pa.length; i < ii; i++) {\n\t                p = pa[i];\n\t                r = pa[i][0].toLowerCase();\n\t                r == \"z\" && (r = \"x\");\n\t                for (var j = 1, jj = p.length; j < jj; j++) {\n\t                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\n\t                }\n\t                res.push(r);\n\t            }\n\t            return res.join(S);\n\t        },\n\t        compensation = function (deg, dx, dy) {\n\t            var m = R.matrix();\n\t            m.rotate(-deg, .5, .5);\n\t            return {\n\t                dx: m.x(dx, dy),\n\t                dy: m.y(dx, dy)\n\t            };\n\t        },\n\t        setCoords = function (p, sx, sy, dx, dy, deg) {\n\t            var _ = p._,\n\t                m = p.matrix,\n\t                fillpos = _.fillpos,\n\t                o = p.node,\n\t                s = o.style,\n\t                y = 1,\n\t                flip = \"\",\n\t                dxdy,\n\t                kx = zoom / sx,\n\t                ky = zoom / sy;\n\t            s.visibility = \"hidden\";\n\t            if (!sx || !sy) {\n\t                return;\n\t            }\n\t            o.coordsize = abs(kx) + S + abs(ky);\n\t            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\n\t            if (deg) {\n\t                var c = compensation(deg, dx, dy);\n\t                dx = c.dx;\n\t                dy = c.dy;\n\t            }\n\t            sx < 0 && (flip += \"x\");\n\t            sy < 0 && (flip += \" y\") && (y = -1);\n\t            s.flip = flip;\n\t            o.coordorigin = (dx * -kx) + S + (dy * -ky);\n\t            if (fillpos || _.fillsize) {\n\t                var fill = o.getElementsByTagName(fillString);\n\t                fill = fill && fill[0];\n\t                o.removeChild(fill);\n\t                if (fillpos) {\n\t                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\n\t                    fill.position = c.dx * y + S + c.dy * y;\n\t                }\n\t                if (_.fillsize) {\n\t                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\n\t                }\n\t                o.appendChild(fill);\n\t            }\n\t            s.visibility = \"visible\";\n\t        };\n\t    R.toString = function () {\n\t        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\n\t    };\n\t    var addArrow = function (o, value, isEnd) {\n\t        var values = Str(value).toLowerCase().split(\"-\"),\n\t            se = isEnd ? \"end\" : \"start\",\n\t            i = values.length,\n\t            type = \"classic\",\n\t            w = \"medium\",\n\t            h = \"medium\";\n\t        while (i--) {\n\t            switch (values[i]) {\n\t                case \"block\":\n\t                case \"classic\":\n\t                case \"oval\":\n\t                case \"diamond\":\n\t                case \"open\":\n\t                case \"none\":\n\t                    type = values[i];\n\t                    break;\n\t                case \"wide\":\n\t                case \"narrow\": h = values[i]; break;\n\t                case \"long\":\n\t                case \"short\": w = values[i]; break;\n\t            }\n\t        }\n\t        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\n\t        stroke[se + \"arrow\"] = type;\n\t        stroke[se + \"arrowlength\"] = w;\n\t        stroke[se + \"arrowwidth\"] = h;\n\t    },\n\t    setFillAndStroke = function (o, params) {\n\t        // o.paper.canvas.style.display = \"none\";\n\t        o.attrs = o.attrs || {};\n\t        var node = o.node,\n\t            a = o.attrs,\n\t            s = node.style,\n\t            xy,\n\t            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\n\t            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\n\t            res = o;\n\n\n\t        for (var par in params) if (params[has](par)) {\n\t            a[par] = params[par];\n\t        }\n\t        if (newpath) {\n\t            a.path = R._getPath[o.type](o);\n\t            o._.dirty = 1;\n\t        }\n\t        params.href && (node.href = params.href);\n\t        params.title && (node.title = params.title);\n\t        params.target && (node.target = params.target);\n\t        params.cursor && (s.cursor = params.cursor);\n\t        \"blur\" in params && o.blur(params.blur);\n\t        if (params.path && o.type == \"path\" || newpath) {\n\t            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\n\t            o._.dirty = 1;\n\t            if (o.type == \"image\") {\n\t                o._.fillpos = [a.x, a.y];\n\t                o._.fillsize = [a.width, a.height];\n\t                setCoords(o, 1, 1, 0, 0, 0);\n\t            }\n\t        }\n\t        \"transform\" in params && o.transform(params.transform);\n\t        if (isOval) {\n\t            var cx = +a.cx,\n\t                cy = +a.cy,\n\t                rx = +a.rx || +a.r || 0,\n\t                ry = +a.ry || +a.r || 0;\n\t            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\n\t            o._.dirty = 1;\n\t        }\n\t        if (\"clip-rect\" in params) {\n\t            var rect = Str(params[\"clip-rect\"]).split(separator);\n\t            if (rect.length == 4) {\n\t                rect[2] = +rect[2] + (+rect[0]);\n\t                rect[3] = +rect[3] + (+rect[1]);\n\t                var div = node.clipRect || R._g.doc.createElement(\"div\"),\n\t                    dstyle = div.style;\n\t                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\n\t                if (!node.clipRect) {\n\t                    dstyle.position = \"absolute\";\n\t                    dstyle.top = 0;\n\t                    dstyle.left = 0;\n\t                    dstyle.width = o.paper.width + \"px\";\n\t                    dstyle.height = o.paper.height + \"px\";\n\t                    node.parentNode.insertBefore(div, node);\n\t                    div.appendChild(node);\n\t                    node.clipRect = div;\n\t                }\n\t            }\n\t            if (!params[\"clip-rect\"]) {\n\t                node.clipRect && (node.clipRect.style.clip = \"auto\");\n\t            }\n\t        }\n\t        if (o.textpath) {\n\t            var textpathStyle = o.textpath.style;\n\t            params.font && (textpathStyle.font = params.font);\n\t            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\n\t            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\n\t            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\n\t            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\n\t        }\n\t        if (\"arrow-start\" in params) {\n\t            addArrow(res, params[\"arrow-start\"]);\n\t        }\n\t        if (\"arrow-end\" in params) {\n\t            addArrow(res, params[\"arrow-end\"], 1);\n\t        }\n\t        if (params.opacity != null ||\n\t            params.fill != null ||\n\t            params.src != null ||\n\t            params.stroke != null ||\n\t            params[\"stroke-width\"] != null ||\n\t            params[\"stroke-opacity\"] != null ||\n\t            params[\"fill-opacity\"] != null ||\n\t            params[\"stroke-dasharray\"] != null ||\n\t            params[\"stroke-miterlimit\"] != null ||\n\t            params[\"stroke-linejoin\"] != null ||\n\t            params[\"stroke-linecap\"] != null) {\n\t            var fill = node.getElementsByTagName(fillString),\n\t                newfill = false;\n\t            fill = fill && fill[0];\n\t            !fill && (newfill = fill = createNode(fillString));\n\t            if (o.type == \"image\" && params.src) {\n\t                fill.src = params.src;\n\t            }\n\t            params.fill && (fill.on = true);\n\t            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\n\t                fill.on = false;\n\t            }\n\t            if (fill.on && params.fill) {\n\t                var isURL = Str(params.fill).match(R._ISURL);\n\t                if (isURL) {\n\t                    fill.parentNode == node && node.removeChild(fill);\n\t                    fill.rotate = true;\n\t                    fill.src = isURL[1];\n\t                    fill.type = \"tile\";\n\t                    var bbox = o.getBBox(1);\n\t                    fill.position = bbox.x + S + bbox.y;\n\t                    o._.fillpos = [bbox.x, bbox.y];\n\n\t                    R._preload(isURL[1], function () {\n\t                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\n\t                    });\n\t                } else {\n\t                    fill.color = R.getRGB(params.fill).hex;\n\t                    fill.src = E;\n\t                    fill.type = \"solid\";\n\t                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\n\t                        a.fill = \"none\";\n\t                        a.gradient = params.fill;\n\t                        fill.rotate = false;\n\t                    }\n\t                }\n\t            }\n\t            if (\"fill-opacity\" in params || \"opacity\" in params) {\n\t                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\n\t                opacity = mmin(mmax(opacity, 0), 1);\n\t                fill.opacity = opacity;\n\t                if (fill.src) {\n\t                    fill.color = \"none\";\n\t                }\n\t            }\n\t            node.appendChild(fill);\n\t            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\n\t            newstroke = false;\n\t            !stroke && (newstroke = stroke = createNode(\"stroke\"));\n\t            if ((params.stroke && params.stroke != \"none\") ||\n\t                params[\"stroke-width\"] ||\n\t                params[\"stroke-opacity\"] != null ||\n\t                params[\"stroke-dasharray\"] ||\n\t                params[\"stroke-miterlimit\"] ||\n\t                params[\"stroke-linejoin\"] ||\n\t                params[\"stroke-linecap\"]) {\n\t                stroke.on = true;\n\t            }\n\t            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\n\t            var strokeColor = R.getRGB(params.stroke);\n\t            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\n\t            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\n\t            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\n\t            opacity = mmin(mmax(opacity, 0), 1);\n\t            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\n\t            params[\"stroke-width\"] && (stroke.weight = width);\n\t            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\n\t            stroke.opacity = opacity;\n\n\t            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\n\t            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\n\t            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\n\t            if (\"stroke-dasharray\" in params) {\n\t                var dasharray = {\n\t                    \"-\": \"shortdash\",\n\t                    \".\": \"shortdot\",\n\t                    \"-.\": \"shortdashdot\",\n\t                    \"-..\": \"shortdashdotdot\",\n\t                    \". \": \"dot\",\n\t                    \"- \": \"dash\",\n\t                    \"--\": \"longdash\",\n\t                    \"- .\": \"dashdot\",\n\t                    \"--.\": \"longdashdot\",\n\t                    \"--..\": \"longdashdotdot\"\n\t                };\n\t                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\n\t            }\n\t            newstroke && node.appendChild(stroke);\n\t        }\n\t        if (res.type == \"text\") {\n\t            res.paper.canvas.style.display = E;\n\t            var span = res.paper.span,\n\t                m = 100,\n\t                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\n\t            s = span.style;\n\t            a.font && (s.font = a.font);\n\t            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\n\t            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\n\t            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\n\t            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\n\t            s.fontSize = fontSize * m + \"px\";\n\t            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\n\t            var brect = span.getBoundingClientRect();\n\t            res.W = a.w = (brect.right - brect.left) / m;\n\t            res.H = a.h = (brect.bottom - brect.top) / m;\n\t            // res.paper.canvas.style.display = \"none\";\n\t            res.X = a.x;\n\t            res.Y = a.y + res.H / 2;\n\n\t            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\n\t            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\n\t            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\n\t                res._.dirty = 1;\n\t                break;\n\t            }\n\n\t            // text-anchor emulation\n\t            switch (a[\"text-anchor\"]) {\n\t                case \"start\":\n\t                    res.textpath.style[\"v-text-align\"] = \"left\";\n\t                    res.bbx = res.W / 2;\n\t                break;\n\t                case \"end\":\n\t                    res.textpath.style[\"v-text-align\"] = \"right\";\n\t                    res.bbx = -res.W / 2;\n\t                break;\n\t                default:\n\t                    res.textpath.style[\"v-text-align\"] = \"center\";\n\t                    res.bbx = 0;\n\t                break;\n\t            }\n\t            res.textpath.style[\"v-text-kern\"] = true;\n\t        }\n\t        // res.paper.canvas.style.display = E;\n\t    },\n\t    addGradientFill = function (o, gradient, fill) {\n\t        o.attrs = o.attrs || {};\n\t        var attrs = o.attrs,\n\t            pow = Math.pow,\n\t            opacity,\n\t            oindex,\n\t            type = \"linear\",\n\t            fxfy = \".5 .5\";\n\t        o.attrs.gradient = gradient;\n\t        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\n\t            type = \"radial\";\n\t            if (fx && fy) {\n\t                fx = toFloat(fx);\n\t                fy = toFloat(fy);\n\t                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\n\t                fxfy = fx + S + fy;\n\t            }\n\t            return E;\n\t        });\n\t        gradient = gradient.split(/\\s*\\-\\s*/);\n\t        if (type == \"linear\") {\n\t            var angle = gradient.shift();\n\t            angle = -toFloat(angle);\n\t            if (isNaN(angle)) {\n\t                return null;\n\t            }\n\t        }\n\t        var dots = R._parseDots(gradient);\n\t        if (!dots) {\n\t            return null;\n\t        }\n\t        o = o.shape || o.node;\n\t        if (dots.length) {\n\t            o.removeChild(fill);\n\t            fill.on = true;\n\t            fill.method = \"none\";\n\t            fill.color = dots[0].color;\n\t            fill.color2 = dots[dots.length - 1].color;\n\t            var clrs = [];\n\t            for (var i = 0, ii = dots.length; i < ii; i++) {\n\t                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\n\t            }\n\t            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\n\t            if (type == \"radial\") {\n\t                fill.type = \"gradientTitle\";\n\t                fill.focus = \"100%\";\n\t                fill.focussize = \"0 0\";\n\t                fill.focusposition = fxfy;\n\t                fill.angle = 0;\n\t            } else {\n\t                // fill.rotate= true;\n\t                fill.type = \"gradient\";\n\t                fill.angle = (270 - angle) % 360;\n\t            }\n\t            o.appendChild(fill);\n\t        }\n\t        return 1;\n\t    },\n\t    Element = function (node, vml) {\n\t        this[0] = this.node = node;\n\t        node.raphael = true;\n\t        this.id = R._oid++;\n\t        node.raphaelid = this.id;\n\t        this.X = 0;\n\t        this.Y = 0;\n\t        this.attrs = {};\n\t        this.paper = vml;\n\t        this.matrix = R.matrix();\n\t        this._ = {\n\t            transform: [],\n\t            sx: 1,\n\t            sy: 1,\n\t            dx: 0,\n\t            dy: 0,\n\t            deg: 0,\n\t            dirty: 1,\n\t            dirtyT: 1\n\t        };\n\t        !vml.bottom && (vml.bottom = this);\n\t        this.prev = vml.top;\n\t        vml.top && (vml.top.next = this);\n\t        vml.top = this;\n\t        this.next = null;\n\t    };\n\t    var elproto = R.el;\n\n\t    Element.prototype = elproto;\n\t    elproto.constructor = Element;\n\t    elproto.transform = function (tstr) {\n\t        if (tstr == null) {\n\t            return this._.transform;\n\t        }\n\t        var vbs = this.paper._viewBoxShift,\n\t            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\n\t            oldt;\n\t        if (vbs) {\n\t            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\n\t        }\n\t        R._extractTransform(this, vbt + tstr);\n\t        var matrix = this.matrix.clone(),\n\t            skew = this.skew,\n\t            o = this.node,\n\t            split,\n\t            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\n\t            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\n\t        matrix.translate(1, 1);\n\t        if (isPatt || isGrad || this.type == \"image\") {\n\t            skew.matrix = \"1 0 0 1\";\n\t            skew.offset = \"0 0\";\n\t            split = matrix.split();\n\t            if ((isGrad && split.noRotation) || !split.isSimple) {\n\t                o.style.filter = matrix.toFilter();\n\t                var bb = this.getBBox(),\n\t                    bbt = this.getBBox(1),\n\t                    dx = bb.x - bbt.x,\n\t                    dy = bb.y - bbt.y;\n\t                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\n\t                setCoords(this, 1, 1, dx, dy, 0);\n\t            } else {\n\t                o.style.filter = E;\n\t                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\n\t            }\n\t        } else {\n\t            o.style.filter = E;\n\t            skew.matrix = Str(matrix);\n\t            skew.offset = matrix.offset();\n\t        }\n\t        if (oldt !== null) { // empty string value is true as well\n\t            this._.transform = oldt;\n\t            R._extractTransform(this, oldt);\n\t        }\n\t        return this;\n\t    };\n\t    elproto.rotate = function (deg, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (deg == null) {\n\t            return;\n\t        }\n\t        deg = Str(deg).split(separator);\n\t        if (deg.length - 1) {\n\t            cx = toFloat(deg[1]);\n\t            cy = toFloat(deg[2]);\n\t        }\n\t        deg = toFloat(deg[0]);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t            cx = bbox.x + bbox.width / 2;\n\t            cy = bbox.y + bbox.height / 2;\n\t        }\n\t        this._.dirtyT = 1;\n\t        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n\t        return this;\n\t    };\n\t    elproto.translate = function (dx, dy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        dx = Str(dx).split(separator);\n\t        if (dx.length - 1) {\n\t            dy = toFloat(dx[1]);\n\t        }\n\t        dx = toFloat(dx[0]) || 0;\n\t        dy = +dy || 0;\n\t        if (this._.bbox) {\n\t            this._.bbox.x += dx;\n\t            this._.bbox.y += dy;\n\t        }\n\t        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n\t        return this;\n\t    };\n\t    elproto.scale = function (sx, sy, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        sx = Str(sx).split(separator);\n\t        if (sx.length - 1) {\n\t            sy = toFloat(sx[1]);\n\t            cx = toFloat(sx[2]);\n\t            cy = toFloat(sx[3]);\n\t            isNaN(cx) && (cx = null);\n\t            isNaN(cy) && (cy = null);\n\t        }\n\t        sx = toFloat(sx[0]);\n\t        (sy == null) && (sy = sx);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t        }\n\t        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n\t        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n\n\t        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n\t        this._.dirtyT = 1;\n\t        return this;\n\t    };\n\t    elproto.hide = function () {\n\t        !this.removed && (this.node.style.display = \"none\");\n\t        return this;\n\t    };\n\t    elproto.show = function () {\n\t        !this.removed && (this.node.style.display = E);\n\t        return this;\n\t    };\n\t    // Needed to fix the vml setViewBox issues\n\t    elproto.auxGetBBox = R.el.getBBox;\n\t    elproto.getBBox = function(){\n\t      var b = this.auxGetBBox();\n\t      if (this.paper && this.paper._viewBoxShift)\n\t      {\n\t        var c = {};\n\t        var z = 1/this.paper._viewBoxShift.scale;\n\t        c.x = b.x - this.paper._viewBoxShift.dx;\n\t        c.x *= z;\n\t        c.y = b.y - this.paper._viewBoxShift.dy;\n\t        c.y *= z;\n\t        c.width  = b.width  * z;\n\t        c.height = b.height * z;\n\t        c.x2 = c.x + c.width;\n\t        c.y2 = c.y + c.height;\n\t        return c;\n\t      }\n\t      return b;\n\t    };\n\t    elproto._getBBox = function () {\n\t        if (this.removed) {\n\t            return {};\n\t        }\n\t        return {\n\t            x: this.X + (this.bbx || 0) - this.W / 2,\n\t            y: this.Y - this.H,\n\t            width: this.W,\n\t            height: this.H\n\t        };\n\t    };\n\t    elproto.remove = function () {\n\t        if (this.removed || !this.node.parentNode) {\n\t            return;\n\t        }\n\t        this.paper.__set__ && this.paper.__set__.exclude(this);\n\t        R.eve.unbind(\"raphael.*.*.\" + this.id);\n\t        R._tear(this, this.paper);\n\t        this.node.parentNode.removeChild(this.node);\n\t        this.shape && this.shape.parentNode.removeChild(this.shape);\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t        this.removed = true;\n\t    };\n\t    elproto.attr = function (name, value) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (name == null) {\n\t            var res = {};\n\t            for (var a in this.attrs) if (this.attrs[has](a)) {\n\t                res[a] = this.attrs[a];\n\t            }\n\t            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n\t            res.transform = this._.transform;\n\t            return res;\n\t        }\n\t        if (value == null && R.is(name, \"string\")) {\n\t            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\n\t                return this.attrs.gradient;\n\t            }\n\t            var names = name.split(separator),\n\t                out = {};\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                name = names[i];\n\t                if (name in this.attrs) {\n\t                    out[name] = this.attrs[name];\n\t                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n\t                    out[name] = this.paper.customAttributes[name].def;\n\t                } else {\n\t                    out[name] = R._availableAttrs[name];\n\t                }\n\t            }\n\t            return ii - 1 ? out : out[names[0]];\n\t        }\n\t        if (this.attrs && value == null && R.is(name, \"array\")) {\n\t            out = {};\n\t            for (i = 0, ii = name.length; i < ii; i++) {\n\t                out[name[i]] = this.attr(name[i]);\n\t            }\n\t            return out;\n\t        }\n\t        var params;\n\t        if (value != null) {\n\t            params = {};\n\t            params[name] = value;\n\t        }\n\t        value == null && R.is(name, \"object\") && (params = name);\n\t        for (var key in params) {\n\t            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n\t        }\n\t        if (params) {\n\t            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n\t                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n\t                this.attrs[key] = params[key];\n\t                for (var subkey in par) if (par[has](subkey)) {\n\t                    params[subkey] = par[subkey];\n\t                }\n\t            }\n\t            // this.paper.canvas.style.display = \"none\";\n\t            if (params.text && this.type == \"text\") {\n\t                this.textpath.string = params.text;\n\t            }\n\t            setFillAndStroke(this, params);\n\t            // this.paper.canvas.style.display = E;\n\t        }\n\t        return this;\n\t    };\n\t    elproto.toFront = function () {\n\t        !this.removed && this.node.parentNode.appendChild(this.node);\n\t        this.paper && this.paper.top != this && R._tofront(this, this.paper);\n\t        return this;\n\t    };\n\t    elproto.toBack = function () {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (this.node.parentNode.firstChild != this.node) {\n\t            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\n\t            R._toback(this, this.paper);\n\t        }\n\t        return this;\n\t    };\n\t    elproto.insertAfter = function (element) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (element.constructor == R.st.constructor) {\n\t            element = element[element.length - 1];\n\t        }\n\t        if (element.node.nextSibling) {\n\t            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\n\t        } else {\n\t            element.node.parentNode.appendChild(this.node);\n\t        }\n\t        R._insertafter(this, element, this.paper);\n\t        return this;\n\t    };\n\t    elproto.insertBefore = function (element) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (element.constructor == R.st.constructor) {\n\t            element = element[0];\n\t        }\n\t        element.node.parentNode.insertBefore(this.node, element.node);\n\t        R._insertbefore(this, element, this.paper);\n\t        return this;\n\t    };\n\t    elproto.blur = function (size) {\n\t        var s = this.node.runtimeStyle,\n\t            f = s.filter;\n\t        f = f.replace(blurregexp, E);\n\t        if (+size !== 0) {\n\t            this.attrs.blur = size;\n\t            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\n\t            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\n\t        } else {\n\t            s.filter = f;\n\t            s.margin = 0;\n\t            delete this.attrs.blur;\n\t        }\n\t        return this;\n\t    };\n\n\t    R._engine.path = function (pathString, vml) {\n\t        var el = createNode(\"shape\");\n\t        el.style.cssText = cssDot;\n\t        el.coordsize = zoom + S + zoom;\n\t        el.coordorigin = vml.coordorigin;\n\t        var p = new Element(el, vml),\n\t            attr = {fill: \"none\", stroke: \"#000\"};\n\t        pathString && (attr.path = pathString);\n\t        p.type = \"path\";\n\t        p.path = [];\n\t        p.Path = E;\n\t        setFillAndStroke(p, attr);\n\t        vml.canvas && vml.canvas.appendChild(el);\n\t        var skew = createNode(\"skew\");\n\t        skew.on = true;\n\t        el.appendChild(skew);\n\t        p.skew = skew;\n\t        p.transform(E);\n\t        return p;\n\t    };\n\t    R._engine.rect = function (vml, x, y, w, h, r) {\n\t        var path = R._rectPath(x, y, w, h, r),\n\t            res = vml.path(path),\n\t            a = res.attrs;\n\t        res.X = a.x = x;\n\t        res.Y = a.y = y;\n\t        res.W = a.width = w;\n\t        res.H = a.height = h;\n\t        a.r = r;\n\t        a.path = path;\n\t        res.type = \"rect\";\n\t        return res;\n\t    };\n\t    R._engine.ellipse = function (vml, x, y, rx, ry) {\n\t        var res = vml.path(),\n\t            a = res.attrs;\n\t        res.X = x - rx;\n\t        res.Y = y - ry;\n\t        res.W = rx * 2;\n\t        res.H = ry * 2;\n\t        res.type = \"ellipse\";\n\t        setFillAndStroke(res, {\n\t            cx: x,\n\t            cy: y,\n\t            rx: rx,\n\t            ry: ry\n\t        });\n\t        return res;\n\t    };\n\t    R._engine.circle = function (vml, x, y, r) {\n\t        var res = vml.path(),\n\t            a = res.attrs;\n\t        res.X = x - r;\n\t        res.Y = y - r;\n\t        res.W = res.H = r * 2;\n\t        res.type = \"circle\";\n\t        setFillAndStroke(res, {\n\t            cx: x,\n\t            cy: y,\n\t            r: r\n\t        });\n\t        return res;\n\t    };\n\t    R._engine.image = function (vml, src, x, y, w, h) {\n\t        var path = R._rectPath(x, y, w, h),\n\t            res = vml.path(path).attr({stroke: \"none\"}),\n\t            a = res.attrs,\n\t            node = res.node,\n\t            fill = node.getElementsByTagName(fillString)[0];\n\t        a.src = src;\n\t        res.X = a.x = x;\n\t        res.Y = a.y = y;\n\t        res.W = a.width = w;\n\t        res.H = a.height = h;\n\t        a.path = path;\n\t        res.type = \"image\";\n\t        fill.parentNode == node && node.removeChild(fill);\n\t        fill.rotate = true;\n\t        fill.src = src;\n\t        fill.type = \"tile\";\n\t        res._.fillpos = [x, y];\n\t        res._.fillsize = [w, h];\n\t        node.appendChild(fill);\n\t        setCoords(res, 1, 1, 0, 0, 0);\n\t        return res;\n\t    };\n\t    R._engine.text = function (vml, x, y, text) {\n\t        var el = createNode(\"shape\"),\n\t            path = createNode(\"path\"),\n\t            o = createNode(\"textpath\");\n\t        x = x || 0;\n\t        y = y || 0;\n\t        text = text || \"\";\n\t        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\n\t        path.textpathok = true;\n\t        o.string = Str(text);\n\t        o.on = true;\n\t        el.style.cssText = cssDot;\n\t        el.coordsize = zoom + S + zoom;\n\t        el.coordorigin = \"0 0\";\n\t        var p = new Element(el, vml),\n\t            attr = {\n\t                fill: \"#000\",\n\t                stroke: \"none\",\n\t                font: R._availableAttrs.font,\n\t                text: text\n\t            };\n\t        p.shape = el;\n\t        p.path = path;\n\t        p.textpath = o;\n\t        p.type = \"text\";\n\t        p.attrs.text = Str(text);\n\t        p.attrs.x = x;\n\t        p.attrs.y = y;\n\t        p.attrs.w = 1;\n\t        p.attrs.h = 1;\n\t        setFillAndStroke(p, attr);\n\t        el.appendChild(o);\n\t        el.appendChild(path);\n\t        vml.canvas.appendChild(el);\n\t        var skew = createNode(\"skew\");\n\t        skew.on = true;\n\t        el.appendChild(skew);\n\t        p.skew = skew;\n\t        p.transform(E);\n\t        return p;\n\t    };\n\t    R._engine.setSize = function (width, height) {\n\t        var cs = this.canvas.style;\n\t        this.width = width;\n\t        this.height = height;\n\t        width == +width && (width += \"px\");\n\t        height == +height && (height += \"px\");\n\t        cs.width = width;\n\t        cs.height = height;\n\t        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\n\t        if (this._viewBox) {\n\t            R._engine.setViewBox.apply(this, this._viewBox);\n\t        }\n\t        return this;\n\t    };\n\t    R._engine.setViewBox = function (x, y, w, h, fit) {\n\t        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n\t        var paperSize = this.getSize(),\n\t            width = paperSize.width,\n\t            height = paperSize.height,\n\t            H, W;\n\t        if (fit) {\n\t            H = height / h;\n\t            W = width / w;\n\t            if (w * H < width) {\n\t                x -= (width - w * H) / 2 / H;\n\t            }\n\t            if (h * W < height) {\n\t                y -= (height - h * W) / 2 / W;\n\t            }\n\t        }\n\t        this._viewBox = [x, y, w, h, !!fit];\n\t        this._viewBoxShift = {\n\t            dx: -x,\n\t            dy: -y,\n\t            scale: paperSize\n\t        };\n\t        this.forEach(function (el) {\n\t            el.transform(\"...\");\n\t        });\n\t        return this;\n\t    };\n\t    var createNode;\n\t    R._engine.initWin = function (win) {\n\t            var doc = win.document;\n\t            if (doc.styleSheets.length < 31) {\n\t                doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\n\t            } else {\n\t                // no more room, add to the existing one\n\t                // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n\t                doc.styleSheets[0].addRule(\".rvml\", \"behavior:url(#default#VML)\");\n\t            }\n\t            try {\n\t                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\n\t                createNode = function (tagName) {\n\t                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\n\t                };\n\t            } catch (e) {\n\t                createNode = function (tagName) {\n\t                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n\t                };\n\t            }\n\t        };\n\t    R._engine.initWin(R._g.win);\n\t    R._engine.create = function () {\n\t        var con = R._getContainer.apply(0, arguments),\n\t            container = con.container,\n\t            height = con.height,\n\t            s,\n\t            width = con.width,\n\t            x = con.x,\n\t            y = con.y;\n\t        if (!container) {\n\t            throw new Error(\"VML container not found.\");\n\t        }\n\t        var res = new R._Paper,\n\t            c = res.canvas = R._g.doc.createElement(\"div\"),\n\t            cs = c.style;\n\t        x = x || 0;\n\t        y = y || 0;\n\t        width = width || 512;\n\t        height = height || 342;\n\t        res.width = width;\n\t        res.height = height;\n\t        width == +width && (width += \"px\");\n\t        height == +height && (height += \"px\");\n\t        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\n\t        res.coordorigin = \"0 0\";\n\t        res.span = R._g.doc.createElement(\"span\");\n\t        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\n\t        c.appendChild(res.span);\n\t        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\n\t        if (container == 1) {\n\t            R._g.doc.body.appendChild(c);\n\t            cs.left = x + \"px\";\n\t            cs.top = y + \"px\";\n\t            cs.position = \"absolute\";\n\t        } else {\n\t            if (container.firstChild) {\n\t                container.insertBefore(c, container.firstChild);\n\t            } else {\n\t                container.appendChild(c);\n\t            }\n\t        }\n\t        res.renderfix = function () {};\n\t        return res;\n\t    };\n\t    R.prototype.clear = function () {\n\t        R.eve(\"raphael.clear\", this);\n\t        this.canvas.innerHTML = E;\n\t        this.span = R._g.doc.createElement(\"span\");\n\t        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\n\t        this.canvas.appendChild(this.span);\n\t        this.bottom = this.top = null;\n\t    };\n\t    R.prototype.remove = function () {\n\t        R.eve(\"raphael.remove\", this);\n\t        this.canvas.parentNode.removeChild(this.canvas);\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t        return true;\n\t    };\n\n\t    var setproto = R.st;\n\t    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n\t        setproto[method] = (function (methodname) {\n\t            return function () {\n\t                var arg = arguments;\n\t                return this.forEach(function (el) {\n\t                    el[methodname].apply(el, arg);\n\t                });\n\t            };\n\t        })(method);\n\t    }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ])\n});\n;\n\n/***/ }),\n\n/***/ 562:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"wrapper wrapper-content\"\n  }, [_vm._m(0), _vm._v(\" \"), _vm._m(1), _vm._v(\" \"), _c('div', {\n    staticClass: \"wrapper wrapper-content\"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-8\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('h5', [_vm._v(\"Close Trade\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-tools\"\n  }, [_c('a', {\n    staticClass: \"collapse-link\",\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.collapse($event)\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-chevron-up\"\n  })])])]), _vm._v(\" \"), _vm._m(2)])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-4\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('h5', [_vm._v(\"Rank Statistics\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-tools\"\n  }, [_c('a', {\n    staticClass: \"collapse-link\",\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.collapse($event)\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-chevron-up\"\n  })])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content p-xs\"\n  }, [_c('donut-chart', {\n    attrs: {\n      \"id\": \"donut\",\n      \"data\": _vm.donutData,\n      \"colors\": \"[\\\"#ff6384\\\",\\\"#36a2eb\\\",\\\"#ffce56\\\",\\\"#000\\\"]\"\n    }\n  })], 1)])])])]), _vm._v(\" \"), _vm._m(3)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-3 col-sm-6\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('span', {\n    staticClass: \"label label-success pull-right\"\n  }, [_vm._v(\"Today\")]), _vm._v(\" \"), _c('h5', [_vm._v(\"Account\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('h1', {\n    staticClass: \"no-margins\"\n  }, [_vm._v(\"130\")]), _vm._v(\" \"), _c('small', [_vm._v(\"No.of Client\")])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-3 col-sm-6\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('span', {\n    staticClass: \"label label-info pull-right\"\n  }, [_vm._v(\"This Month\")]), _vm._v(\" \"), _c('h5', [_vm._v(\"Account\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('h1', {\n    staticClass: \"no-margins\"\n  }, [_vm._v(\"19,821\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"stat-percent font-bold text-navy\"\n  }, [_vm._v(\"120% \"), _c('i', {\n    staticClass: \"fa fa-level-up\"\n  })]), _vm._v(\" \"), _c('small', [_vm._v(\"No.of Client\")])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-3 col-sm-6\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('span', {\n    staticClass: \"label label-success pull-right\"\n  }, [_vm._v(\"Today\")]), _vm._v(\" \"), _c('h5', [_vm._v(\"Commission\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('h1', {\n    staticClass: \"no-margins\"\n  }, [_vm._v(\"6,247.80\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"stat-percent font-bold text-navy\"\n  }, [_vm._v(\"144% \"), _c('i', {\n    staticClass: \"fa fa-level-up\"\n  })]), _vm._v(\" \"), _c('small', [_vm._v(\"Commission Paid\")])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-3 col-sm-6\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('span', {\n    staticClass: \"label label-info pull-right\"\n  }, [_vm._v(\"This Month\")]), _vm._v(\" \"), _c('h5', [_vm._v(\"Commission\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('h1', {\n    staticClass: \"no-margins\"\n  }, [_vm._v(\"54,057.52\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"stat-percent font-bold text-danger\"\n  }, [_vm._v(\"98% \"), _c('i', {\n    staticClass: \"fa fa-level-down\"\n  })]), _vm._v(\" \"), _c('small', [_vm._v(\"Commission Paid\")])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-6 col-md-6\"\n  }, [_c('div', {\n    staticClass: \"widget style1\"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-xs-2 text-center\"\n  }, [_c('i', {\n    staticClass: \"fa fa-trophy fa-5x\"\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-xs-5 text-right\"\n  }, [_c('span', [_vm._v(\" Today Deposit \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"font-bold\"\n  }, [_vm._v(\"$ 3,300.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-xs-5 text-right\"\n  }, [_c('span', [_vm._v(\" This Month Deposit \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"font-bold\"\n  }, [_vm._v(\"$ 84,232.00\")])])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-6 col-md-6\"\n  }, [_c('div', {\n    staticClass: \"widget style1\"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-xs-2 text-center\"\n  }, [_c('i', {\n    staticClass: \"fa fa-briefcase fa-5x\"\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-xs-5 text-right\"\n  }, [_c('span', [_vm._v(\" Today Withdrawal \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"font-bold\"\n  }, [_vm._v(\"$ 1,232.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-xs-5 text-right\"\n  }, [_c('span', [_vm._v(\" This Month Withdrawal \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"font-bold\"\n  }, [_vm._v(\"$ 4,232.50\")])])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('div', {\n    staticClass: \"tabs-container\"\n  }, [_c('ul', {\n    staticClass: \"nav nav-tabs\",\n    attrs: {\n      \"role\": \"tablist\"\n    }\n  }, [_c('li', {\n    staticClass: \"active\",\n    attrs: {\n      \"role\": \"presentation\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#fx-today\",\n      \"data-toggle\": \"tab\",\n      \"aria-controls\": \"fx-today\"\n    }\n  }, [_vm._v(\"FX\"), _c('small', {\n    staticClass: \"label-white-outline m-l-xs\"\n  }, [_vm._v(\"Today\")])])]), _vm._v(\" \"), _c('li', {\n    attrs: {\n      \"role\": \"presentation\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#fx-monthly\",\n      \"data-toggle\": \"tab\",\n      \"aria-controls\": \"sfx-monthly\"\n    }\n  }, [_vm._v(\"FX\"), _c('small', {\n    staticClass: \"label-white-outline m-l-xs\"\n  }, [_vm._v(\"This Month\")])])]), _vm._v(\" \"), _c('li', {\n    attrs: {\n      \"role\": \"presentation\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#bo-today\",\n      \"data-toggle\": \"tab\",\n      \"aria-controls\": \"bo-today\"\n    }\n  }, [_vm._v(\"BO\"), _c('small', {\n    staticClass: \"label-white-outline m-l-xs\"\n  }, [_vm._v(\"Today\")])])]), _vm._v(\" \"), _c('li', {\n    attrs: {\n      \"role\": \"presentation\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#bo-monthly\",\n      \"data-toggle\": \"tab\",\n      \"aria-controls\": \"bo-monthly\"\n    }\n  }, [_vm._v(\"BO\"), _c('small', {\n    staticClass: \"label-white-outline m-l-xs\"\n  }, [_vm._v(\"This Month\")])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tab-content\"\n  }, [_c('div', {\n    staticClass: \"tab-pane active\",\n    attrs: {\n      \"id\": \"fx-today\"\n    }\n  }, [_c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"row text-center\"\n  }, [_c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"USDCAD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURGBP\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"XAGUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"XAUUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"WTICrude\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"BrentCrude\")]), _c('h4', [_vm._v(\"14,560.00\")])])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tab-pane\",\n    attrs: {\n      \"id\": \"fx-monthly\"\n    }\n  }, [_c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"row text-center\"\n  }, [_c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"USDCAD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURGBP\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"XAGUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"XAUUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"WTICrude\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"BrentCrude\")]), _c('h4', [_vm._v(\"214,560.00\")])])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tab-pane\",\n    attrs: {\n      \"id\": \"bo-today\"\n    }\n  }, [_c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"row text-center\"\n  }, [_c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"USDCAD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURGBP\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tab-pane\",\n    attrs: {\n      \"id\": \"bo-monthly\"\n    }\n  }, [_c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"row text-center\"\n  }, [_c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"USDCAD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURGBP\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])])])])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"footer\"\n  }, [_c('div', [_c('strong', [_vm._v(\"Copyright\")]), _vm._v(\" GQ capital © 2017\\n\\t\\t\")])])\n}]}\n\n/***/ }),\n\n/***/ 633:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(jQuery) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return function(t){function e(r){if(i[r])return i[r].exports;var o=i[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,r){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,\"a\",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=13)}([function(t,e,i){\"use strict\";var r={toObject:function(t){return\"string\"==typeof t?JSON.parse(t):t},toBoolean:function(t){return\"string\"==typeof t?\"true\"===t:t},toInt:function(t){return\"string\"==typeof t?parseInt(t):t}};t.exports=r},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var r=i(0),o=function(t){return t&&t.__esModule?t:{default:t}}(r),n={id:{type:String,required:!0},data:{type:[String,Array],required:!0},barColors:{type:[String,Array],required:!1},xkey:{type:String,required:!1,default:\"key\"},ykeys:{type:[String,Array],required:!1,default:function(){return[\"value\"]}},labels:{type:[String,Array],required:!1,default:function(){return[\"Value\"]}},hoverCallback:{type:Function,required:!1},axes:{type:[Boolean,String],required:!1,default:!0},hideHover:{type:String,required:!1},stacked:{type:[Boolean,String],required:!1},resize:{type:[Boolean,String],required:!1},grid:{type:[Boolean,String],required:!1,default:!0},gridTextColor:{type:String,required:!1,default:\"#888\"},gridTextSize:{type:[Number,String],required:!1,default:12},gridTextFamily:{type:String,required:!1,default:\"sans-serif\"},gridTextWeight:{type:String,required:!1,default:\"normal\"},colors:{type:[String,Array],required:!1},formatter:{type:Function,required:!1},lineColors:{type:[String,Array],required:!1},xLabels:{type:String,required:!1},lineWidth:{type:[Number,String],required:!1},pointSize:{type:[Number,String],required:!1},pointFillColors:{type:[String,Array],required:!1},pointStrokeColors:{type:[String,Array],required:!1},ymax:{type:String,required:!1},ymin:{type:String,required:!1},smooth:{type:[Boolean,String],required:!1,default:!0},parseTime:{type:[Boolean,String],required:!1,default:!0},postUnits:{type:String,required:!1},preUnits:{type:String,required:!1},dateFormat:{type:Function,required:!1},xLabelFormat:{type:Function,required:!1},yLabelFormat:{type:Function,required:!1},xLabelAngle:{type:String,required:!1},goals:{type:[String,Array],required:!1},goalStrokeWidth:{type:[Number,String],required:!1},goalLineColors:{type:[String,Array],required:!1},events:{type:[String,Array],required:!1},eventStrokeWidth:{type:String,required:!1},eventLineColors:{type:[String,Array],required:!1},fillOpacity:{type:String,required:!1},behaveLikeLine:{type:[Boolean,String],required:!1,default:!1}},s={id:n.id,data:n.data,barColors:n.barColors,xkey:n.xkey,ykeys:n.ykeys,labels:n.labels,hoverCallback:n.hoverCallback,grid:n.grid,axes:n.axes,hideHover:n.hideHover,stacked:n.stacked,resize:n.resize,gridTextColor:n.gridTextColor,gridTextSize:n.gridTextSize,gridTextFamily:n.gridTextFamily,gridTextWeight:n.gridTextWeight},a={id:n.id,data:n.data,colors:n.colors,formatter:n.formatter,resize:n.resize},h={id:n.id,data:n.data,resize:n.resize,lineColors:n.lineColors,xkey:n.xkey,ykeys:n.ykeys,labels:n.labels,xLabels:n.xLabels,grid:n.grid,gridTextColor:n.gridTextColor,gridTextSize:n.gridTextSize,gridTextFamily:n.gridTextFamily,gridTextWeight:n.gridTextWeight,lineWidth:n.lineWidth,pointSize:n.pointSize,pointFillColors:n.pointFillColors,pointStrokeColors:n.pointStrokeColors,ymax:n.ymax,ymin:n.ymin,smooth:n.smooth,hideHover:n.hideHover,parseTime:n.parseTime,postUnits:n.postUnits,preUnits:n.preUnits,dateFormat:n.dateFormat,xLabelFormat:n.xLabelFormat,yLabelFormat:n.yLabelFormat,xLabelAngle:n.xLabelAngle,goals:n.goals,goalStrokeWidth:n.goalStrokeWidth,goalLineColors:n.goalLineColors,events:n.events,eventStrokeWidth:n.eventStrokeWidth,eventLineColors:n.eventLineColors,fillOpacity:n.fillOpacity,hoverCallback:n.hoverCallback},l={behaveLikeLine:n.behaveLikeLine};for(var u in h)h.hasOwnProperty(u)&&(l[u]=h[u]);var p={addOption:function(t,e){this[t]&&(e[t]=this[t])},addOptionAsObject:function(t,e){this[t]&&(e[t]=o.default.toObject(this[t]))}};e.default={bar:{props:s,methods:p},donut:{props:a,methods:p},line:{props:h,methods:p},area:{props:l,methods:p}}},function(t,e){/* @license\nmorris.js v0.5.0\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n(function(){var t,e,i,r,o=[].slice,n=function(t,e){return function(){return t.apply(e,arguments)}},s={}.hasOwnProperty,a=function(t,e){function i(){this.constructor=t}for(var r in e)s.call(e,r)&&(t[r]=e[r]);return i.prototype=e.prototype,t.prototype=new i,t.__super__=e.prototype,t},h=[].indexOf||function(t){for(var e=0,i=this.length;e<i;e++)if(e in this&&this[e]===t)return e;return-1};e=window.Morris={},t=jQuery,e.EventEmitter=function(){function t(){}return t.prototype.on=function(t,e){return null==this.handlers&&(this.handlers={}),null==this.handlers[t]&&(this.handlers[t]=[]),this.handlers[t].push(e),this},t.prototype.fire=function(){var t,e,i,r,n,s,a;if(i=arguments[0],t=2<=arguments.length?o.call(arguments,1):[],null!=this.handlers&&null!=this.handlers[i]){for(s=this.handlers[i],a=[],r=0,n=s.length;r<n;r++)e=s[r],a.push(e.apply(null,t));return a}},t}(),e.commas=function(t){var e,i,r,o;return null!=t?(r=t<0?\"-\":\"\",e=Math.abs(t),i=Math.floor(e).toFixed(0),r+=i.replace(/(?=(?:\\d{3})+$)(?!^)/g,\",\"),o=e.toString(),o.length>i.length&&(r+=o.slice(i.length)),r):\"-\"},e.pad2=function(t){return(t<10?\"0\":\"\")+t},e.Grid=function(i){function r(e){this.resizeHandler=n(this.resizeHandler,this);var i=this;if(\"string\"==typeof e.element?this.el=t(document.getElementById(e.element)):this.el=t(e.element),null==this.el||0===this.el.length)throw new Error(\"Graph container element not found\");\"static\"===this.el.css(\"position\")&&this.el.css(\"position\",\"relative\"),this.options=t.extend({},this.gridDefaults,this.defaults||{},e),\"string\"==typeof this.options.units&&(this.options.postUnits=e.units),this.raphael=new Raphael(this.el[0]),this.elementWidth=null,this.elementHeight=null,this.dirty=!1,this.selectFrom=null,this.init&&this.init(),this.setData(this.options.data),this.el.bind(\"mousemove\",function(t){var e,r,o,n,s;return r=i.el.offset(),s=t.pageX-r.left,i.selectFrom?(e=i.data[i.hitTest(Math.min(s,i.selectFrom))]._x,o=i.data[i.hitTest(Math.max(s,i.selectFrom))]._x,n=o-e,i.selectionRect.attr({x:e,width:n})):i.fire(\"hovermove\",s,t.pageY-r.top)}),this.el.bind(\"mouseleave\",function(t){return i.selectFrom&&(i.selectionRect.hide(),i.selectFrom=null),i.fire(\"hoverout\")}),this.el.bind(\"touchstart touchmove touchend\",function(t){var e,r;return r=t.originalEvent.touches[0]||t.originalEvent.changedTouches[0],e=i.el.offset(),i.fire(\"hovermove\",r.pageX-e.left,r.pageY-e.top)}),this.el.bind(\"click\",function(t){var e;return e=i.el.offset(),i.fire(\"gridclick\",t.pageX-e.left,t.pageY-e.top)}),this.options.rangeSelect&&(this.selectionRect=this.raphael.rect(0,0,0,this.el.innerHeight()).attr({fill:this.options.rangeSelectColor,stroke:!1}).toBack().hide(),this.el.bind(\"mousedown\",function(t){var e;return e=i.el.offset(),i.startRange(t.pageX-e.left)}),this.el.bind(\"mouseup\",function(t){var e;return e=i.el.offset(),i.endRange(t.pageX-e.left),i.fire(\"hovermove\",t.pageX-e.left,t.pageY-e.top)})),this.options.resize&&t(window).bind(\"resize\",function(t){return null!=i.timeoutId&&window.clearTimeout(i.timeoutId),i.timeoutId=window.setTimeout(i.resizeHandler,100)}),this.el.css(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\"),this.postInit&&this.postInit()}return a(r,i),r.prototype.gridDefaults={dateFormat:null,axes:!0,grid:!0,gridLineColor:\"#aaa\",gridStrokeWidth:.5,gridTextColor:\"#888\",gridTextSize:12,gridTextFamily:\"sans-serif\",gridTextWeight:\"normal\",hideHover:!1,yLabelFormat:null,xLabelAngle:0,numLines:5,padding:25,parseTime:!0,postUnits:\"\",preUnits:\"\",ymax:\"auto\",ymin:\"auto 0\",goals:[],goalStrokeWidth:1,goalLineColors:[\"#666633\",\"#999966\",\"#cc6666\",\"#663333\"],events:[],eventStrokeWidth:1,eventLineColors:[\"#005a04\",\"#ccffbb\",\"#3a5f0b\",\"#005502\"],rangeSelect:null,rangeSelectColor:\"#eef\",resize:!1},r.prototype.setData=function(t,i){var r,o,n,s,a,h,l,u,p,d,c,f,g,y,m;return null==i&&(i=!0),this.options.data=t,null==t||0===t.length?(this.data=[],this.raphael.clear(),void(null!=this.hover&&this.hover.hide())):(f=this.cumulative?0:null,g=this.cumulative?0:null,this.options.goals.length>0&&(a=Math.min.apply(Math,this.options.goals),s=Math.max.apply(Math,this.options.goals),g=null!=g?Math.min(g,a):a,f=null!=f?Math.max(f,s):s),this.data=function(){var i,r,s;for(s=[],n=i=0,r=t.length;i<r;n=++i)l=t[n],h={src:l},h.label=l[this.options.xkey],this.options.parseTime?(h.x=e.parseDate(h.label),this.options.dateFormat?h.label=this.options.dateFormat(h.x):\"number\"==typeof h.label&&(h.label=new Date(h.label).toString())):(h.x=n,this.options.xLabelFormat&&(h.label=this.options.xLabelFormat(h))),p=0,h.y=function(){var t,e,i,r;for(i=this.options.ykeys,r=[],o=t=0,e=i.length;t<e;o=++t)c=i[o],y=l[c],\"string\"==typeof y&&(y=parseFloat(y)),null!=y&&\"number\"!=typeof y&&(y=null),null!=y&&(this.cumulative?p+=y:null!=f?(f=Math.max(y,f),g=Math.min(y,g)):f=g=y),this.cumulative&&null!=p&&(f=Math.max(p,f),g=Math.min(p,g)),r.push(y);return r}.call(this),s.push(h);return s}.call(this),this.options.parseTime&&(this.data=this.data.sort(function(t,e){return(t.x>e.x)-(e.x>t.x)})),this.xmin=this.data[0].x,this.xmax=this.data[this.data.length-1].x,this.events=[],this.options.events.length>0&&(this.options.parseTime?this.events=function(){var t,i,o,n;for(o=this.options.events,n=[],t=0,i=o.length;t<i;t++)r=o[t],n.push(e.parseDate(r));return n}.call(this):this.events=this.options.events,this.xmax=Math.max(this.xmax,Math.max.apply(Math,this.events)),this.xmin=Math.min(this.xmin,Math.min.apply(Math,this.events))),this.xmin===this.xmax&&(this.xmin-=1,this.xmax+=1),this.ymin=this.yboundary(\"min\",g),this.ymax=this.yboundary(\"max\",f),this.ymin===this.ymax&&(g&&(this.ymin-=1),this.ymax+=1),!0!==(m=this.options.axes)&&\"both\"!==m&&\"y\"!==m&&!0!==this.options.grid||(this.options.ymax===this.gridDefaults.ymax&&this.options.ymin===this.gridDefaults.ymin?(this.grid=this.autoGridLines(this.ymin,this.ymax,this.options.numLines),this.ymin=Math.min(this.ymin,this.grid[0]),this.ymax=Math.max(this.ymax,this.grid[this.grid.length-1])):(u=(this.ymax-this.ymin)/(this.options.numLines-1),this.grid=function(){var t,e,i;for(i=[],d=t=this.ymin,e=this.ymax;u>0?t<=e:t>=e;d=t+=u)i.push(d);return i}.call(this))),this.dirty=!0,i?this.redraw():void 0)},r.prototype.yboundary=function(t,e){var i,r;return i=this.options[\"y\"+t],\"string\"==typeof i?\"auto\"===i.slice(0,4)?i.length>5?(r=parseInt(i.slice(5),10),null==e?r:Math[t](e,r)):null!=e?e:0:parseInt(i,10):i},r.prototype.autoGridLines=function(t,e,i){var r,o,n,s,a,h,l,u,p;return a=e-t,p=Math.floor(Math.log(a)/Math.log(10)),l=Math.pow(10,p),o=Math.floor(t/l)*l,r=Math.ceil(e/l)*l,h=(r-o)/(i-1),1===l&&h>1&&Math.ceil(h)!==h&&(h=Math.ceil(h),r=o+h*(i-1)),o<0&&r>0&&(o=Math.floor(t/h)*h,r=Math.ceil(e/h)*h),h<1?(s=Math.floor(Math.log(h)/Math.log(10)),n=function(){var t,e;for(e=[],u=t=o;h>0?t<=r:t>=r;u=t+=h)e.push(parseFloat(u.toFixed(1-s)));return e}()):n=function(){var t,e;for(e=[],u=t=o;h>0?t<=r:t>=r;u=t+=h)e.push(u);return e}(),n},r.prototype._calc=function(){var t,e,i,r,o,n,s,a;if(o=this.el.width(),i=this.el.height(),(this.elementWidth!==o||this.elementHeight!==i||this.dirty)&&(this.elementWidth=o,this.elementHeight=i,this.dirty=!1,this.left=this.options.padding,this.right=this.elementWidth-this.options.padding,this.top=this.options.padding,this.bottom=this.elementHeight-this.options.padding,!0!==(s=this.options.axes)&&\"both\"!==s&&\"y\"!==s||(n=function(){var t,i,r,o;for(r=this.grid,o=[],t=0,i=r.length;t<i;t++)e=r[t],o.push(this.measureText(this.yAxisFormat(e)).width);return o}.call(this),this.left+=Math.max.apply(Math,n)),!0!==(a=this.options.axes)&&\"both\"!==a&&\"x\"!==a||(t=function(){var t,e,i;for(i=[],r=t=0,e=this.data.length;0<=e?t<e:t>e;r=0<=e?++t:--t)i.push(this.measureText(this.data[r].text,-this.options.xLabelAngle).height);return i}.call(this),this.bottom-=Math.max.apply(Math,t)),this.width=Math.max(1,this.right-this.left),this.height=Math.max(1,this.bottom-this.top),this.dx=this.width/(this.xmax-this.xmin),this.dy=this.height/(this.ymax-this.ymin),this.calc))return this.calc()},r.prototype.transY=function(t){return this.bottom-(t-this.ymin)*this.dy},r.prototype.transX=function(t){return 1===this.data.length?(this.left+this.right)/2:this.left+(t-this.xmin)*this.dx},r.prototype.redraw=function(){if(this.raphael.clear(),this._calc(),this.drawGrid(),this.drawGoals(),this.drawEvents(),this.draw)return this.draw()},r.prototype.measureText=function(t,e){var i,r;return null==e&&(e=0),r=this.raphael.text(100,100,t).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).rotate(e),i=r.getBBox(),r.remove(),i},r.prototype.yAxisFormat=function(t){return this.yLabelFormat(t)},r.prototype.yLabelFormat=function(t){return\"function\"==typeof this.options.yLabelFormat?this.options.yLabelFormat(t):\"\"+this.options.preUnits+e.commas(t)+this.options.postUnits},r.prototype.drawGrid=function(){var t,e,i,r,o,n,s,a;if(!1!==this.options.grid||!0===(o=this.options.axes)||\"both\"===o||\"y\"===o){for(n=this.grid,a=[],i=0,r=n.length;i<r;i++)t=n[i],e=this.transY(t),!0!==(s=this.options.axes)&&\"both\"!==s&&\"y\"!==s||this.drawYAxisLabel(this.left-this.options.padding/2,e,this.yAxisFormat(t)),this.options.grid?a.push(this.drawGridLine(\"M\"+this.left+\",\"+e+\"H\"+(this.left+this.width))):a.push(void 0);return a}},r.prototype.drawGoals=function(){var t,e,i,r,o,n,s;for(n=this.options.goals,s=[],i=r=0,o=n.length;r<o;i=++r)e=n[i],t=this.options.goalLineColors[i%this.options.goalLineColors.length],s.push(this.drawGoal(e,t));return s},r.prototype.drawEvents=function(){var t,e,i,r,o,n,s;for(n=this.events,s=[],i=r=0,o=n.length;r<o;i=++r)e=n[i],t=this.options.eventLineColors[i%this.options.eventLineColors.length],s.push(this.drawEvent(e,t));return s},r.prototype.drawGoal=function(t,e){return this.raphael.path(\"M\"+this.left+\",\"+this.transY(t)+\"H\"+this.right).attr(\"stroke\",e).attr(\"stroke-width\",this.options.goalStrokeWidth)},r.prototype.drawEvent=function(t,e){return this.raphael.path(\"M\"+this.transX(t)+\",\"+this.bottom+\"V\"+this.top).attr(\"stroke\",e).attr(\"stroke-width\",this.options.eventStrokeWidth)},r.prototype.drawYAxisLabel=function(t,e,i){return this.raphael.text(t,e,i).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor).attr(\"text-anchor\",\"end\")},r.prototype.drawGridLine=function(t){return this.raphael.path(t).attr(\"stroke\",this.options.gridLineColor).attr(\"stroke-width\",this.options.gridStrokeWidth)},r.prototype.startRange=function(t){return this.hover.hide(),this.selectFrom=t,this.selectionRect.attr({x:t,width:0}).show()},r.prototype.endRange=function(t){var e,i;if(this.selectFrom)return i=Math.min(this.selectFrom,t),e=Math.max(this.selectFrom,t),this.options.rangeSelect.call(this.el,{start:this.data[this.hitTest(i)].x,end:this.data[this.hitTest(e)].x}),this.selectFrom=null},r.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},r}(e.EventEmitter),e.parseDate=function(t){var e,i,r,o,n,s,a,h,l,u,p;return\"number\"==typeof t?t:(i=t.match(/^(\\d+) Q(\\d)$/),o=t.match(/^(\\d+)-(\\d+)$/),n=t.match(/^(\\d+)-(\\d+)-(\\d+)$/),a=t.match(/^(\\d+) W(\\d+)$/),h=t.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),l=t.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),i?new Date(parseInt(i[1],10),3*parseInt(i[2],10)-1,1).getTime():o?new Date(parseInt(o[1],10),parseInt(o[2],10)-1,1).getTime():n?new Date(parseInt(n[1],10),parseInt(n[2],10)-1,parseInt(n[3],10)).getTime():a?(u=new Date(parseInt(a[1],10),0,1),4!==u.getDay()&&u.setMonth(0,1+(4-u.getDay()+7)%7),u.getTime()+6048e5*parseInt(a[2],10)):h?h[6]?(s=0,\"Z\"!==h[6]&&(s=60*parseInt(h[8],10)+parseInt(h[9],10),\"+\"===h[7]&&(s=0-s)),Date.UTC(parseInt(h[1],10),parseInt(h[2],10)-1,parseInt(h[3],10),parseInt(h[4],10),parseInt(h[5],10)+s)):new Date(parseInt(h[1],10),parseInt(h[2],10)-1,parseInt(h[3],10),parseInt(h[4],10),parseInt(h[5],10)).getTime():l?(p=parseFloat(l[6]),e=Math.floor(p),r=Math.round(1e3*(p-e)),l[8]?(s=0,\"Z\"!==l[8]&&(s=60*parseInt(l[10],10)+parseInt(l[11],10),\"+\"===l[9]&&(s=0-s)),Date.UTC(parseInt(l[1],10),parseInt(l[2],10)-1,parseInt(l[3],10),parseInt(l[4],10),parseInt(l[5],10)+s,e,r)):new Date(parseInt(l[1],10),parseInt(l[2],10)-1,parseInt(l[3],10),parseInt(l[4],10),parseInt(l[5],10),e,r).getTime()):new Date(parseInt(t,10),0,1).getTime())},e.Hover=function(){function i(i){null==i&&(i={}),this.options=t.extend({},e.Hover.defaults,i),this.el=t(\"<div class='\"+this.options.class+\"'></div>\"),this.el.hide(),this.options.parent.append(this.el)}return i.defaults={class:\"morris-hover morris-default-style\"},i.prototype.update=function(t,e,i){return t?(this.html(t),this.show(),this.moveTo(e,i)):this.hide()},i.prototype.html=function(t){return this.el.html(t)},i.prototype.moveTo=function(t,e){var i,r,o,n,s,a;return s=this.options.parent.innerWidth(),n=this.options.parent.innerHeight(),r=this.el.outerWidth(),i=this.el.outerHeight(),o=Math.min(Math.max(0,t-r/2),s-r),null!=e?(a=e-i-10)<0&&(a=e+10)+i>n&&(a=n/2-i/2):a=n/2-i/2,this.el.css({left:o+\"px\",top:parseInt(a)+\"px\"})},i.prototype.show=function(){return this.el.show()},i.prototype.hide=function(){return this.el.hide()},i}(),e.Line=function(t){function i(t){if(this.hilight=n(this.hilight,this),this.onHoverOut=n(this.onHoverOut,this),this.onHoverMove=n(this.onHoverMove,this),this.onGridClick=n(this.onGridClick,this),!(this instanceof e.Line))return new e.Line(t);i.__super__.constructor.call(this,t)}return a(i,t),i.prototype.init=function(){if(\"always\"!==this.options.hideHover)return this.hover=new e.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)},i.prototype.defaults={lineWidth:3,pointSize:4,lineColors:[\"#0b62a4\",\"#7A92A3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],pointStrokeWidths:[1],pointStrokeColors:[\"#ffffff\"],pointFillColors:[],smooth:!0,xLabels:\"auto\",xLabelFormat:null,xLabelMargin:24,hideHover:!1},i.prototype.calc=function(){return this.calcPoints(),this.generatePaths()},i.prototype.calcPoints=function(){var t,e,i,r,o,n;for(o=this.data,n=[],i=0,r=o.length;i<r;i++)t=o[i],t._x=this.transX(t.x),t._y=function(){var i,r,o,n;for(o=t.y,n=[],i=0,r=o.length;i<r;i++)e=o[i],null!=e?n.push(this.transY(e)):n.push(e);return n}.call(this),n.push(t._ymax=Math.min.apply(Math,[this.bottom].concat(function(){var i,r,o,n;for(o=t._y,n=[],i=0,r=o.length;i<r;i++)null!=(e=o[i])&&n.push(e);return n}())));return n},i.prototype.hitTest=function(t){var e,i,r,o,n;if(0===this.data.length)return null;for(n=this.data.slice(1),e=r=0,o=n.length;r<o&&(i=n[e],!(t<(i._x+this.data[e]._x)/2));e=++r);return e},i.prototype.onGridClick=function(t,e){var i;return i=this.hitTest(t),this.fire(\"click\",i,this.data[i].src,t,e)},i.prototype.onHoverMove=function(t,e){var i;return i=this.hitTest(t),this.displayHoverForRow(i)},i.prototype.onHoverOut=function(){if(!1!==this.options.hideHover)return this.displayHoverForRow(null)},i.prototype.displayHoverForRow=function(t){var e;return null!=t?((e=this.hover).update.apply(e,this.hoverContentForRow(t)),this.hilight(t)):(this.hover.hide(),this.hilight())},i.prototype.hoverContentForRow=function(t){var e,i,r,o,n,s,a;for(r=this.data[t],e=\"<div class='morris-hover-row-label'>\"+r.label+\"</div>\",a=r.y,i=n=0,s=a.length;n<s;i=++n)o=a[i],e+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(r,i,\"label\")+\"'>\\n  \"+this.options.labels[i]+\":\\n  \"+this.yLabelFormat(o)+\"\\n</div>\";return\"function\"==typeof this.options.hoverCallback&&(e=this.options.hoverCallback(t,this.options,e,r.src)),[e,r._x,r._ymax]},i.prototype.generatePaths=function(){var t,i,r,o;return this.paths=function(){var n,s,a,l;for(l=[],i=n=0,s=this.options.ykeys.length;0<=s?n<s:n>s;i=0<=s?++n:--n)o=\"boolean\"==typeof this.options.smooth?this.options.smooth:(a=this.options.ykeys[i],h.call(this.options.smooth,a)>=0),t=function(){var t,e,o,n;for(o=this.data,n=[],t=0,e=o.length;t<e;t++)r=o[t],void 0!==r._y[i]&&n.push({x:r._x,y:r._y[i]});return n}.call(this),t.length>1?l.push(e.Line.createPath(t,o,this.bottom)):l.push(null);return l}.call(this)},i.prototype.draw=function(){var t;if(!0!==(t=this.options.axes)&&\"both\"!==t&&\"x\"!==t||this.drawXAxis(),this.drawSeries(),!1===this.options.hideHover)return this.displayHoverForRow(this.data.length-1)},i.prototype.drawXAxis=function(){var t,i,r,o,n,s,a,h,l,u,p=this;for(a=this.bottom+this.options.padding/2,n=null,o=null,t=function(t,e){var i,r,s,h,l;return i=p.drawXAxisLabel(p.transX(e),a,t),l=i.getBBox(),i.transform(\"r\"+-p.options.xLabelAngle),r=i.getBBox(),i.transform(\"t0,\"+r.height/2+\"...\"),0!==p.options.xLabelAngle&&(h=-.5*l.width*Math.cos(p.options.xLabelAngle*Math.PI/180),i.transform(\"t\"+h+\",0...\")),r=i.getBBox(),(null==n||n>=r.x+r.width||null!=o&&o>=r.x)&&r.x>=0&&r.x+r.width<p.el.width()?(0!==p.options.xLabelAngle&&(s=1.25*p.options.gridTextSize/Math.sin(p.options.xLabelAngle*Math.PI/180),o=r.x-s),n=r.x-p.options.xLabelMargin):i.remove()},r=this.options.parseTime?1===this.data.length&&\"auto\"===this.options.xLabels?[[this.data[0].label,this.data[0].x]]:e.labelSeries(this.xmin,this.xmax,this.width,this.options.xLabels,this.options.xLabelFormat):function(){var t,e,i,r;for(i=this.data,r=[],t=0,e=i.length;t<e;t++)s=i[t],r.push([s.label,s.x]);return r}.call(this),r.reverse(),u=[],h=0,l=r.length;h<l;h++)i=r[h],u.push(t(i[0],i[1]));return u},i.prototype.drawSeries=function(){var t,e,i,r,o,n;for(this.seriesPoints=[],t=e=r=this.options.ykeys.length-1;r<=0?e<=0:e>=0;t=r<=0?++e:--e)this._drawLineFor(t);for(n=[],t=i=o=this.options.ykeys.length-1;o<=0?i<=0:i>=0;t=o<=0?++i:--i)n.push(this._drawPointFor(t));return n},i.prototype._drawPointFor=function(t){var e,i,r,o,n,s;for(this.seriesPoints[t]=[],n=this.data,s=[],r=0,o=n.length;r<o;r++)i=n[r],e=null,null!=i._y[t]&&(e=this.drawLinePoint(i._x,i._y[t],this.colorFor(i,t,\"point\"),t)),s.push(this.seriesPoints[t].push(e));return s},i.prototype._drawLineFor=function(t){var e;if(null!==(e=this.paths[t]))return this.drawLinePath(e,this.colorFor(null,t,\"line\"),t)},i.createPath=function(t,i,r){var o,n,s,a,h,l,u,p,d,c,f,g,y,m;for(u=\"\",i&&(s=e.Line.gradients(t)),p={y:null},a=y=0,m=t.length;y<m;a=++y)o=t[a],null!=o.y&&(null!=p.y?i?(n=s[a],l=s[a-1],h=(o.x-p.x)/4,d=p.x+h,f=Math.min(r,p.y+h*l),c=o.x-h,g=Math.min(r,o.y-h*n),u+=\"C\"+d+\",\"+f+\",\"+c+\",\"+g+\",\"+o.x+\",\"+o.y):u+=\"L\"+o.x+\",\"+o.y:i&&null==s[a]||(u+=\"M\"+o.x+\",\"+o.y)),p=o;return u},i.gradients=function(t){var e,i,r,o,n,s,a,h;for(i=function(t,e){return(t.y-e.y)/(t.x-e.x)},h=[],r=s=0,a=t.length;s<a;r=++s)e=t[r],null!=e.y?(o=t[r+1]||{y:null},n=t[r-1]||{y:null},null!=n.y&&null!=o.y?h.push(i(n,o)):null!=n.y?h.push(i(n,e)):null!=o.y?h.push(i(e,o)):h.push(null)):h.push(null);return h},i.prototype.hilight=function(t){var e,i,r,o,n;if(null!==this.prevHilight&&this.prevHilight!==t)for(e=i=0,o=this.seriesPoints.length-1;0<=o?i<=o:i>=o;e=0<=o?++i:--i)this.seriesPoints[e][this.prevHilight]&&this.seriesPoints[e][this.prevHilight].animate(this.pointShrinkSeries(e));if(null!==t&&this.prevHilight!==t)for(e=r=0,n=this.seriesPoints.length-1;0<=n?r<=n:r>=n;e=0<=n?++r:--r)this.seriesPoints[e][t]&&this.seriesPoints[e][t].animate(this.pointGrowSeries(e));return this.prevHilight=t},i.prototype.colorFor=function(t,e,i){return\"function\"==typeof this.options.lineColors?this.options.lineColors.call(this,t,e,i):\"point\"===i?this.options.pointFillColors[e%this.options.pointFillColors.length]||this.options.lineColors[e%this.options.lineColors.length]:this.options.lineColors[e%this.options.lineColors.length]},i.prototype.drawXAxisLabel=function(t,e,i){return this.raphael.text(t,e,i).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},i.prototype.drawLinePath=function(t,e,i){return this.raphael.path(t).attr(\"stroke\",e).attr(\"stroke-width\",this.lineWidthForSeries(i))},i.prototype.drawLinePoint=function(t,e,i,r){return this.raphael.circle(t,e,this.pointSizeForSeries(r)).attr(\"fill\",i).attr(\"stroke-width\",this.pointStrokeWidthForSeries(r)).attr(\"stroke\",this.pointStrokeColorForSeries(r))},i.prototype.pointStrokeWidthForSeries=function(t){return this.options.pointStrokeWidths[t%this.options.pointStrokeWidths.length]},i.prototype.pointStrokeColorForSeries=function(t){return this.options.pointStrokeColors[t%this.options.pointStrokeColors.length]},i.prototype.lineWidthForSeries=function(t){return this.options.lineWidth instanceof Array?this.options.lineWidth[t%this.options.lineWidth.length]:this.options.lineWidth},i.prototype.pointSizeForSeries=function(t){return this.options.pointSize instanceof Array?this.options.pointSize[t%this.options.pointSize.length]:this.options.pointSize},i.prototype.pointGrowSeries=function(t){return Raphael.animation({r:this.pointSizeForSeries(t)+3},25,\"linear\")},i.prototype.pointShrinkSeries=function(t){return Raphael.animation({r:this.pointSizeForSeries(t)},25,\"linear\")},i}(e.Grid),e.labelSeries=function(i,r,o,n,s){var a,h,l,u,p,d,c,f,g,y,m;if(l=200*(r-i)/o,h=new Date(i),void 0===(c=e.LABEL_SPECS[n]))for(m=e.AUTO_LABEL_ORDER,g=0,y=m.length;g<y;g++)if(u=m[g],d=e.LABEL_SPECS[u],l>=d.span){c=d;break}for(void 0===c&&(c=e.LABEL_SPECS.second),s&&(c=t.extend({},c,{fmt:s})),a=c.start(h),p=[];(f=a.getTime())<=r;)f>=i&&p.push([c.fmt(a),f]),c.incr(a);return p},i=function(t){return{span:60*t*1e3,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours())},fmt:function(t){return e.pad2(t.getHours())+\":\"+e.pad2(t.getMinutes())},incr:function(e){return e.setUTCMinutes(e.getUTCMinutes()+t)}}},r=function(t){return{span:1e3*t,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes())},fmt:function(t){return e.pad2(t.getHours())+\":\"+e.pad2(t.getMinutes())+\":\"+e.pad2(t.getSeconds())},incr:function(e){return e.setUTCSeconds(e.getUTCSeconds()+t)}}},e.LABEL_SPECS={decade:{span:1728e8,start:function(t){return new Date(t.getFullYear()-t.getFullYear()%10,0,1)},fmt:function(t){return\"\"+t.getFullYear()},incr:function(t){return t.setFullYear(t.getFullYear()+10)}},year:{span:1728e7,start:function(t){return new Date(t.getFullYear(),0,1)},fmt:function(t){return\"\"+t.getFullYear()},incr:function(t){return t.setFullYear(t.getFullYear()+1)}},month:{span:24192e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),1)},fmt:function(t){return t.getFullYear()+\"-\"+e.pad2(t.getMonth()+1)},incr:function(t){return t.setMonth(t.getMonth()+1)}},week:{span:6048e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())},fmt:function(t){return t.getFullYear()+\"-\"+e.pad2(t.getMonth()+1)+\"-\"+e.pad2(t.getDate())},incr:function(t){return t.setDate(t.getDate()+7)}},day:{span:864e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())},fmt:function(t){return t.getFullYear()+\"-\"+e.pad2(t.getMonth()+1)+\"-\"+e.pad2(t.getDate())},incr:function(t){return t.setDate(t.getDate()+1)}},hour:i(60),\"30min\":i(30),\"15min\":i(15),\"10min\":i(10),\"5min\":i(5),minute:i(1),\"30sec\":r(30),\"15sec\":r(15),\"10sec\":r(10),\"5sec\":r(5),second:r(1)},e.AUTO_LABEL_ORDER=[\"decade\",\"year\",\"month\",\"week\",\"day\",\"hour\",\"30min\",\"15min\",\"10min\",\"5min\",\"minute\",\"30sec\",\"15sec\",\"10sec\",\"5sec\",\"second\"],e.Area=function(i){function r(i){var n;if(!(this instanceof e.Area))return new e.Area(i);n=t.extend({},o,i),this.cumulative=!n.behaveLikeLine,\"auto\"===n.fillOpacity&&(n.fillOpacity=n.behaveLikeLine?.8:1),r.__super__.constructor.call(this,n)}var o;return a(r,i),o={fillOpacity:\"auto\",behaveLikeLine:!1},r.prototype.calcPoints=function(){var t,e,i,r,o,n,s;for(n=this.data,s=[],r=0,o=n.length;r<o;r++)t=n[r],t._x=this.transX(t.x),e=0,t._y=function(){var r,o,n,s;for(n=t.y,s=[],r=0,o=n.length;r<o;r++)i=n[r],this.options.behaveLikeLine?s.push(this.transY(i)):(e+=i||0,s.push(this.transY(e)));return s}.call(this),s.push(t._ymax=Math.max.apply(Math,t._y));return s},r.prototype.drawSeries=function(){var t,e,i,r,o,n,s,a;for(this.seriesPoints=[],e=this.options.behaveLikeLine?function(){n=[];for(var t=0,e=this.options.ykeys.length-1;0<=e?t<=e:t>=e;0<=e?t++:t--)n.push(t);return n}.apply(this):function(){s=[];for(var t=o=this.options.ykeys.length-1;o<=0?t<=0:t>=0;o<=0?t++:t--)s.push(t);return s}.apply(this),a=[],i=0,r=e.length;i<r;i++)t=e[i],this._drawFillFor(t),this._drawLineFor(t),a.push(this._drawPointFor(t));return a},r.prototype._drawFillFor=function(t){var e;if(null!==(e=this.paths[t]))return e=e+\"L\"+this.transX(this.xmax)+\",\"+this.bottom+\"L\"+this.transX(this.xmin)+\",\"+this.bottom+\"Z\",this.drawFilledPath(e,this.fillForSeries(t))},r.prototype.fillForSeries=function(t){var e;return e=Raphael.rgb2hsl(this.colorFor(this.data[t],t,\"line\")),Raphael.hsl(e.h,this.options.behaveLikeLine?.9*e.s:.75*e.s,Math.min(.98,this.options.behaveLikeLine?1.2*e.l:1.25*e.l))},r.prototype.drawFilledPath=function(t,e){return this.raphael.path(t).attr(\"fill\",e).attr(\"fill-opacity\",this.options.fillOpacity).attr(\"stroke\",\"none\")},r}(e.Line),e.Bar=function(i){function r(i){if(this.onHoverOut=n(this.onHoverOut,this),this.onHoverMove=n(this.onHoverMove,this),this.onGridClick=n(this.onGridClick,this),!(this instanceof e.Bar))return new e.Bar(i);r.__super__.constructor.call(this,t.extend({},i,{parseTime:!1}))}return a(r,i),r.prototype.init=function(){if(this.cumulative=this.options.stacked,\"always\"!==this.options.hideHover)return this.hover=new e.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)},r.prototype.defaults={barSizeRatio:.75,barGap:3,barColors:[\"#0b62a4\",\"#7a92a3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],barOpacity:1,barRadius:[0,0,0,0],xLabelMargin:50},r.prototype.calc=function(){var t;if(this.calcBars(),!1===this.options.hideHover)return(t=this.hover).update.apply(t,this.hoverContentForRow(this.data.length-1))},r.prototype.calcBars=function(){var t,e,i,r,o,n,s;for(n=this.data,s=[],t=r=0,o=n.length;r<o;t=++r)e=n[t],e._x=this.left+this.width*(t+.5)/this.data.length,s.push(e._y=function(){var t,r,o,n;for(o=e.y,n=[],t=0,r=o.length;t<r;t++)i=o[t],null!=i?n.push(this.transY(i)):n.push(null);return n}.call(this));return s},r.prototype.draw=function(){var t;return!0!==(t=this.options.axes)&&\"both\"!==t&&\"x\"!==t||this.drawXAxis(),this.drawSeries()},r.prototype.drawXAxis=function(){var t,e,i,r,o,n,s,a,h,l,u,p,d;for(l=this.bottom+(this.options.xAxisLabelTopPadding||this.options.padding/2),s=null,n=null,d=[],t=u=0,p=this.data.length;0<=p?u<p:u>p;t=0<=p?++u:--u)a=this.data[this.data.length-1-t],e=this.drawXAxisLabel(a._x,l,a.label),h=e.getBBox(),e.transform(\"r\"+-this.options.xLabelAngle),i=e.getBBox(),e.transform(\"t0,\"+i.height/2+\"...\"),0!==this.options.xLabelAngle&&(o=-.5*h.width*Math.cos(this.options.xLabelAngle*Math.PI/180),e.transform(\"t\"+o+\",0...\")),(null==s||s>=i.x+i.width||null!=n&&n>=i.x)&&i.x>=0&&i.x+i.width<this.el.width()?(0!==this.options.xLabelAngle&&(r=1.25*this.options.gridTextSize/Math.sin(this.options.xLabelAngle*Math.PI/180),n=i.x-r),d.push(s=i.x-this.options.xLabelMargin)):d.push(e.remove());return d},r.prototype.drawSeries=function(){var t,e,i,r,o,n,s,a,h,l,u,p,d,c,f;return i=this.width/this.options.data.length,a=this.options.stacked?1:this.options.ykeys.length,t=(i*this.options.barSizeRatio-this.options.barGap*(a-1))/a,this.options.barSize&&(t=Math.min(t,this.options.barSize)),p=i-t*a-this.options.barGap*(a-1),s=p/2,f=this.ymin<=0&&this.ymax>=0?this.transY(0):null,this.bars=function(){var a,p,g,y;for(g=this.data,y=[],r=a=0,p=g.length;a<p;r=++a)h=g[r],o=0,y.push(function(){var a,p,g,y;for(g=h._y,y=[],l=a=0,p=g.length;a<p;l=++a)c=g[l],null!==c?(f?(d=Math.min(c,f),e=Math.max(c,f)):(d=c,e=this.bottom),n=this.left+r*i+s,this.options.stacked||(n+=l*(t+this.options.barGap)),u=e-d,this.options.verticalGridCondition&&this.options.verticalGridCondition(h.x)&&this.drawBar(this.left+r*i,this.top,i,Math.abs(this.top-this.bottom),this.options.verticalGridColor,this.options.verticalGridOpacity,this.options.barRadius),this.options.stacked&&(d-=o),this.drawBar(n,d,t,u,this.colorFor(h,l,\"bar\"),this.options.barOpacity,this.options.barRadius),y.push(o+=u)):y.push(null);return y}.call(this));return y}.call(this)},r.prototype.colorFor=function(t,e,i){var r,o;return\"function\"==typeof this.options.barColors?(r={x:t.x,y:t.y[e],label:t.label},o={index:e,key:this.options.ykeys[e],label:this.options.labels[e]},this.options.barColors.call(this,r,o,i)):this.options.barColors[e%this.options.barColors.length]},r.prototype.hitTest=function(t){return 0===this.data.length?null:(t=Math.max(Math.min(t,this.right),this.left),Math.min(this.data.length-1,Math.floor((t-this.left)/(this.width/this.data.length))))},r.prototype.onGridClick=function(t,e){var i;return i=this.hitTest(t),this.fire(\"click\",i,this.data[i].src,t,e)},r.prototype.onHoverMove=function(t,e){var i,r;return i=this.hitTest(t),(r=this.hover).update.apply(r,this.hoverContentForRow(i))},r.prototype.onHoverOut=function(){if(!1!==this.options.hideHover)return this.hover.hide()},r.prototype.hoverContentForRow=function(t){var e,i,r,o,n,s,a,h;for(r=this.data[t],e=\"<div class='morris-hover-row-label'>\"+r.label+\"</div>\",h=r.y,i=s=0,a=h.length;s<a;i=++s)n=h[i],e+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(r,i,\"label\")+\"'>\\n  \"+this.options.labels[i]+\":\\n  \"+this.yLabelFormat(n)+\"\\n</div>\";return\"function\"==typeof this.options.hoverCallback&&(e=this.options.hoverCallback(t,this.options,e,r.src)),o=this.left+(t+.5)*this.width/this.data.length,[e,o]},r.prototype.drawXAxisLabel=function(t,e,i){return this.raphael.text(t,e,i).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},r.prototype.drawBar=function(t,e,i,r,o,n,s){var a,h;return a=Math.max.apply(Math,s),h=0===a||a>r?this.raphael.rect(t,e,i,r):this.raphael.path(this.roundedRect(t,e,i,r,s)),h.attr(\"fill\",o).attr(\"fill-opacity\",n).attr(\"stroke\",\"none\")},r.prototype.roundedRect=function(t,e,i,r,o){return null==o&&(o=[0,0,0,0]),[\"M\",t,o[0]+e,\"Q\",t,e,t+o[0],e,\"L\",t+i-o[1],e,\"Q\",t+i,e,t+i,e+o[1],\"L\",t+i,e+r-o[2],\"Q\",t+i,e+r,t+i-o[2],e+r,\"L\",t+o[3],e+r,\"Q\",t,e+r,t,e+r-o[3],\"Z\"]},r}(e.Grid),e.Donut=function(i){function r(i){this.resizeHandler=n(this.resizeHandler,this),this.select=n(this.select,this),this.click=n(this.click,this);var r=this;if(!(this instanceof e.Donut))return new e.Donut(i);if(this.options=t.extend({},this.defaults,i),\"string\"==typeof i.element?this.el=t(document.getElementById(i.element)):this.el=t(i.element),null===this.el||0===this.el.length)throw new Error(\"Graph placeholder not found.\");void 0!==i.data&&0!==i.data.length&&(this.raphael=new Raphael(this.el[0]),this.options.resize&&t(window).bind(\"resize\",function(t){return null!=r.timeoutId&&window.clearTimeout(r.timeoutId),r.timeoutId=window.setTimeout(r.resizeHandler,100)}),this.setData(i.data))}return a(r,i),r.prototype.defaults={colors:[\"#0B62A4\",\"#3980B5\",\"#679DC6\",\"#95BBD7\",\"#B0CCE1\",\"#095791\",\"#095085\",\"#083E67\",\"#052C48\",\"#042135\"],backgroundColor:\"#FFFFFF\",labelColor:\"#000000\",formatter:e.commas,resize:!1},r.prototype.redraw=function(){var t,i,r,o,n,s,a,h,l,u,p,d,c,f,g,y,m,v,x,b,w,S,k;for(this.raphael.clear(),i=this.el.width()/2,r=this.el.height()/2,c=(Math.min(i,r)-10)/3,p=0,b=this.values,f=0,m=b.length;f<m;f++)d=b[f],p+=d;for(h=5/(2*c),t=1.9999*Math.PI-h*this.data.length,s=0,n=0,this.segments=[],w=this.values,o=g=0,v=w.length;g<v;o=++g)d=w[o],l=s+h+t*(d/p),u=new e.DonutSegment(i,r,2*c,c,s,l,this.data[o].color||this.options.colors[n%this.options.colors.length],this.options.backgroundColor,n,this.raphael),u.render(),this.segments.push(u),u.on(\"hover\",this.select),u.on(\"click\",this.click),s=l,n+=1;for(this.text1=this.drawEmptyDonutLabel(i,r-10,this.options.labelColor,15,800),this.text2=this.drawEmptyDonutLabel(i,r+10,this.options.labelColor,14),a=Math.max.apply(Math,this.values),n=0,S=this.values,k=[],y=0,x=S.length;y<x;y++){if((d=S[y])===a){this.select(n);break}k.push(n+=1)}return k},r.prototype.setData=function(t){var e;return this.data=t,this.values=function(){var t,i,r,o;for(r=this.data,o=[],t=0,i=r.length;t<i;t++)e=r[t],o.push(parseFloat(e.value));return o}.call(this),this.redraw()},r.prototype.click=function(t){return this.fire(\"click\",t,this.data[t])},r.prototype.select=function(t){var e,i,r,o,n,s;for(s=this.segments,o=0,n=s.length;o<n;o++)i=s[o],i.deselect();return r=this.segments[t],r.select(),e=this.data[t],this.setLabels(e.label,this.options.formatter(e.value,e))},r.prototype.setLabels=function(t,e){var i,r,o,n,s,a,h,l;return i=2*(Math.min(this.el.width()/2,this.el.height()/2)-10)/3,n=1.8*i,o=i/2,r=i/3,this.text1.attr({text:t,transform:\"\"}),s=this.text1.getBBox(),a=Math.min(n/s.width,o/s.height),this.text1.attr({transform:\"S\"+a+\",\"+a+\",\"+(s.x+s.width/2)+\",\"+(s.y+s.height)}),this.text2.attr({text:e,transform:\"\"}),h=this.text2.getBBox(),l=Math.min(n/h.width,r/h.height),this.text2.attr({transform:\"S\"+l+\",\"+l+\",\"+(h.x+h.width/2)+\",\"+h.y})},r.prototype.drawEmptyDonutLabel=function(t,e,i,r,o){var n;return n=this.raphael.text(t,e,\"\").attr(\"font-size\",r).attr(\"fill\",i),null!=o&&n.attr(\"font-weight\",o),n},r.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},r}(e.EventEmitter),e.DonutSegment=function(t){function e(t,e,i,r,o,s,a,h,l,u){this.cx=t,this.cy=e,this.inner=i,this.outer=r,this.color=a,this.backgroundColor=h,this.index=l,this.raphael=u,this.deselect=n(this.deselect,this),this.select=n(this.select,this),this.sin_p0=Math.sin(o),this.cos_p0=Math.cos(o),this.sin_p1=Math.sin(s),this.cos_p1=Math.cos(s),this.is_long=s-o>Math.PI?1:0,this.path=this.calcSegment(this.inner+3,this.inner+this.outer-5),this.selectedPath=this.calcSegment(this.inner+3,this.inner+this.outer),this.hilight=this.calcArc(this.inner)}return a(e,t),e.prototype.calcArcPoints=function(t){return[this.cx+t*this.sin_p0,this.cy+t*this.cos_p0,this.cx+t*this.sin_p1,this.cy+t*this.cos_p1]},e.prototype.calcSegment=function(t,e){var i,r,o,n,s,a,h,l,u,p;return u=this.calcArcPoints(t),i=u[0],o=u[1],r=u[2],n=u[3],p=this.calcArcPoints(e),s=p[0],h=p[1],a=p[2],l=p[3],\"M\"+i+\",\"+o+\"A\"+t+\",\"+t+\",0,\"+this.is_long+\",0,\"+r+\",\"+n+\"L\"+a+\",\"+l+\"A\"+e+\",\"+e+\",0,\"+this.is_long+\",1,\"+s+\",\"+h+\"Z\"},e.prototype.calcArc=function(t){var e,i,r,o,n;return n=this.calcArcPoints(t),e=n[0],r=n[1],i=n[2],o=n[3],\"M\"+e+\",\"+r+\"A\"+t+\",\"+t+\",0,\"+this.is_long+\",0,\"+i+\",\"+o},e.prototype.render=function(){var t=this;return this.arc=this.drawDonutArc(this.hilight,this.color),this.seg=this.drawDonutSegment(this.path,this.color,this.backgroundColor,function(){return t.fire(\"hover\",t.index)},function(){return t.fire(\"click\",t.index)})},e.prototype.drawDonutArc=function(t,e){return this.raphael.path(t).attr({stroke:e,\"stroke-width\":2,opacity:0})},e.prototype.drawDonutSegment=function(t,e,i,r,o){return this.raphael.path(t).attr({fill:e,stroke:i,\"stroke-width\":3}).hover(r).click(o)},e.prototype.select=function(){if(!this.selected)return this.seg.animate({path:this.selectedPath},150,\"<>\"),this.arc.animate({opacity:1},150,\"<>\"),this.selected=!0},e.prototype.deselect=function(){if(this.selected)return this.seg.animate({path:this.path},150,\"<>\"),this.arc.animate({opacity:0},150,\"<>\"),this.selected=!1},e}(e.EventEmitter)}).call(this)},function(t,e){t.exports=function(t,e,i,r){var o,n=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(o=t,n=t.default);var a=\"function\"==typeof n?n.options:n;if(e&&(a.render=e.render,a.staticRenderFns=e.staticRenderFns),i&&(a._scopeId=i),r){var h=a.computed||(a.computed={});Object.keys(r).forEach(function(t){var e=r[t];h[t]=function(){return e}})}return{esModule:o,exports:n,options:a}}},function(t,e,i){var r=i(14);\"string\"==typeof r&&(r=[[t.i,r,\"\"]]);i(20)(r,{});r.locals&&(t.exports=r.locals)},function(t,e,i){var r=i(3)(i(9),i(16),null,null);t.exports=r.exports},function(t,e,i){var r=i(3)(i(10),i(18),null,null);t.exports=r.exports},function(t,e,i){var r=i(3)(i(11),i(19),null,null);t.exports=r.exports},function(t,e,i){var r=i(3)(i(12),i(17),null,null);t.exports=r.exports},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0}),i(2),i(4);var o=i(0),n=r(o),s=i(1),a=r(s);e.default={name:\"area-chart\",mixins:[a.default.area],data:function(){return{chart:null}},watch:{data:function(t){var e=this;this.$nextTick(function(){e.chart.setData(n.default.toObject(e.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize),labels:n.default.toObject(this.labels),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize,ymax:this.ymax,ymin:this.ymin,smooth:n.default.toBoolean(this.smooth),hideHover:this.hideHover,parseTime:n.default.toBoolean(this.parseTime),postUnits:this.postUnits,preUnits:this.preUnits,xLabelAngle:this.xLabelAngle,goalStrokeWidth:this.goalStrokeWidth,eventStrokeWidth:this.eventStrokeWidth,fillOpacity:this.fillOpacity,behaveLikeLine:this.behaveLikeLine};this.addOptionAsObject(\"lineColors\",t),this.addOption(\"xLabels\",t),this.addOptionAsObject(\"pointFillColors\",t),this.addOptionAsObject(\"pointStrokeColors\",t),this.addOption(\"dateFormat\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOptionAsObject(\"goals\",t),this.addOptionAsObject(\"goalLineColors\",t),this.addOptionAsObject(\"events\",t),this.addOptionAsObject(\"eventLineColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Area(t)}}},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0}),i(2),i(4);var o=i(0),n=r(o),s=i(1),a=r(s);e.default={name:\"bar-chart\",mixins:[a.default.bar],data:function(){return{chart:null}},watch:{data:function(t){var e=this;this.$nextTick(function(){e.chart.setData(e.data)})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),labels:n.default.toObject(this.labels),resize:n.default.toBoolean(this.resize),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),axes:n.default.toBoolean(this.axes),hideHover:this.hideHover,stacked:n.default.toBoolean(this.stacked),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize};this.addOptionAsObject(\"barColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Bar(t)}}},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0}),i(2),i(4);var o=i(0),n=r(o),s=i(1),a=r(s);e.default={name:\"donut-chart\",mixins:[a.default.donut],data:function(){return{chart:null}},watch:{data:function(t){var e=this;this.$nextTick(function(){e.chart.setData(n.default.toObject(e.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize)};this.addOptionAsObject(\"colors\",t),this.addOption(\"formatter\",t),this.chart=Morris.Donut(t)}}},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0}),i(2),i(4);var o=i(0),n=r(o),s=i(1),a=r(s);e.default={name:\"line-chart\",mixins:[a.default.line],data:function(){return{chart:null}},watch:{data:function(t){var e=this;this.$nextTick(function(){e.chart.setData(n.default.toObject(e.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize),labels:n.default.toObject(this.labels),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize,ymax:this.ymax,ymin:this.ymin,smooth:n.default.toBoolean(this.smooth),hideHover:this.hideHover,parseTime:n.default.toBoolean(this.parseTime),postUnits:this.postUnits,preUnits:this.preUnits,xLabelAngle:this.xLabelAngle,goalStrokeWidth:this.goalStrokeWidth,eventStrokeWidth:this.eventStrokeWidth,fillOpacity:this.fillOpacity};this.addOptionAsObject(\"lineColors\",t),this.addOption(\"xLabels\",t),this.addOptionAsObject(\"pointFillColors\",t),this.addOptionAsObject(\"pointStrokeColors\",t),this.addOption(\"dateFormat\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOptionAsObject(\"goals\",t),this.addOptionAsObject(\"goalLineColors\",t),this.addOptionAsObject(\"events\",t),this.addOptionAsObject(\"eventLineColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Line(t)}}},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}var o=i(7),n=r(o),s=i(6),a=r(s),h=i(8),l=r(h),u=i(5),p=r(u),d={DonutChart:n.default,BarChart:a.default,LineChart:l.default,AreaChart:p.default};t.exports=d},function(t,e,i){e=t.exports=i(15)(),e.push([t.i,\".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}\",\"\"])},function(t,e){t.exports=function(){var t=[];return t.toString=function(){for(var t=[],e=0;e<this.length;e++){var i=this[e];i[2]?t.push(\"@media \"+i[2]+\"{\"+i[1]+\"}\"):t.push(i[1])}return t.join(\"\")},t.i=function(e,i){\"string\"==typeof e&&(e=[[null,e,\"\"]]);for(var r={},o=0;o<this.length;o++){var n=this[o][0];\"number\"==typeof n&&(r[n]=!0)}for(o=0;o<e.length;o++){var s=e[o];\"number\"==typeof s[0]&&r[s[0]]||(i&&!s[2]?s[2]=i:i&&(s[2]=\"(\"+s[2]+\") and (\"+i+\")\"),t.push(s))}},t}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,e){function i(t,e){for(var i=0;i<t.length;i++){var r=t[i],o=u[r.id];if(o){o.refs++;for(var n=0;n<o.parts.length;n++)o.parts[n](r.parts[n]);for(;n<r.parts.length;n++)o.parts.push(a(r.parts[n],e))}else{for(var s=[],n=0;n<r.parts.length;n++)s.push(a(r.parts[n],e));u[r.id]={id:r.id,refs:1,parts:s}}}}function r(t){for(var e=[],i={},r=0;r<t.length;r++){var o=t[r],n=o[0],s=o[1],a=o[2],h=o[3],l={css:s,media:a,sourceMap:h};i[n]?i[n].parts.push(l):e.push(i[n]={id:n,parts:[l]})}return e}function o(t,e){var i=c(),r=y[y.length-1];if(\"top\"===t.insertAt)r?r.nextSibling?i.insertBefore(e,r.nextSibling):i.appendChild(e):i.insertBefore(e,i.firstChild),y.push(e);else{if(\"bottom\"!==t.insertAt)throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");i.appendChild(e)}}function n(t){t.parentNode.removeChild(t);var e=y.indexOf(t);e>=0&&y.splice(e,1)}function s(t){var e=document.createElement(\"style\");return e.type=\"text/css\",o(t,e),e}function a(t,e){var i,r,o;if(e.singleton){var a=g++;i=f||(f=s(e)),r=h.bind(null,i,a,!1),o=h.bind(null,i,a,!0)}else i=s(e),r=l.bind(null,i),o=function(){n(i)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}function h(t,e,i,r){var o=i?\"\":r.css;if(t.styleSheet)t.styleSheet.cssText=m(e,o);else{var n=document.createTextNode(o),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(n,s[e]):t.appendChild(n)}}function l(t,e){var i=e.css,r=e.media,o=e.sourceMap;if(r&&t.setAttribute(\"media\",r),o&&(i+=\"\\n/*# sourceURL=\"+o.sources[0]+\" */\",i+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+\" */\"),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}var u={},p=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}},d=p(function(){return/msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase())}),c=p(function(){return document.head||document.getElementsByTagName(\"head\")[0]}),f=null,g=0,y=[];t.exports=function(t,e){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");e=e||{},void 0===e.singleton&&(e.singleton=d()),void 0===e.insertAt&&(e.insertAt=\"bottom\");var o=r(t);return i(o,e),function(t){for(var n=[],s=0;s<o.length;s++){var a=o[s],h=u[a.id];h.refs--,n.push(h)}if(t){i(r(t),e)}for(var s=0;s<n.length;s++){var h=n[s];if(0===h.refs){for(var l=0;l<h.parts.length;l++)h.parts[l]();delete u[h.id]}}}};var m=function(){var t=[];return function(e,i){return t[e]=i,t.filter(Boolean).join(\"\\n\")}}()}])}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceMappingURL=vue-morris.min.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/54.cbd5a396ce69f9367a35.js","var Component = require(\"!../../../node_modules/._vue-loader@12.2.1@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/._vue-loader@12.2.1@vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/._vue-loader@12.2.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0311cc99\\\"}!../../../node_modules/._vue-loader@12.2.1@vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/admin/index.vue\n// module id = 269\n// module chunks = 54","<template>\n\t\t\t<div class=\"wrapper wrapper-content\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-lg-3 col-sm-6\">\n\t\t\t\t\t\t<div class=\"ibox float-e-margins\">\n\t\t\t\t\t\t\t<div class=\"ibox-title\">\n\t\t\t\t\t\t\t\t<span class=\"label label-success pull-right\">Today</span>\n\t\t\t\t\t\t\t\t<h5>Account</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"ibox-content\">\n\t\t\t\t\t\t\t\t<h1 class=\"no-margins\">130</h1>\n\t\t\t\t\t\t\t\t<small>No.of Client</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-3 col-sm-6\">\n\t\t\t\t\t\t<div class=\"ibox float-e-margins\">\n\t\t\t\t\t\t\t<div class=\"ibox-title\">\n\t\t\t\t\t\t\t\t<span class=\"label label-info pull-right\">This Month</span>\n\t\t\t\t\t\t\t\t<h5>Account</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"ibox-content\">\n\t\t\t\t\t\t\t\t<h1 class=\"no-margins\">19,821</h1>\n\t\t\t\t\t\t\t\t<div class=\"stat-percent font-bold text-navy\">120% <i class=\"fa fa-level-up\"></i></div>\n\t\t\t\t\t\t\t\t<small>No.of Client</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-3 col-sm-6\">\n\t\t\t\t\t\t<div class=\"ibox float-e-margins\">\n\t\t\t\t\t\t\t<div class=\"ibox-title\">\n\t\t\t\t\t\t\t\t<span class=\"label label-success pull-right\">Today</span>\n\t\t\t\t\t\t\t\t<h5>Commission</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"ibox-content\">\n\t\t\t\t\t\t\t\t<h1 class=\"no-margins\">6,247.80</h1>\n\t\t\t\t\t\t\t\t<div class=\"stat-percent font-bold text-navy\">144% <i class=\"fa fa-level-up\"></i></div>\n\t\t\t\t\t\t\t\t<small>Commission Paid</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-3 col-sm-6\">\n\t\t\t\t\t\t<div class=\"ibox float-e-margins\">\n\t\t\t\t\t\t\t<div class=\"ibox-title\">\n\t\t\t\t\t\t\t\t<span class=\"label label-info pull-right\">This Month</span>\n\t\t\t\t\t\t\t\t<h5>Commission</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"ibox-content\">\n\t\t\t\t\t\t\t\t<h1 class=\"no-margins\">54,057.52</h1>\n\t\t\t\t\t\t\t\t<div class=\"stat-percent font-bold text-danger\">98% <i class=\"fa fa-level-down\"></i></div>\n\t\t\t\t\t\t\t\t<small>Commission Paid</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<!--<div class=\"row\">\n\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t<div class=\"ibox float-e-margins\">\n\t\t\t\t\t\t\t<div class=\"ibox-title\">\n\t\t\t\t\t\t\t\t<h5>Activity</h5>\n\t\t\t\t\t\t\t\t<div class=\"pull-right\">\n\t\t\t\t\t\t\t\t\t<div class=\"btn-group\">\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-white active\">Today</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-white\">Monthly</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-white\">Annual</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"ibox-content\">\n\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-lg-9\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"flot-chart\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"flot-chart-content\" id=\"flot-dashboard-chart\"></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"col-lg-3\">\n\t\t\t\t\t\t\t\t\t\t<ul class=\"stat-list\">\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 class=\"no-margins\">2,346</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<small>Active Login</small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"stat-percent\">112% <i class=\"fa fa-level-up text-navy\"></i></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"progress progress-mini\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div style=\"width: 100%;\" class=\"progress-bar\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 class=\"no-margins \">744,422</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<small>Transaction Volume</small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"stat-percent\">90% <i class=\"fa fa-level-down text-navy\"></i></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"progress progress-mini\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div style=\"width: 90%;\" class=\"progress-bar\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>-->\n\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-lg-6 col-md-6\">\n\t\t\t\t\t\t<div class=\"widget style1\">\n\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t<div class=\"col-xs-2 text-center\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-trophy fa-5x\"></i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-xs-5 text-right\">\n\t\t\t\t\t\t\t\t\t<span> Today Deposit </span>\n\t\t\t\t\t\t\t\t\t<h2 class=\"font-bold\">$ 3,300.00</h2>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-xs-5 text-right\">\n\t\t\t\t\t\t\t\t\t<span> This Month Deposit </span>\n\t\t\t\t\t\t\t\t\t<h2 class=\"font-bold\">$ 84,232.00</h2>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-6 col-md-6\">\n\t\t\t\t\t\t<div class=\"widget style1\">\n\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t<div class=\"col-xs-2 text-center\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-briefcase fa-5x\"></i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-xs-5 text-right\">\n\t\t\t\t\t\t\t\t\t<span> Today Withdrawal </span>\n\t\t\t\t\t\t\t\t\t<h2 class=\"font-bold\">$ 1,232.00</h2>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-xs-5 text-right\">\n\t\t\t\t\t\t\t\t\t<span> This Month Withdrawal </span>\n\t\t\t\t\t\t\t\t\t<h2 class=\"font-bold\">$ 4,232.50</h2>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"wrapper wrapper-content\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-lg-8\">\n\t\t\t\t\t\t\t<div class=\"ibox float-e-margins\">\n\t\t\t\t\t\t\t\t<div class=\"ibox-title\">\n\t\t\t\t\t\t\t\t\t<h5>Close Trade</h5>\n\t\t\t\t\t\t\t\t\t<div class=\"ibox-tools\">\n\t\t\t\t\t\t\t\t\t\t<a class=\"collapse-link\" @click.native=\"collapse\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-chevron-up\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ibox-content\">\n\t\t\t\t\t\t\t\t\t<div class=\"tabs-container\">\n\t\t\t\t\t\t\t\t\t\t<ul class=\"nav nav-tabs\" role=\"tablist\">\n\t\t\t\t\t\t\t\t\t\t\t<li role=\"presentation\" class=\"active\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#fx-today\" data-toggle=\"tab\" aria-controls=\"fx-today\">FX<small class=\"label-white-outline m-l-xs\">Today</small></a>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li role=\"presentation\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#fx-monthly\" data-toggle=\"tab\" aria-controls=\"sfx-monthly\">FX<small class=\"label-white-outline m-l-xs\">This Month</small></a>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li role=\"presentation\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#bo-today\" data-toggle=\"tab\" aria-controls=\"bo-today\">BO<small class=\"label-white-outline m-l-xs\">Today</small></a>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li role=\"presentation\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#bo-monthly\" data-toggle=\"tab\" aria-controls=\"bo-monthly\">BO<small class=\"label-white-outline m-l-xs\">This Month</small></a>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"tab-content\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"tab-pane active\" id=\"fx-today\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>GBPUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>USDCAD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>NZDUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURGBP</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURJPY</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>GBPJPY</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDJPY</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>NZDJPY</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>XAGUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>XAUUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>WTICrude</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>BrentCrude</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<!-- tab-pane END -->\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"tab-pane\" id=\"fx-monthly\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>GBPUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>USDCAD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>NZDUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURGBP</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURJPY</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>GBPJPY</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDJPY</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>NZDJPY</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>XAGUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>XAUUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>WTICrude</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>BrentCrude</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<!-- tab-pane END -->\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"tab-pane\" id=\"bo-today\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>GBPUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>USDCAD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>NZDUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURGBP</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDUSD</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURJPY</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>GBPJPY</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDJPY</small><h4>14,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<!-- tab-pane END -->\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"tab-pane\" id=\"bo-monthly\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>GBPUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>USDCAD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>NZDUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURGBP</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDUSD</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>EURJPY</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>GBPJPY</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-2 col-xs-4 m-b-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>AUDJPY</small><h4>214,560.00</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<!-- tab-pane END -->\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<!-- ibox END -->\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"col-lg-4\">\n\t\t\t\t\t\t\t<div class=\"ibox float-e-margins\">\n\t\t\t\t\t\t\t\t<div class=\"ibox-title\">\n\t\t\t\t\t\t\t\t\t<h5>Rank Statistics</h5>\n\t\t\t\t\t\t\t\t\t<div class=\"ibox-tools\">\n\t\t\t\t\t\t\t\t\t\t<a class=\"collapse-link\" @click.native=\"collapse\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-chevron-up\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ibox-content p-xs\">\n\t\t\t\t\t\t\t\t\t<donut-chart id=\"donut\" :data=\"donutData\" colors='[\"#ff6384\",\"#36a2eb\",\"#ffce56\",\"#000\"]' ></donut-chart>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"footer\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>Copyright</strong> GQ capital &copy; 2017\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div> \n</template>\n<script>\n// import '../../assets/css/plugins/morris/morris-0.4.3.min.css';\n// import Raphael from '../../assets/js/plugins/morris/raphael.js'\n// import Morri from '../../assets/js/plugins/morris/morris.js'\nimport Raphael from 'raphael/raphael'\nglobal.Raphael = Raphael\nimport {DonutChart} from 'vue-morris'\nexport default {\n    name: 'index',\n    data () {\n      return {\n         donutData:[\n\t\t\t {label:'Trader',value:20125},\n\t\t\t {label:'IB',value: 2587},\n\t\t\t {label:'MIB',value:151},\n\t\t\t {label:'PIB',value:36}\n\t\t\t//  resize:true 设置自动调整大小会报错冲突\n\t\t ]\n      }\n    },\n    components: {\n       Raphael,\n\t   DonutChart\n    },\n    mounted: function(){\n\t\t$('.collapse-link').on('click', function () {\n\t\t    var ibox = $(this).closest('div.ibox');\n\t\t    var button = $(this).find('i');\n\t\t    var content = ibox.find('div.ibox-content');\n\t\t    content.slideToggle(200);\n\t\t    button.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\n\t\t    ibox.toggleClass('').toggleClass('border-bottom');\n\t\t    setTimeout(function () {\n\t\t        ibox.resize();    \n\t\t\t\t// 会报错-->raphael\n\t\t        ibox.find('[id^=map-]').resize();\n\t\t    }, 50);\n\t\t});\n    },\n\tmethods: {\n\n\t}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n\n\n\n\n// WEBPACK FOOTER //\n// index.vue?705de35a","// ┌───────────────────────────────────────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël 2.2.0 - JavaScript Vector Library                                                             │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright © 2008-2016 Dmitry Baranovskiy (http://raphaeljs.com)                                       │ \\\\\n// │ Copyright © 2008-2016 Sencha Labs (http://sencha.com)                                                 │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Licensed under the MIT (https://github.com/DmitryBaranovskiy/raphael/blob/master/license.txt) license.│ \\\\\n// └───────────────────────────────────────────────────────────────────────────────────────────────────────┘ \\\\\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Raphael\"] = factory();\n\telse\n\t\troot[\"Raphael\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(R) {\n\n\t    return R;\n\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(eve) {\n\n\t    /*\\\n\t     * Raphael\n\t     [ method ]\n\t     **\n\t     * Creates a canvas object on which to draw.\n\t     * You must do this first, as all future calls to drawing methods\n\t     * from this instance will be bound to this canvas.\n\t     > Parameters\n\t     **\n\t     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\n\t     - width (number)\n\t     - height (number)\n\t     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n\t     * or\n\t     - x (number)\n\t     - y (number)\n\t     - width (number)\n\t     - height (number)\n\t     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n\t     * or\n\t     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\n\t     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n\t     * or\n\t     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\n\t     = (object) @Paper\n\t     > Usage\n\t     | // Each of the following examples create a canvas\n\t     | // that is 320px wide by 200px high.\n\t     | // Canvas is created at the viewport’s 10,50 coordinate.\n\t     | var paper = Raphael(10, 50, 320, 200);\n\t     | // Canvas is created at the top left corner of the #notepad element\n\t     | // (or its top right corner in dir=\"rtl\" elements)\n\t     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\n\t     | // Same as above\n\t     | var paper = Raphael(\"notepad\", 320, 200);\n\t     | // Image dump\n\t     | var set = Raphael([\"notepad\", 320, 200, {\n\t     |     type: \"rect\",\n\t     |     x: 10,\n\t     |     y: 10,\n\t     |     width: 25,\n\t     |     height: 25,\n\t     |     stroke: \"#f00\"\n\t     | }, {\n\t     |     type: \"text\",\n\t     |     x: 30,\n\t     |     y: 40,\n\t     |     text: \"Dump\"\n\t     | }]);\n\t    \\*/\n\t    function R(first) {\n\t        if (R.is(first, \"function\")) {\n\t            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\n\t        } else if (R.is(first, array)) {\n\t            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\n\t        } else {\n\t            var args = Array.prototype.slice.call(arguments, 0);\n\t            if (R.is(args[args.length - 1], \"function\")) {\n\t                var f = args.pop();\n\t                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\n\t                    f.call(R._engine.create[apply](R, args));\n\t                });\n\t            } else {\n\t                return R._engine.create[apply](R, arguments);\n\t            }\n\t        }\n\t    }\n\t    R.version = \"2.2.0\";\n\t    R.eve = eve;\n\t    var loaded,\n\t        separator = /[, ]+/,\n\t        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\n\t        formatrg = /\\{(\\d+)\\}/g,\n\t        proto = \"prototype\",\n\t        has = \"hasOwnProperty\",\n\t        g = {\n\t            doc: document,\n\t            win: window\n\t        },\n\t        oldRaphael = {\n\t            was: Object.prototype[has].call(g.win, \"Raphael\"),\n\t            is: g.win.Raphael\n\t        },\n\t        Paper = function () {\n\t            /*\\\n\t             * Paper.ca\n\t             [ property (object) ]\n\t             **\n\t             * Shortcut for @Paper.customAttributes\n\t            \\*/\n\t            /*\\\n\t             * Paper.customAttributes\n\t             [ property (object) ]\n\t             **\n\t             * If you have a set of attributes that you would like to represent\n\t             * as a function of some number you can do it easily with custom attributes:\n\t             > Usage\n\t             | paper.customAttributes.hue = function (num) {\n\t             |     num = num % 1;\n\t             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\n\t             | };\n\t             | // Custom attribute “hue” will change fill\n\t             | // to be given hue with fixed saturation and brightness.\n\t             | // Now you can use it like this:\n\t             | var c = paper.circle(10, 10, 10).attr({hue: .45});\n\t             | // or even like this:\n\t             | c.animate({hue: 1}, 1e3);\n\t             |\n\t             | // You could also create custom attribute\n\t             | // with multiple parameters:\n\t             | paper.customAttributes.hsb = function (h, s, b) {\n\t             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\n\t             | };\n\t             | c.attr({hsb: \"0.5 .8 1\"});\n\t             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\n\t            \\*/\n\t            this.ca = this.customAttributes = {};\n\t        },\n\t        paperproto,\n\t        appendChild = \"appendChild\",\n\t        apply = \"apply\",\n\t        concat = \"concat\",\n\t        supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\n\t        E = \"\",\n\t        S = \" \",\n\t        Str = String,\n\t        split = \"split\",\n\t        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\n\t        touchMap = {\n\t            mousedown: \"touchstart\",\n\t            mousemove: \"touchmove\",\n\t            mouseup: \"touchend\"\n\t        },\n\t        lowerCase = Str.prototype.toLowerCase,\n\t        math = Math,\n\t        mmax = math.max,\n\t        mmin = math.min,\n\t        abs = math.abs,\n\t        pow = math.pow,\n\t        PI = math.PI,\n\t        nu = \"number\",\n\t        string = \"string\",\n\t        array = \"array\",\n\t        toString = \"toString\",\n\t        fillString = \"fill\",\n\t        objectToString = Object.prototype.toString,\n\t        paper = {},\n\t        push = \"push\",\n\t        ISURL = R._ISURL = /^url\\(['\"]?(.+?)['\"]?\\)$/i,\n\t        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\n\t        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\n\t        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n\t        round = math.round,\n\t        setAttribute = \"setAttribute\",\n\t        toFloat = parseFloat,\n\t        toInt = parseInt,\n\t        upperCase = Str.prototype.toUpperCase,\n\t        availableAttrs = R._availableAttrs = {\n\t            \"arrow-end\": \"none\",\n\t            \"arrow-start\": \"none\",\n\t            blur: 0,\n\t            \"clip-rect\": \"0 0 1e9 1e9\",\n\t            cursor: \"default\",\n\t            cx: 0,\n\t            cy: 0,\n\t            fill: \"#fff\",\n\t            \"fill-opacity\": 1,\n\t            font: '10px \"Arial\"',\n\t            \"font-family\": '\"Arial\"',\n\t            \"font-size\": \"10\",\n\t            \"font-style\": \"normal\",\n\t            \"font-weight\": 400,\n\t            gradient: 0,\n\t            height: 0,\n\t            href: \"http://raphaeljs.com/\",\n\t            \"letter-spacing\": 0,\n\t            opacity: 1,\n\t            path: \"M0,0\",\n\t            r: 0,\n\t            rx: 0,\n\t            ry: 0,\n\t            src: \"\",\n\t            stroke: \"#000\",\n\t            \"stroke-dasharray\": \"\",\n\t            \"stroke-linecap\": \"butt\",\n\t            \"stroke-linejoin\": \"butt\",\n\t            \"stroke-miterlimit\": 0,\n\t            \"stroke-opacity\": 1,\n\t            \"stroke-width\": 1,\n\t            target: \"_blank\",\n\t            \"text-anchor\": \"middle\",\n\t            title: \"Raphael\",\n\t            transform: \"\",\n\t            width: 0,\n\t            x: 0,\n\t            y: 0,\n\t            \"class\": \"\"\n\t        },\n\t        availableAnimAttrs = R._availableAnimAttrs = {\n\t            blur: nu,\n\t            \"clip-rect\": \"csv\",\n\t            cx: nu,\n\t            cy: nu,\n\t            fill: \"colour\",\n\t            \"fill-opacity\": nu,\n\t            \"font-size\": nu,\n\t            height: nu,\n\t            opacity: nu,\n\t            path: \"path\",\n\t            r: nu,\n\t            rx: nu,\n\t            ry: nu,\n\t            stroke: \"colour\",\n\t            \"stroke-opacity\": nu,\n\t            \"stroke-width\": nu,\n\t            transform: \"transform\",\n\t            width: nu,\n\t            x: nu,\n\t            y: nu\n\t        },\n\t        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\n\t        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\n\t        hsrg = {hs: 1, rg: 1},\n\t        p2s = /,?([achlmqrstvxz]),?/gi,\n\t        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n\t        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n\t        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\n\t        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\n\t        eldata = {},\n\t        sortByKey = function (a, b) {\n\t            return a.key - b.key;\n\t        },\n\t        sortByNumber = function (a, b) {\n\t            return toFloat(a) - toFloat(b);\n\t        },\n\t        fun = function () {},\n\t        pipe = function (x) {\n\t            return x;\n\t        },\n\t        rectPath = R._rectPath = function (x, y, w, h, r) {\n\t            if (r) {\n\t                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n\t            }\n\t            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n\t        },\n\t        ellipsePath = function (x, y, rx, ry) {\n\t            if (ry == null) {\n\t                ry = rx;\n\t            }\n\t            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n\t        },\n\t        getPath = R._getPath = {\n\t            path: function (el) {\n\t                return el.attr(\"path\");\n\t            },\n\t            circle: function (el) {\n\t                var a = el.attrs;\n\t                return ellipsePath(a.cx, a.cy, a.r);\n\t            },\n\t            ellipse: function (el) {\n\t                var a = el.attrs;\n\t                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\n\t            },\n\t            rect: function (el) {\n\t                var a = el.attrs;\n\t                return rectPath(a.x, a.y, a.width, a.height, a.r);\n\t            },\n\t            image: function (el) {\n\t                var a = el.attrs;\n\t                return rectPath(a.x, a.y, a.width, a.height);\n\t            },\n\t            text: function (el) {\n\t                var bbox = el._getBBox();\n\t                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n\t            },\n\t            set : function(el) {\n\t                var bbox = el._getBBox();\n\t                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n\t            }\n\t        },\n\t        /*\\\n\t         * Raphael.mapPath\n\t         [ method ]\n\t         **\n\t         * Transform the path string with given matrix.\n\t         > Parameters\n\t         - path (string) path string\n\t         - matrix (object) see @Matrix\n\t         = (string) transformed path string\n\t        \\*/\n\t        mapPath = R.mapPath = function (path, matrix) {\n\t            if (!matrix) {\n\t                return path;\n\t            }\n\t            var x, y, i, j, ii, jj, pathi;\n\t            path = path2curve(path);\n\t            for (i = 0, ii = path.length; i < ii; i++) {\n\t                pathi = path[i];\n\t                for (j = 1, jj = pathi.length; j < jj; j += 2) {\n\t                    x = matrix.x(pathi[j], pathi[j + 1]);\n\t                    y = matrix.y(pathi[j], pathi[j + 1]);\n\t                    pathi[j] = x;\n\t                    pathi[j + 1] = y;\n\t                }\n\t            }\n\t            return path;\n\t        };\n\n\t    R._g = g;\n\t    /*\\\n\t     * Raphael.type\n\t     [ property (string) ]\n\t     **\n\t     * Can be “SVG”, “VML” or empty, depending on browser support.\n\t    \\*/\n\t    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\n\t    if (R.type == \"VML\") {\n\t        var d = g.doc.createElement(\"div\"),\n\t            b;\n\t        d.innerHTML = '<v:shape adj=\"1\"/>';\n\t        b = d.firstChild;\n\t        b.style.behavior = \"url(#default#VML)\";\n\t        if (!(b && typeof b.adj == \"object\")) {\n\t            return (R.type = E);\n\t        }\n\t        d = null;\n\t    }\n\t    /*\\\n\t     * Raphael.svg\n\t     [ property (boolean) ]\n\t     **\n\t     * `true` if browser supports SVG.\n\t    \\*/\n\t    /*\\\n\t     * Raphael.vml\n\t     [ property (boolean) ]\n\t     **\n\t     * `true` if browser supports VML.\n\t    \\*/\n\t    R.svg = !(R.vml = R.type == \"VML\");\n\t    R._Paper = Paper;\n\t    /*\\\n\t     * Raphael.fn\n\t     [ property (object) ]\n\t     **\n\t     * You can add your own method to the canvas. For example if you want to draw a pie chart,\n\t     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\n\t     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\n\t     * Raphaël instance is created, otherwise it will take no effect. Please note that the\n\t     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\n\t     * ensure any namespacing ensures proper context.\n\t     > Usage\n\t     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\n\t     |     return this.path( ... );\n\t     | };\n\t     | // or create namespace\n\t     | Raphael.fn.mystuff = {\n\t     |     arrow: function () {…},\n\t     |     star: function () {…},\n\t     |     // etc…\n\t     | };\n\t     | var paper = Raphael(10, 10, 630, 480);\n\t     | // then use it\n\t     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\n\t     | paper.mystuff.arrow();\n\t     | paper.mystuff.star();\n\t    \\*/\n\t    R.fn = paperproto = Paper.prototype = R.prototype;\n\t    R._id = 0;\n\t    /*\\\n\t     * Raphael.is\n\t     [ method ]\n\t     **\n\t     * Handful of replacements for `typeof` operator.\n\t     > Parameters\n\t     - o (…) any object or primitive\n\t     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\n\t     = (boolean) is given value is of given type\n\t    \\*/\n\t    R.is = function (o, type) {\n\t        type = lowerCase.call(type);\n\t        if (type == \"finite\") {\n\t            return !isnan[has](+o);\n\t        }\n\t        if (type == \"array\") {\n\t            return o instanceof Array;\n\t        }\n\t        return  (type == \"null\" && o === null) ||\n\t                (type == typeof o && o !== null) ||\n\t                (type == \"object\" && o === Object(o)) ||\n\t                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\n\t                objectToString.call(o).slice(8, -1).toLowerCase() == type;\n\t    };\n\n\t    function clone(obj) {\n\t        if (typeof obj == \"function\" || Object(obj) !== obj) {\n\t            return obj;\n\t        }\n\t        var res = new obj.constructor;\n\t        for (var key in obj) if (obj[has](key)) {\n\t            res[key] = clone(obj[key]);\n\t        }\n\t        return res;\n\t    }\n\n\t    /*\\\n\t     * Raphael.angle\n\t     [ method ]\n\t     **\n\t     * Returns angle between two or three points\n\t     > Parameters\n\t     - x1 (number) x coord of first point\n\t     - y1 (number) y coord of first point\n\t     - x2 (number) x coord of second point\n\t     - y2 (number) y coord of second point\n\t     - x3 (number) #optional x coord of third point\n\t     - y3 (number) #optional y coord of third point\n\t     = (number) angle in degrees.\n\t    \\*/\n\t    R.angle = function (x1, y1, x2, y2, x3, y3) {\n\t        if (x3 == null) {\n\t            var x = x1 - x2,\n\t                y = y1 - y2;\n\t            if (!x && !y) {\n\t                return 0;\n\t            }\n\t            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n\t        } else {\n\t            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\n\t        }\n\t    };\n\t    /*\\\n\t     * Raphael.rad\n\t     [ method ]\n\t     **\n\t     * Transform angle to radians\n\t     > Parameters\n\t     - deg (number) angle in degrees\n\t     = (number) angle in radians.\n\t    \\*/\n\t    R.rad = function (deg) {\n\t        return deg % 360 * PI / 180;\n\t    };\n\t    /*\\\n\t     * Raphael.deg\n\t     [ method ]\n\t     **\n\t     * Transform angle to degrees\n\t     > Parameters\n\t     - rad (number) angle in radians\n\t     = (number) angle in degrees.\n\t    \\*/\n\t    R.deg = function (rad) {\n\t        return Math.round ((rad * 180 / PI% 360)* 1000) / 1000;\n\t    };\n\t    /*\\\n\t     * Raphael.snapTo\n\t     [ method ]\n\t     **\n\t     * Snaps given value to given grid.\n\t     > Parameters\n\t     - values (array|number) given array of values or step of the grid\n\t     - value (number) value to adjust\n\t     - tolerance (number) #optional tolerance for snapping. Default is `10`.\n\t     = (number) adjusted value.\n\t    \\*/\n\t    R.snapTo = function (values, value, tolerance) {\n\t        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\n\t        if (R.is(values, array)) {\n\t            var i = values.length;\n\t            while (i--) if (abs(values[i] - value) <= tolerance) {\n\t                return values[i];\n\t            }\n\t        } else {\n\t            values = +values;\n\t            var rem = value % values;\n\t            if (rem < tolerance) {\n\t                return value - rem;\n\t            }\n\t            if (rem > values - tolerance) {\n\t                return value - rem + values;\n\t            }\n\t        }\n\t        return value;\n\t    };\n\n\t    /*\\\n\t     * Raphael.createUUID\n\t     [ method ]\n\t     **\n\t     * Returns RFC4122, version 4 ID\n\t    \\*/\n\t    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\n\t        return function () {\n\t            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\n\t        };\n\t    })(/[xy]/g, function (c) {\n\t        var r = math.random() * 16 | 0,\n\t            v = c == \"x\" ? r : (r & 3 | 8);\n\t        return v.toString(16);\n\t    });\n\n\t    /*\\\n\t     * Raphael.setWindow\n\t     [ method ]\n\t     **\n\t     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\n\t     > Parameters\n\t     - newwin (window) new window object\n\t    \\*/\n\t    R.setWindow = function (newwin) {\n\t        eve(\"raphael.setWindow\", R, g.win, newwin);\n\t        g.win = newwin;\n\t        g.doc = g.win.document;\n\t        if (R._engine.initWin) {\n\t            R._engine.initWin(g.win);\n\t        }\n\t    };\n\t    var toHex = function (color) {\n\t        if (R.vml) {\n\t            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\n\t            var trim = /^\\s+|\\s+$/g;\n\t            var bod;\n\t            try {\n\t                var docum = new ActiveXObject(\"htmlfile\");\n\t                docum.write(\"<body>\");\n\t                docum.close();\n\t                bod = docum.body;\n\t            } catch(e) {\n\t                bod = createPopup().document.body;\n\t            }\n\t            var range = bod.createTextRange();\n\t            toHex = cacher(function (color) {\n\t                try {\n\t                    bod.style.color = Str(color).replace(trim, E);\n\t                    var value = range.queryCommandValue(\"ForeColor\");\n\t                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\n\t                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\n\t                } catch(e) {\n\t                    return \"none\";\n\t                }\n\t            });\n\t        } else {\n\t            var i = g.doc.createElement(\"i\");\n\t            i.title = \"Rapha\\xebl Colour Picker\";\n\t            i.style.display = \"none\";\n\t            g.doc.body.appendChild(i);\n\t            toHex = cacher(function (color) {\n\t                i.style.color = color;\n\t                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n\t            });\n\t        }\n\t        return toHex(color);\n\t    },\n\t    hsbtoString = function () {\n\t        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n\t    },\n\t    hsltoString = function () {\n\t        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n\t    },\n\t    rgbtoString = function () {\n\t        return this.hex;\n\t    },\n\t    prepareRGB = function (r, g, b) {\n\t        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n\t            b = r.b;\n\t            g = r.g;\n\t            r = r.r;\n\t        }\n\t        if (g == null && R.is(r, string)) {\n\t            var clr = R.getRGB(r);\n\t            r = clr.r;\n\t            g = clr.g;\n\t            b = clr.b;\n\t        }\n\t        if (r > 1 || g > 1 || b > 1) {\n\t            r /= 255;\n\t            g /= 255;\n\t            b /= 255;\n\t        }\n\n\t        return [r, g, b];\n\t    },\n\t    packageRGB = function (r, g, b, o) {\n\t        r *= 255;\n\t        g *= 255;\n\t        b *= 255;\n\t        var rgb = {\n\t            r: r,\n\t            g: g,\n\t            b: b,\n\t            hex: R.rgb(r, g, b),\n\t            toString: rgbtoString\n\t        };\n\t        R.is(o, \"finite\") && (rgb.opacity = o);\n\t        return rgb;\n\t    };\n\n\t    /*\\\n\t     * Raphael.color\n\t     [ method ]\n\t     **\n\t     * Parses the color string and returns object with all values for the given color.\n\t     > Parameters\n\t     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\n\t     = (object) Combined RGB & HSB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue,\n\t     o     hex (string) color in HTML/CSS format: #••••••,\n\t     o     error (boolean) `true` if string can’t be parsed,\n\t     o     h (number) hue,\n\t     o     s (number) saturation,\n\t     o     v (number) value (brightness),\n\t     o     l (number) lightness\n\t     o }\n\t    \\*/\n\t    R.color = function (clr) {\n\t        var rgb;\n\t        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n\t            rgb = R.hsb2rgb(clr);\n\t            clr.r = rgb.r;\n\t            clr.g = rgb.g;\n\t            clr.b = rgb.b;\n\t            clr.hex = rgb.hex;\n\t        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n\t            rgb = R.hsl2rgb(clr);\n\t            clr.r = rgb.r;\n\t            clr.g = rgb.g;\n\t            clr.b = rgb.b;\n\t            clr.hex = rgb.hex;\n\t        } else {\n\t            if (R.is(clr, \"string\")) {\n\t                clr = R.getRGB(clr);\n\t            }\n\t            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\n\t                rgb = R.rgb2hsl(clr);\n\t                clr.h = rgb.h;\n\t                clr.s = rgb.s;\n\t                clr.l = rgb.l;\n\t                rgb = R.rgb2hsb(clr);\n\t                clr.v = rgb.b;\n\t            } else {\n\t                clr = {hex: \"none\"};\n\t                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n\t            }\n\t        }\n\t        clr.toString = rgbtoString;\n\t        return clr;\n\t    };\n\t    /*\\\n\t     * Raphael.hsb2rgb\n\t     [ method ]\n\t     **\n\t     * Converts HSB values to RGB object.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - v (number) value or brightness\n\t     = (object) RGB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue,\n\t     o     hex (string) color in HTML/CSS format: #••••••\n\t     o }\n\t    \\*/\n\t    R.hsb2rgb = function (h, s, v, o) {\n\t        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n\t            v = h.b;\n\t            s = h.s;\n\t            o = h.o;\n\t            h = h.h;\n\t        }\n\t        h *= 360;\n\t        var R, G, B, X, C;\n\t        h = (h % 360) / 60;\n\t        C = v * s;\n\t        X = C * (1 - abs(h % 2 - 1));\n\t        R = G = B = v - C;\n\n\t        h = ~~h;\n\t        R += [C, X, 0, 0, X, C][h];\n\t        G += [X, C, C, X, 0, 0][h];\n\t        B += [0, 0, X, C, C, X][h];\n\t        return packageRGB(R, G, B, o);\n\t    };\n\t    /*\\\n\t     * Raphael.hsl2rgb\n\t     [ method ]\n\t     **\n\t     * Converts HSL values to RGB object.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - l (number) luminosity\n\t     = (object) RGB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue,\n\t     o     hex (string) color in HTML/CSS format: #••••••\n\t     o }\n\t    \\*/\n\t    R.hsl2rgb = function (h, s, l, o) {\n\t        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n\t            l = h.l;\n\t            s = h.s;\n\t            h = h.h;\n\t        }\n\t        if (h > 1 || s > 1 || l > 1) {\n\t            h /= 360;\n\t            s /= 100;\n\t            l /= 100;\n\t        }\n\t        h *= 360;\n\t        var R, G, B, X, C;\n\t        h = (h % 360) / 60;\n\t        C = 2 * s * (l < .5 ? l : 1 - l);\n\t        X = C * (1 - abs(h % 2 - 1));\n\t        R = G = B = l - C / 2;\n\n\t        h = ~~h;\n\t        R += [C, X, 0, 0, X, C][h];\n\t        G += [X, C, C, X, 0, 0][h];\n\t        B += [0, 0, X, C, C, X][h];\n\t        return packageRGB(R, G, B, o);\n\t    };\n\t    /*\\\n\t     * Raphael.rgb2hsb\n\t     [ method ]\n\t     **\n\t     * Converts RGB values to HSB object.\n\t     > Parameters\n\t     - r (number) red\n\t     - g (number) green\n\t     - b (number) blue\n\t     = (object) HSB object in format:\n\t     o {\n\t     o     h (number) hue\n\t     o     s (number) saturation\n\t     o     b (number) brightness\n\t     o }\n\t    \\*/\n\t    R.rgb2hsb = function (r, g, b) {\n\t        b = prepareRGB(r, g, b);\n\t        r = b[0];\n\t        g = b[1];\n\t        b = b[2];\n\n\t        var H, S, V, C;\n\t        V = mmax(r, g, b);\n\t        C = V - mmin(r, g, b);\n\t        H = (C == 0 ? null :\n\t             V == r ? (g - b) / C :\n\t             V == g ? (b - r) / C + 2 :\n\t                      (r - g) / C + 4\n\t            );\n\t        H = ((H + 360) % 6) * 60 / 360;\n\t        S = C == 0 ? 0 : C / V;\n\t        return {h: H, s: S, b: V, toString: hsbtoString};\n\t    };\n\t    /*\\\n\t     * Raphael.rgb2hsl\n\t     [ method ]\n\t     **\n\t     * Converts RGB values to HSL object.\n\t     > Parameters\n\t     - r (number) red\n\t     - g (number) green\n\t     - b (number) blue\n\t     = (object) HSL object in format:\n\t     o {\n\t     o     h (number) hue\n\t     o     s (number) saturation\n\t     o     l (number) luminosity\n\t     o }\n\t    \\*/\n\t    R.rgb2hsl = function (r, g, b) {\n\t        b = prepareRGB(r, g, b);\n\t        r = b[0];\n\t        g = b[1];\n\t        b = b[2];\n\n\t        var H, S, L, M, m, C;\n\t        M = mmax(r, g, b);\n\t        m = mmin(r, g, b);\n\t        C = M - m;\n\t        H = (C == 0 ? null :\n\t             M == r ? (g - b) / C :\n\t             M == g ? (b - r) / C + 2 :\n\t                      (r - g) / C + 4);\n\t        H = ((H + 360) % 6) * 60 / 360;\n\t        L = (M + m) / 2;\n\t        S = (C == 0 ? 0 :\n\t             L < .5 ? C / (2 * L) :\n\t                      C / (2 - 2 * L));\n\t        return {h: H, s: S, l: L, toString: hsltoString};\n\t    };\n\t    R._path2string = function () {\n\t        return this.join(\",\").replace(p2s, \"$1\");\n\t    };\n\t    function repush(array, item) {\n\t        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n\t            return array.push(array.splice(i, 1)[0]);\n\t        }\n\t    }\n\t    function cacher(f, scope, postprocessor) {\n\t        function newf() {\n\t            var arg = Array.prototype.slice.call(arguments, 0),\n\t                args = arg.join(\"\\u2400\"),\n\t                cache = newf.cache = newf.cache || {},\n\t                count = newf.count = newf.count || [];\n\t            if (cache[has](args)) {\n\t                repush(count, args);\n\t                return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t            }\n\t            count.length >= 1e3 && delete cache[count.shift()];\n\t            count.push(args);\n\t            cache[args] = f[apply](scope, arg);\n\t            return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t        }\n\t        return newf;\n\t    }\n\n\t    var preload = R._preload = function (src, f) {\n\t        var img = g.doc.createElement(\"img\");\n\t        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\t        img.onload = function () {\n\t            f.call(this);\n\t            this.onload = null;\n\t            g.doc.body.removeChild(this);\n\t        };\n\t        img.onerror = function () {\n\t            g.doc.body.removeChild(this);\n\t        };\n\t        g.doc.body.appendChild(img);\n\t        img.src = src;\n\t    };\n\n\t    function clrToString() {\n\t        return this.hex;\n\t    }\n\n\t    /*\\\n\t     * Raphael.getRGB\n\t     [ method ]\n\t     **\n\t     * Parses colour string as RGB object\n\t     > Parameters\n\t     - colour (string) colour string in one of formats:\n\t     # <ul>\n\t     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n\t     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n\t     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n\t     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n\t     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n\t     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n\t     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n\t     #     <li>hsl(•••, •••, •••) — same as hsb</li>\n\t     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\n\t     # </ul>\n\t     = (object) RGB object in format:\n\t     o {\n\t     o     r (number) red,\n\t     o     g (number) green,\n\t     o     b (number) blue\n\t     o     hex (string) color in HTML/CSS format: #••••••,\n\t     o     error (boolean) true if string can’t be parsed\n\t     o }\n\t    \\*/\n\t    R.getRGB = cacher(function (colour) {\n\t        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n\t            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n\t        }\n\t        if (colour == \"none\") {\n\t            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\n\t        }\n\t        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\t        var res,\n\t            red,\n\t            green,\n\t            blue,\n\t            opacity,\n\t            t,\n\t            values,\n\t            rgb = colour.match(colourRegExp);\n\t        if (rgb) {\n\t            if (rgb[2]) {\n\t                blue = toInt(rgb[2].substring(5), 16);\n\t                green = toInt(rgb[2].substring(3, 5), 16);\n\t                red = toInt(rgb[2].substring(1, 3), 16);\n\t            }\n\t            if (rgb[3]) {\n\t                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n\t                green = toInt((t = rgb[3].charAt(2)) + t, 16);\n\t                red = toInt((t = rgb[3].charAt(1)) + t, 16);\n\t            }\n\t            if (rgb[4]) {\n\t                values = rgb[4][split](commaSpaces);\n\t                red = toFloat(values[0]);\n\t                values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t                green = toFloat(values[1]);\n\t                values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t                blue = toFloat(values[2]);\n\t                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n\t                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t            }\n\t            if (rgb[5]) {\n\t                values = rgb[5][split](commaSpaces);\n\t                red = toFloat(values[0]);\n\t                values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t                green = toFloat(values[1]);\n\t                values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t                blue = toFloat(values[2]);\n\t                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n\t                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t                return R.hsb2rgb(red, green, blue, opacity);\n\t            }\n\t            if (rgb[6]) {\n\t                values = rgb[6][split](commaSpaces);\n\t                red = toFloat(values[0]);\n\t                values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t                green = toFloat(values[1]);\n\t                values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t                blue = toFloat(values[2]);\n\t                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n\t                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t                return R.hsl2rgb(red, green, blue, opacity);\n\t            }\n\t            rgb = {r: red, g: green, b: blue, toString: clrToString};\n\t            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n\t            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\n\t            return rgb;\n\t        }\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n\t    }, R);\n\t    /*\\\n\t     * Raphael.hsb\n\t     [ method ]\n\t     **\n\t     * Converts HSB values to hex representation of the colour.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - b (number) value or brightness\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.hsb = cacher(function (h, s, b) {\n\t        return R.hsb2rgb(h, s, b).hex;\n\t    });\n\t    /*\\\n\t     * Raphael.hsl\n\t     [ method ]\n\t     **\n\t     * Converts HSL values to hex representation of the colour.\n\t     > Parameters\n\t     - h (number) hue\n\t     - s (number) saturation\n\t     - l (number) luminosity\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.hsl = cacher(function (h, s, l) {\n\t        return R.hsl2rgb(h, s, l).hex;\n\t    });\n\t    /*\\\n\t     * Raphael.rgb\n\t     [ method ]\n\t     **\n\t     * Converts RGB values to hex representation of the colour.\n\t     > Parameters\n\t     - r (number) red\n\t     - g (number) green\n\t     - b (number) blue\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.rgb = cacher(function (r, g, b) {\n\t        function round(x) { return (x + 0.5) | 0; }\n\t        return \"#\" + (16777216 | round(b) | (round(g) << 8) | (round(r) << 16)).toString(16).slice(1);\n\t    });\n\t    /*\\\n\t     * Raphael.getColor\n\t     [ method ]\n\t     **\n\t     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\n\t     > Parameters\n\t     - value (number) #optional brightness, default is `0.75`\n\t     = (string) hex representation of the colour.\n\t    \\*/\n\t    R.getColor = function (value) {\n\t        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\n\t            rgb = this.hsb2rgb(start.h, start.s, start.b);\n\t        start.h += .075;\n\t        if (start.h > 1) {\n\t            start.h = 0;\n\t            start.s -= .2;\n\t            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\n\t        }\n\t        return rgb.hex;\n\t    };\n\t    /*\\\n\t     * Raphael.getColor.reset\n\t     [ method ]\n\t     **\n\t     * Resets spectrum position for @Raphael.getColor back to red.\n\t    \\*/\n\t    R.getColor.reset = function () {\n\t        delete this.start;\n\t    };\n\n\t    // http://schepers.cc/getting-to-the-point\n\t    function catmullRom2bezier(crp, z) {\n\t        var d = [];\n\t        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n\t            var p = [\n\t                        {x: +crp[i - 2], y: +crp[i - 1]},\n\t                        {x: +crp[i],     y: +crp[i + 1]},\n\t                        {x: +crp[i + 2], y: +crp[i + 3]},\n\t                        {x: +crp[i + 4], y: +crp[i + 5]}\n\t                    ];\n\t            if (z) {\n\t                if (!i) {\n\t                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n\t                } else if (iLen - 4 == i) {\n\t                    p[3] = {x: +crp[0], y: +crp[1]};\n\t                } else if (iLen - 2 == i) {\n\t                    p[2] = {x: +crp[0], y: +crp[1]};\n\t                    p[3] = {x: +crp[2], y: +crp[3]};\n\t                }\n\t            } else {\n\t                if (iLen - 4 == i) {\n\t                    p[3] = p[2];\n\t                } else if (!i) {\n\t                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n\t                }\n\t            }\n\t            d.push([\"C\",\n\t                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n\t                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n\t                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n\t                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n\t                  p[2].x,\n\t                  p[2].y\n\t            ]);\n\t        }\n\n\t        return d;\n\t    }\n\t    /*\\\n\t     * Raphael.parsePathString\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Parses given path string into an array of arrays of path segments.\n\t     > Parameters\n\t     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\n\t     = (array) array of segments.\n\t    \\*/\n\t    R.parsePathString = function (pathString) {\n\t        if (!pathString) {\n\t            return null;\n\t        }\n\t        var pth = paths(pathString);\n\t        if (pth.arr) {\n\t            return pathClone(pth.arr);\n\t        }\n\n\t        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\n\t            data = [];\n\t        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\n\t            data = pathClone(pathString);\n\t        }\n\t        if (!data.length) {\n\t            Str(pathString).replace(pathCommand, function (a, b, c) {\n\t                var params = [],\n\t                    name = b.toLowerCase();\n\t                c.replace(pathValues, function (a, b) {\n\t                    b && params.push(+b);\n\t                });\n\t                if (name == \"m\" && params.length > 2) {\n\t                    data.push([b][concat](params.splice(0, 2)));\n\t                    name = \"l\";\n\t                    b = b == \"m\" ? \"l\" : \"L\";\n\t                }\n\t                if (name == \"r\") {\n\t                    data.push([b][concat](params));\n\t                } else while (params.length >= paramCounts[name]) {\n\t                    data.push([b][concat](params.splice(0, paramCounts[name])));\n\t                    if (!paramCounts[name]) {\n\t                        break;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t        data.toString = R._path2string;\n\t        pth.arr = pathClone(data);\n\t        return data;\n\t    };\n\t    /*\\\n\t     * Raphael.parseTransformString\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Parses given path string into an array of transformations.\n\t     > Parameters\n\t     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\n\t     = (array) array of transformations.\n\t    \\*/\n\t    R.parseTransformString = cacher(function (TString) {\n\t        if (!TString) {\n\t            return null;\n\t        }\n\t        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n\t            data = [];\n\t        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\n\t            data = pathClone(TString);\n\t        }\n\t        if (!data.length) {\n\t            Str(TString).replace(tCommand, function (a, b, c) {\n\t                var params = [],\n\t                    name = lowerCase.call(b);\n\t                c.replace(pathValues, function (a, b) {\n\t                    b && params.push(+b);\n\t                });\n\t                data.push([b][concat](params));\n\t            });\n\t        }\n\t        data.toString = R._path2string;\n\t        return data;\n\t    });\n\t    // PATHS\n\t    var paths = function (ps) {\n\t        var p = paths.ps = paths.ps || {};\n\t        if (p[ps]) {\n\t            p[ps].sleep = 100;\n\t        } else {\n\t            p[ps] = {\n\t                sleep: 100\n\t            };\n\t        }\n\t        setTimeout(function () {\n\t            for (var key in p) if (p[has](key) && key != ps) {\n\t                p[key].sleep--;\n\t                !p[key].sleep && delete p[key];\n\t            }\n\t        });\n\t        return p[ps];\n\t    };\n\t    /*\\\n\t     * Raphael.findDotsAtSegment\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Find dot coordinates on the given cubic bezier curve at the given t.\n\t     > Parameters\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     - t (number) position on the curve (0..1)\n\t     = (object) point information in format:\n\t     o {\n\t     o     x: (number) x coordinate of the point\n\t     o     y: (number) y coordinate of the point\n\t     o     m: {\n\t     o         x: (number) x coordinate of the left anchor\n\t     o         y: (number) y coordinate of the left anchor\n\t     o     }\n\t     o     n: {\n\t     o         x: (number) x coordinate of the right anchor\n\t     o         y: (number) y coordinate of the right anchor\n\t     o     }\n\t     o     start: {\n\t     o         x: (number) x coordinate of the start of the curve\n\t     o         y: (number) y coordinate of the start of the curve\n\t     o     }\n\t     o     end: {\n\t     o         x: (number) x coordinate of the end of the curve\n\t     o         y: (number) y coordinate of the end of the curve\n\t     o     }\n\t     o     alpha: (number) angle of the curve derivative at the point\n\t     o }\n\t    \\*/\n\t    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t        var t1 = 1 - t,\n\t            t13 = pow(t1, 3),\n\t            t12 = pow(t1, 2),\n\t            t2 = t * t,\n\t            t3 = t2 * t,\n\t            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n\t            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n\t            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n\t            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n\t            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n\t            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n\t            ax = t1 * p1x + t * c1x,\n\t            ay = t1 * p1y + t * c1y,\n\t            cx = t1 * c2x + t * p2x,\n\t            cy = t1 * c2y + t * p2y,\n\t            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n\t        (mx > nx || my < ny) && (alpha += 180);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            m: {x: mx, y: my},\n\t            n: {x: nx, y: ny},\n\t            start: {x: ax, y: ay},\n\t            end: {x: cx, y: cy},\n\t            alpha: alpha\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.bezierBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Return bounding box of a given cubic bezier curve\n\t     > Parameters\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     * or\n\t     - bez (array) array of six points for bezier curve\n\t     = (object) point information in format:\n\t     o {\n\t     o     min: {\n\t     o         x: (number) x coordinate of the left point\n\t     o         y: (number) y coordinate of the top point\n\t     o     }\n\t     o     max: {\n\t     o         x: (number) x coordinate of the right point\n\t     o         y: (number) y coordinate of the bottom point\n\t     o     }\n\t     o }\n\t    \\*/\n\t    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\t        if (!R.is(p1x, \"array\")) {\n\t            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n\t        }\n\t        var bbox = curveDim.apply(null, p1x);\n\t        return {\n\t            x: bbox.min.x,\n\t            y: bbox.min.y,\n\t            x2: bbox.max.x,\n\t            y2: bbox.max.y,\n\t            width: bbox.max.x - bbox.min.x,\n\t            height: bbox.max.y - bbox.min.y\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.isPointInsideBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside bounding boxes.\n\t     > Parameters\n\t     - bbox (string) bounding box\n\t     - x (string) x coordinate of the point\n\t     - y (string) y coordinate of the point\n\t     = (boolean) `true` if point inside\n\t    \\*/\n\t    R.isPointInsideBBox = function (bbox, x, y) {\n\t        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\n\t    };\n\t    /*\\\n\t     * Raphael.isBBoxIntersect\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if two bounding boxes intersect\n\t     > Parameters\n\t     - bbox1 (string) first bounding box\n\t     - bbox2 (string) second bounding box\n\t     = (boolean) `true` if they intersect\n\t    \\*/\n\t    R.isBBoxIntersect = function (bbox1, bbox2) {\n\t        var i = R.isPointInsideBBox;\n\t        return i(bbox2, bbox1.x, bbox1.y)\n\t            || i(bbox2, bbox1.x2, bbox1.y)\n\t            || i(bbox2, bbox1.x, bbox1.y2)\n\t            || i(bbox2, bbox1.x2, bbox1.y2)\n\t            || i(bbox1, bbox2.x, bbox2.y)\n\t            || i(bbox1, bbox2.x2, bbox2.y)\n\t            || i(bbox1, bbox2.x, bbox2.y2)\n\t            || i(bbox1, bbox2.x2, bbox2.y2)\n\t            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n\t            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n\t    };\n\t    function base3(t, p1, p2, p3, p4) {\n\t        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n\t            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n\t        return t * t2 - 3 * p1 + 3 * p2;\n\t    }\n\t    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\t        if (z == null) {\n\t            z = 1;\n\t        }\n\t        z = z > 1 ? 1 : z < 0 ? 0 : z;\n\t        var z2 = z / 2,\n\t            n = 12,\n\t            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\n\t            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n\t            sum = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var ct = z2 * Tvalues[i] + z2,\n\t                xbase = base3(ct, x1, x2, x3, x4),\n\t                ybase = base3(ct, y1, y2, y3, y4),\n\t                comb = xbase * xbase + ybase * ybase;\n\t            sum += Cvalues[i] * math.sqrt(comb);\n\t        }\n\t        return z2 * sum;\n\t    }\n\t    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n\t        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n\t            return;\n\t        }\n\t        var t = 1,\n\t            step = t / 2,\n\t            t2 = t - step,\n\t            l,\n\t            e = .01;\n\t        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        while (abs(l - ll) > e) {\n\t            step /= 2;\n\t            t2 += (l < ll ? 1 : -1) * step;\n\t            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        }\n\t        return t2;\n\t    }\n\t    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n\t        if (\n\t            mmax(x1, x2) < mmin(x3, x4) ||\n\t            mmin(x1, x2) > mmax(x3, x4) ||\n\t            mmax(y1, y2) < mmin(y3, y4) ||\n\t            mmin(y1, y2) > mmax(y3, y4)\n\t        ) {\n\t            return;\n\t        }\n\t        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n\t            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n\t            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\t        if (!denominator) {\n\t            return;\n\t        }\n\t        var px = nx / denominator,\n\t            py = ny / denominator,\n\t            px2 = +px.toFixed(2),\n\t            py2 = +py.toFixed(2);\n\t        if (\n\t            px2 < +mmin(x1, x2).toFixed(2) ||\n\t            px2 > +mmax(x1, x2).toFixed(2) ||\n\t            px2 < +mmin(x3, x4).toFixed(2) ||\n\t            px2 > +mmax(x3, x4).toFixed(2) ||\n\t            py2 < +mmin(y1, y2).toFixed(2) ||\n\t            py2 > +mmax(y1, y2).toFixed(2) ||\n\t            py2 < +mmin(y3, y4).toFixed(2) ||\n\t            py2 > +mmax(y3, y4).toFixed(2)\n\t        ) {\n\t            return;\n\t        }\n\t        return {x: px, y: py};\n\t    }\n\t    function inter(bez1, bez2) {\n\t        return interHelper(bez1, bez2);\n\t    }\n\t    function interCount(bez1, bez2) {\n\t        return interHelper(bez1, bez2, 1);\n\t    }\n\t    function interHelper(bez1, bez2, justCount) {\n\t        var bbox1 = R.bezierBBox(bez1),\n\t            bbox2 = R.bezierBBox(bez2);\n\t        if (!R.isBBoxIntersect(bbox1, bbox2)) {\n\t            return justCount ? 0 : [];\n\t        }\n\t        var l1 = bezlen.apply(0, bez1),\n\t            l2 = bezlen.apply(0, bez2),\n\t            n1 = mmax(~~(l1 / 5), 1),\n\t            n2 = mmax(~~(l2 / 5), 1),\n\t            dots1 = [],\n\t            dots2 = [],\n\t            xy = {},\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0; i < n1 + 1; i++) {\n\t            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\n\t            dots1.push({x: p.x, y: p.y, t: i / n1});\n\t        }\n\t        for (i = 0; i < n2 + 1; i++) {\n\t            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\n\t            dots2.push({x: p.x, y: p.y, t: i / n2});\n\t        }\n\t        for (i = 0; i < n1; i++) {\n\t            for (var j = 0; j < n2; j++) {\n\t                var di = dots1[i],\n\t                    di1 = dots1[i + 1],\n\t                    dj = dots2[j],\n\t                    dj1 = dots2[j + 1],\n\t                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n\t                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n\t                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\t                if (is) {\n\t                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n\t                        continue;\n\t                    }\n\t                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n\t                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n\t                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\t                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\n\t                        if (justCount) {\n\t                            res++;\n\t                        } else {\n\t                            res.push({\n\t                                x: is.x,\n\t                                y: is.y,\n\t                                t1: mmin(t1, 1),\n\t                                t2: mmin(t2, 1)\n\t                            });\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    /*\\\n\t     * Raphael.pathIntersection\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Finds intersections of two paths\n\t     > Parameters\n\t     - path1 (string) path string\n\t     - path2 (string) path string\n\t     = (array) dots of intersection\n\t     o [\n\t     o     {\n\t     o         x: (number) x coordinate of the point\n\t     o         y: (number) y coordinate of the point\n\t     o         t1: (number) t value for segment of path1\n\t     o         t2: (number) t value for segment of path2\n\t     o         segment1: (number) order number for segment of path1\n\t     o         segment2: (number) order number for segment of path2\n\t     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\n\t     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n\t     o     }\n\t     o ]\n\t    \\*/\n\t    R.pathIntersection = function (path1, path2) {\n\t        return interPathHelper(path1, path2);\n\t    };\n\t    R.pathIntersectionNumber = function (path1, path2) {\n\t        return interPathHelper(path1, path2, 1);\n\t    };\n\t    function interPathHelper(path1, path2, justCount) {\n\t        path1 = R._path2curve(path1);\n\t        path2 = R._path2curve(path2);\n\t        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0, ii = path1.length; i < ii; i++) {\n\t            var pi = path1[i];\n\t            if (pi[0] == \"M\") {\n\t                x1 = x1m = pi[1];\n\t                y1 = y1m = pi[2];\n\t            } else {\n\t                if (pi[0] == \"C\") {\n\t                    bez1 = [x1, y1].concat(pi.slice(1));\n\t                    x1 = bez1[6];\n\t                    y1 = bez1[7];\n\t                } else {\n\t                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n\t                    x1 = x1m;\n\t                    y1 = y1m;\n\t                }\n\t                for (var j = 0, jj = path2.length; j < jj; j++) {\n\t                    var pj = path2[j];\n\t                    if (pj[0] == \"M\") {\n\t                        x2 = x2m = pj[1];\n\t                        y2 = y2m = pj[2];\n\t                    } else {\n\t                        if (pj[0] == \"C\") {\n\t                            bez2 = [x2, y2].concat(pj.slice(1));\n\t                            x2 = bez2[6];\n\t                            y2 = bez2[7];\n\t                        } else {\n\t                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n\t                            x2 = x2m;\n\t                            y2 = y2m;\n\t                        }\n\t                        var intr = interHelper(bez1, bez2, justCount);\n\t                        if (justCount) {\n\t                            res += intr;\n\t                        } else {\n\t                            for (var k = 0, kk = intr.length; k < kk; k++) {\n\t                                intr[k].segment1 = i;\n\t                                intr[k].segment2 = j;\n\t                                intr[k].bez1 = bez1;\n\t                                intr[k].bez2 = bez2;\n\t                            }\n\t                            res = res.concat(intr);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    /*\\\n\t     * Raphael.isPointInsidePath\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside a given closed path.\n\t     > Parameters\n\t     - path (string) path string\n\t     - x (number) x of the point\n\t     - y (number) y of the point\n\t     = (boolean) true, if point is inside the path\n\t    \\*/\n\t    R.isPointInsidePath = function (path, x, y) {\n\t        var bbox = R.pathBBox(path);\n\t        return R.isPointInsideBBox(bbox, x, y) &&\n\t               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n\t    };\n\t    R._removedFactory = function (methodname) {\n\t        return function () {\n\t            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.pathBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Return bounding box of a given path\n\t     > Parameters\n\t     - path (string) path string\n\t     = (object) bounding box\n\t     o {\n\t     o     x: (number) x coordinate of the left top point of the box\n\t     o     y: (number) y coordinate of the left top point of the box\n\t     o     x2: (number) x coordinate of the right bottom point of the box\n\t     o     y2: (number) y coordinate of the right bottom point of the box\n\t     o     width: (number) width of the box\n\t     o     height: (number) height of the box\n\t     o     cx: (number) x coordinate of the center of the box\n\t     o     cy: (number) y coordinate of the center of the box\n\t     o }\n\t    \\*/\n\t    var pathDimensions = R.pathBBox = function (path) {\n\t        var pth = paths(path);\n\t        if (pth.bbox) {\n\t            return clone(pth.bbox);\n\t        }\n\t        if (!path) {\n\t            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\n\t        }\n\t        path = path2curve(path);\n\t        var x = 0,\n\t            y = 0,\n\t            X = [],\n\t            Y = [],\n\t            p;\n\t        for (var i = 0, ii = path.length; i < ii; i++) {\n\t            p = path[i];\n\t            if (p[0] == \"M\") {\n\t                x = p[1];\n\t                y = p[2];\n\t                X.push(x);\n\t                Y.push(y);\n\t            } else {\n\t                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                X = X[concat](dim.min.x, dim.max.x);\n\t                Y = Y[concat](dim.min.y, dim.max.y);\n\t                x = p[5];\n\t                y = p[6];\n\t            }\n\t        }\n\t        var xmin = mmin[apply](0, X),\n\t            ymin = mmin[apply](0, Y),\n\t            xmax = mmax[apply](0, X),\n\t            ymax = mmax[apply](0, Y),\n\t            width = xmax - xmin,\n\t            height = ymax - ymin,\n\t                bb = {\n\t                x: xmin,\n\t                y: ymin,\n\t                x2: xmax,\n\t                y2: ymax,\n\t                width: width,\n\t                height: height,\n\t                cx: xmin + width / 2,\n\t                cy: ymin + height / 2\n\t            };\n\t        pth.bbox = clone(bb);\n\t        return bb;\n\t    },\n\t        pathClone = function (pathArray) {\n\t            var res = clone(pathArray);\n\t            res.toString = R._path2string;\n\t            return res;\n\t        },\n\t        pathToRelative = R._pathToRelative = function (pathArray) {\n\t            var pth = paths(pathArray);\n\t            if (pth.rel) {\n\t                return pathClone(pth.rel);\n\t            }\n\t            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n\t                pathArray = R.parsePathString(pathArray);\n\t            }\n\t            var res = [],\n\t                x = 0,\n\t                y = 0,\n\t                mx = 0,\n\t                my = 0,\n\t                start = 0;\n\t            if (pathArray[0][0] == \"M\") {\n\t                x = pathArray[0][1];\n\t                y = pathArray[0][2];\n\t                mx = x;\n\t                my = y;\n\t                start++;\n\t                res.push([\"M\", x, y]);\n\t            }\n\t            for (var i = start, ii = pathArray.length; i < ii; i++) {\n\t                var r = res[i] = [],\n\t                    pa = pathArray[i];\n\t                if (pa[0] != lowerCase.call(pa[0])) {\n\t                    r[0] = lowerCase.call(pa[0]);\n\t                    switch (r[0]) {\n\t                        case \"a\":\n\t                            r[1] = pa[1];\n\t                            r[2] = pa[2];\n\t                            r[3] = pa[3];\n\t                            r[4] = pa[4];\n\t                            r[5] = pa[5];\n\t                            r[6] = +(pa[6] - x).toFixed(3);\n\t                            r[7] = +(pa[7] - y).toFixed(3);\n\t                            break;\n\t                        case \"v\":\n\t                            r[1] = +(pa[1] - y).toFixed(3);\n\t                            break;\n\t                        case \"m\":\n\t                            mx = pa[1];\n\t                            my = pa[2];\n\t                        default:\n\t                            for (var j = 1, jj = pa.length; j < jj; j++) {\n\t                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n\t                            }\n\t                    }\n\t                } else {\n\t                    r = res[i] = [];\n\t                    if (pa[0] == \"m\") {\n\t                        mx = pa[1] + x;\n\t                        my = pa[2] + y;\n\t                    }\n\t                    for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                        res[i][k] = pa[k];\n\t                    }\n\t                }\n\t                var len = res[i].length;\n\t                switch (res[i][0]) {\n\t                    case \"z\":\n\t                        x = mx;\n\t                        y = my;\n\t                        break;\n\t                    case \"h\":\n\t                        x += +res[i][len - 1];\n\t                        break;\n\t                    case \"v\":\n\t                        y += +res[i][len - 1];\n\t                        break;\n\t                    default:\n\t                        x += +res[i][len - 2];\n\t                        y += +res[i][len - 1];\n\t                }\n\t            }\n\t            res.toString = R._path2string;\n\t            pth.rel = pathClone(res);\n\t            return res;\n\t        },\n\t        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\n\t            var pth = paths(pathArray);\n\t            if (pth.abs) {\n\t                return pathClone(pth.abs);\n\t            }\n\t            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n\t                pathArray = R.parsePathString(pathArray);\n\t            }\n\t            if (!pathArray || !pathArray.length) {\n\t                return [[\"M\", 0, 0]];\n\t            }\n\t            var res = [],\n\t                x = 0,\n\t                y = 0,\n\t                mx = 0,\n\t                my = 0,\n\t                start = 0;\n\t            if (pathArray[0][0] == \"M\") {\n\t                x = +pathArray[0][1];\n\t                y = +pathArray[0][2];\n\t                mx = x;\n\t                my = y;\n\t                start++;\n\t                res[0] = [\"M\", x, y];\n\t            }\n\t            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n\t            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n\t                res.push(r = []);\n\t                pa = pathArray[i];\n\t                if (pa[0] != upperCase.call(pa[0])) {\n\t                    r[0] = upperCase.call(pa[0]);\n\t                    switch (r[0]) {\n\t                        case \"A\":\n\t                            r[1] = pa[1];\n\t                            r[2] = pa[2];\n\t                            r[3] = pa[3];\n\t                            r[4] = pa[4];\n\t                            r[5] = pa[5];\n\t                            r[6] = +(pa[6] + x);\n\t                            r[7] = +(pa[7] + y);\n\t                            break;\n\t                        case \"V\":\n\t                            r[1] = +pa[1] + y;\n\t                            break;\n\t                        case \"H\":\n\t                            r[1] = +pa[1] + x;\n\t                            break;\n\t                        case \"R\":\n\t                            var dots = [x, y][concat](pa.slice(1));\n\t                            for (var j = 2, jj = dots.length; j < jj; j++) {\n\t                                dots[j] = +dots[j] + x;\n\t                                dots[++j] = +dots[j] + y;\n\t                            }\n\t                            res.pop();\n\t                            res = res[concat](catmullRom2bezier(dots, crz));\n\t                            break;\n\t                        case \"M\":\n\t                            mx = +pa[1] + x;\n\t                            my = +pa[2] + y;\n\t                        default:\n\t                            for (j = 1, jj = pa.length; j < jj; j++) {\n\t                                r[j] = +pa[j] + ((j % 2) ? x : y);\n\t                            }\n\t                    }\n\t                } else if (pa[0] == \"R\") {\n\t                    dots = [x, y][concat](pa.slice(1));\n\t                    res.pop();\n\t                    res = res[concat](catmullRom2bezier(dots, crz));\n\t                    r = [\"R\"][concat](pa.slice(-2));\n\t                } else {\n\t                    for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                        r[k] = pa[k];\n\t                    }\n\t                }\n\t                switch (r[0]) {\n\t                    case \"Z\":\n\t                        x = mx;\n\t                        y = my;\n\t                        break;\n\t                    case \"H\":\n\t                        x = r[1];\n\t                        break;\n\t                    case \"V\":\n\t                        y = r[1];\n\t                        break;\n\t                    case \"M\":\n\t                        mx = r[r.length - 2];\n\t                        my = r[r.length - 1];\n\t                    default:\n\t                        x = r[r.length - 2];\n\t                        y = r[r.length - 1];\n\t                }\n\t            }\n\t            res.toString = R._path2string;\n\t            pth.abs = pathClone(res);\n\t            return res;\n\t        },\n\t        l2c = function (x1, y1, x2, y2) {\n\t            return [x1, y1, x2, y2, x2, y2];\n\t        },\n\t        q2c = function (x1, y1, ax, ay, x2, y2) {\n\t            var _13 = 1 / 3,\n\t                _23 = 2 / 3;\n\t            return [\n\t                    _13 * x1 + _23 * ax,\n\t                    _13 * y1 + _23 * ay,\n\t                    _13 * x2 + _23 * ax,\n\t                    _13 * y2 + _23 * ay,\n\t                    x2,\n\t                    y2\n\t                ];\n\t        },\n\t        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\t            // for more information of where this math came from visit:\n\t            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n\t            var _120 = PI * 120 / 180,\n\t                rad = PI / 180 * (+angle || 0),\n\t                res = [],\n\t                xy,\n\t                rotate = cacher(function (x, y, rad) {\n\t                    var X = x * math.cos(rad) - y * math.sin(rad),\n\t                        Y = x * math.sin(rad) + y * math.cos(rad);\n\t                    return {x: X, y: Y};\n\t                });\n\t            if (!recursive) {\n\t                xy = rotate(x1, y1, -rad);\n\t                x1 = xy.x;\n\t                y1 = xy.y;\n\t                xy = rotate(x2, y2, -rad);\n\t                x2 = xy.x;\n\t                y2 = xy.y;\n\t                var cos = math.cos(PI / 180 * angle),\n\t                    sin = math.sin(PI / 180 * angle),\n\t                    x = (x1 - x2) / 2,\n\t                    y = (y1 - y2) / 2;\n\t                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\t                if (h > 1) {\n\t                    h = math.sqrt(h);\n\t                    rx = h * rx;\n\t                    ry = h * ry;\n\t                }\n\t                var rx2 = rx * rx,\n\t                    ry2 = ry * ry,\n\t                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\n\t                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n\t                    cx = k * rx * y / ry + (x1 + x2) / 2,\n\t                    cy = k * -ry * x / rx + (y1 + y2) / 2,\n\t                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n\t                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n\t                f1 = x1 < cx ? PI - f1 : f1;\n\t                f2 = x2 < cx ? PI - f2 : f2;\n\t                f1 < 0 && (f1 = PI * 2 + f1);\n\t                f2 < 0 && (f2 = PI * 2 + f2);\n\t                if (sweep_flag && f1 > f2) {\n\t                    f1 = f1 - PI * 2;\n\t                }\n\t                if (!sweep_flag && f2 > f1) {\n\t                    f2 = f2 - PI * 2;\n\t                }\n\t            } else {\n\t                f1 = recursive[0];\n\t                f2 = recursive[1];\n\t                cx = recursive[2];\n\t                cy = recursive[3];\n\t            }\n\t            var df = f2 - f1;\n\t            if (abs(df) > _120) {\n\t                var f2old = f2,\n\t                    x2old = x2,\n\t                    y2old = y2;\n\t                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n\t                x2 = cx + rx * math.cos(f2);\n\t                y2 = cy + ry * math.sin(f2);\n\t                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n\t            }\n\t            df = f2 - f1;\n\t            var c1 = math.cos(f1),\n\t                s1 = math.sin(f1),\n\t                c2 = math.cos(f2),\n\t                s2 = math.sin(f2),\n\t                t = math.tan(df / 4),\n\t                hx = 4 / 3 * rx * t,\n\t                hy = 4 / 3 * ry * t,\n\t                m1 = [x1, y1],\n\t                m2 = [x1 + hx * s1, y1 - hy * c1],\n\t                m3 = [x2 + hx * s2, y2 - hy * c2],\n\t                m4 = [x2, y2];\n\t            m2[0] = 2 * m1[0] - m2[0];\n\t            m2[1] = 2 * m1[1] - m2[1];\n\t            if (recursive) {\n\t                return [m2, m3, m4][concat](res);\n\t            } else {\n\t                res = [m2, m3, m4][concat](res).join()[split](\",\");\n\t                var newres = [];\n\t                for (var i = 0, ii = res.length; i < ii; i++) {\n\t                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n\t                }\n\t                return newres;\n\t            }\n\t        },\n\t        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t            var t1 = 1 - t;\n\t            return {\n\t                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n\t                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n\t            };\n\t        },\n\t        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\t            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\n\t                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\n\t                c = p1x - c1x,\n\t                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\n\t                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\n\t                y = [p1y, p2y],\n\t                x = [p1x, p2x],\n\t                dot;\n\t            abs(t1) > \"1e12\" && (t1 = .5);\n\t            abs(t2) > \"1e12\" && (t2 = .5);\n\t            if (t1 > 0 && t1 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            if (t2 > 0 && t2 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\n\t            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\n\t            c = p1y - c1y;\n\t            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\n\t            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\n\t            abs(t1) > \"1e12\" && (t1 = .5);\n\t            abs(t2) > \"1e12\" && (t2 = .5);\n\t            if (t1 > 0 && t1 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            if (t2 > 0 && t2 < 1) {\n\t                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n\t                x.push(dot.x);\n\t                y.push(dot.y);\n\t            }\n\t            return {\n\t                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\n\t                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\n\t            };\n\t        }),\n\t        path2curve = R._path2curve = cacher(function (path, path2) {\n\t            var pth = !path2 && paths(path);\n\t            if (!path2 && pth.curve) {\n\t                return pathClone(pth.curve);\n\t            }\n\t            var p = pathToAbsolute(path),\n\t                p2 = path2 && pathToAbsolute(path2),\n\t                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t                processPath = function (path, d, pcom) {\n\t                    var nx, ny, tq = {T:1, Q:1};\n\t                    if (!path) {\n\t                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n\t                    }\n\t                    !(path[0] in tq) && (d.qx = d.qy = null);\n\t                    switch (path[0]) {\n\t                        case \"M\":\n\t                            d.X = path[1];\n\t                            d.Y = path[2];\n\t                            break;\n\t                        case \"A\":\n\t                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\n\t                            break;\n\t                        case \"S\":\n\t                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n\t                                nx = d.x * 2 - d.bx;          // And reflect the previous\n\t                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n\t                            }\n\t                            else {                            // or some else or nothing\n\t                                nx = d.x;\n\t                                ny = d.y;\n\t                            }\n\t                            path = [\"C\", nx, ny][concat](path.slice(1));\n\t                            break;\n\t                        case \"T\":\n\t                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n\t                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n\t                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\n\t                            }\n\t                            else {                            // or something else or nothing\n\t                                d.qx = d.x;\n\t                                d.qy = d.y;\n\t                            }\n\t                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n\t                            break;\n\t                        case \"Q\":\n\t                            d.qx = path[1];\n\t                            d.qy = path[2];\n\t                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n\t                            break;\n\t                        case \"L\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\n\t                            break;\n\t                        case \"H\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\n\t                            break;\n\t                        case \"V\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\n\t                            break;\n\t                        case \"Z\":\n\t                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\n\t                            break;\n\t                    }\n\t                    return path;\n\t                },\n\t                fixArc = function (pp, i) {\n\t                    if (pp[i].length > 7) {\n\t                        pp[i].shift();\n\t                        var pi = pp[i];\n\t                        while (pi.length) {\n\t                            pcoms1[i]=\"A\"; // if created multiple C:s, their original seg is saved\n\t                            p2 && (pcoms2[i]=\"A\"); // the same as above\n\t                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\n\t                        }\n\t                        pp.splice(i, 1);\n\t                        ii = mmax(p.length, p2 && p2.length || 0);\n\t                    }\n\t                },\n\t                fixM = function (path1, path2, a1, a2, i) {\n\t                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n\t                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n\t                        a1.bx = 0;\n\t                        a1.by = 0;\n\t                        a1.x = path1[i][1];\n\t                        a1.y = path1[i][2];\n\t                        ii = mmax(p.length, p2 && p2.length || 0);\n\t                    }\n\t                },\n\t                pcoms1 = [], // path commands of original path p\n\t                pcoms2 = [], // path commands of original path p2\n\t                pfirst = \"\", // temporary holder for original path command\n\t                pcom = \"\"; // holder for previous path command of original path\n\t            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n\t                p[i] && (pfirst = p[i][0]); // save current path command\n\n\t                if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n\t                {\n\t                    pcoms1[i] = pfirst; // Save current path command\n\t                    i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\n\t                }\n\t                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n\t                if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n\t                // which may produce multiple C:s\n\t                // so we have to make sure that C is also C in original path\n\n\t                fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n\t                if (p2) { // the same procedures is done to p2\n\t                    p2[i] && (pfirst = p2[i][0]);\n\t                    if (pfirst != \"C\")\n\t                    {\n\t                        pcoms2[i] = pfirst;\n\t                        i && (pcom = pcoms2[i-1]);\n\t                    }\n\t                    p2[i] = processPath(p2[i], attrs2, pcom);\n\n\t                    if (pcoms2[i]!=\"A\" && pfirst==\"C\") pcoms2[i]=\"C\";\n\n\t                    fixArc(p2, i);\n\t                }\n\t                fixM(p, p2, attrs, attrs2, i);\n\t                fixM(p2, p, attrs2, attrs, i);\n\t                var seg = p[i],\n\t                    seg2 = p2 && p2[i],\n\t                    seglen = seg.length,\n\t                    seg2len = p2 && seg2.length;\n\t                attrs.x = seg[seglen - 2];\n\t                attrs.y = seg[seglen - 1];\n\t                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n\t                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n\t                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n\t                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n\t                attrs2.x = p2 && seg2[seg2len - 2];\n\t                attrs2.y = p2 && seg2[seg2len - 1];\n\t            }\n\t            if (!p2) {\n\t                pth.curve = pathClone(p);\n\t            }\n\t            return p2 ? [p, p2] : p;\n\t        }, null, pathClone),\n\t        parseDots = R._parseDots = cacher(function (gradient) {\n\t            var dots = [];\n\t            for (var i = 0, ii = gradient.length; i < ii; i++) {\n\t                var dot = {},\n\t                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\n\t                dot.color = R.getRGB(par[1]);\n\t                if (dot.color.error) {\n\t                    return null;\n\t                }\n\t                dot.opacity = dot.color.opacity;\n\t                dot.color = dot.color.hex;\n\t                par[2] && (dot.offset = par[2] + \"%\");\n\t                dots.push(dot);\n\t            }\n\t            for (i = 1, ii = dots.length - 1; i < ii; i++) {\n\t                if (!dots[i].offset) {\n\t                    var start = toFloat(dots[i - 1].offset || 0),\n\t                        end = 0;\n\t                    for (var j = i + 1; j < ii; j++) {\n\t                        if (dots[j].offset) {\n\t                            end = dots[j].offset;\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!end) {\n\t                        end = 100;\n\t                        j = ii;\n\t                    }\n\t                    end = toFloat(end);\n\t                    var d = (end - start) / (j - i + 1);\n\t                    for (; i < j; i++) {\n\t                        start += d;\n\t                        dots[i].offset = start + \"%\";\n\t                    }\n\t                }\n\t            }\n\t            return dots;\n\t        }),\n\t        tear = R._tear = function (el, paper) {\n\t            el == paper.top && (paper.top = el.prev);\n\t            el == paper.bottom && (paper.bottom = el.next);\n\t            el.next && (el.next.prev = el.prev);\n\t            el.prev && (el.prev.next = el.next);\n\t        },\n\t        tofront = R._tofront = function (el, paper) {\n\t            if (paper.top === el) {\n\t                return;\n\t            }\n\t            tear(el, paper);\n\t            el.next = null;\n\t            el.prev = paper.top;\n\t            paper.top.next = el;\n\t            paper.top = el;\n\t        },\n\t        toback = R._toback = function (el, paper) {\n\t            if (paper.bottom === el) {\n\t                return;\n\t            }\n\t            tear(el, paper);\n\t            el.next = paper.bottom;\n\t            el.prev = null;\n\t            paper.bottom.prev = el;\n\t            paper.bottom = el;\n\t        },\n\t        insertafter = R._insertafter = function (el, el2, paper) {\n\t            tear(el, paper);\n\t            el2 == paper.top && (paper.top = el);\n\t            el2.next && (el2.next.prev = el);\n\t            el.next = el2.next;\n\t            el.prev = el2;\n\t            el2.next = el;\n\t        },\n\t        insertbefore = R._insertbefore = function (el, el2, paper) {\n\t            tear(el, paper);\n\t            el2 == paper.bottom && (paper.bottom = el);\n\t            el2.prev && (el2.prev.next = el);\n\t            el.prev = el2.prev;\n\t            el2.prev = el;\n\t            el.next = el2;\n\t        },\n\t        /*\\\n\t         * Raphael.toMatrix\n\t         [ method ]\n\t         **\n\t         * Utility method\n\t         **\n\t         * Returns matrix of transformations applied to a given path\n\t         > Parameters\n\t         - path (string) path string\n\t         - transform (string|array) transformation string\n\t         = (object) @Matrix\n\t        \\*/\n\t        toMatrix = R.toMatrix = function (path, transform) {\n\t            var bb = pathDimensions(path),\n\t                el = {\n\t                    _: {\n\t                        transform: E\n\t                    },\n\t                    getBBox: function () {\n\t                        return bb;\n\t                    }\n\t                };\n\t            extractTransform(el, transform);\n\t            return el.matrix;\n\t        },\n\t        /*\\\n\t         * Raphael.transformPath\n\t         [ method ]\n\t         **\n\t         * Utility method\n\t         **\n\t         * Returns path transformed by a given transformation\n\t         > Parameters\n\t         - path (string) path string\n\t         - transform (string|array) transformation string\n\t         = (string) path\n\t        \\*/\n\t        transformPath = R.transformPath = function (path, transform) {\n\t            return mapPath(path, toMatrix(path, transform));\n\t        },\n\t        extractTransform = R._extractTransform = function (el, tstr) {\n\t            if (tstr == null) {\n\t                return el._.transform;\n\t            }\n\t            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n\t            var tdata = R.parseTransformString(tstr),\n\t                deg = 0,\n\t                dx = 0,\n\t                dy = 0,\n\t                sx = 1,\n\t                sy = 1,\n\t                _ = el._,\n\t                m = new Matrix;\n\t            _.transform = tdata || [];\n\t            if (tdata) {\n\t                for (var i = 0, ii = tdata.length; i < ii; i++) {\n\t                    var t = tdata[i],\n\t                        tlen = t.length,\n\t                        command = Str(t[0]).toLowerCase(),\n\t                        absolute = t[0] != command,\n\t                        inver = absolute ? m.invert() : 0,\n\t                        x1,\n\t                        y1,\n\t                        x2,\n\t                        y2,\n\t                        bb;\n\t                    if (command == \"t\" && tlen == 3) {\n\t                        if (absolute) {\n\t                            x1 = inver.x(0, 0);\n\t                            y1 = inver.y(0, 0);\n\t                            x2 = inver.x(t[1], t[2]);\n\t                            y2 = inver.y(t[1], t[2]);\n\t                            m.translate(x2 - x1, y2 - y1);\n\t                        } else {\n\t                            m.translate(t[1], t[2]);\n\t                        }\n\t                    } else if (command == \"r\") {\n\t                        if (tlen == 2) {\n\t                            bb = bb || el.getBBox(1);\n\t                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                            deg += t[1];\n\t                        } else if (tlen == 4) {\n\t                            if (absolute) {\n\t                                x2 = inver.x(t[2], t[3]);\n\t                                y2 = inver.y(t[2], t[3]);\n\t                                m.rotate(t[1], x2, y2);\n\t                            } else {\n\t                                m.rotate(t[1], t[2], t[3]);\n\t                            }\n\t                            deg += t[1];\n\t                        }\n\t                    } else if (command == \"s\") {\n\t                        if (tlen == 2 || tlen == 3) {\n\t                            bb = bb || el.getBBox(1);\n\t                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                            sx *= t[1];\n\t                            sy *= t[tlen - 1];\n\t                        } else if (tlen == 5) {\n\t                            if (absolute) {\n\t                                x2 = inver.x(t[3], t[4]);\n\t                                y2 = inver.y(t[3], t[4]);\n\t                                m.scale(t[1], t[2], x2, y2);\n\t                            } else {\n\t                                m.scale(t[1], t[2], t[3], t[4]);\n\t                            }\n\t                            sx *= t[1];\n\t                            sy *= t[2];\n\t                        }\n\t                    } else if (command == \"m\" && tlen == 7) {\n\t                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n\t                    }\n\t                    _.dirtyT = 1;\n\t                    el.matrix = m;\n\t                }\n\t            }\n\n\t            /*\\\n\t             * Element.matrix\n\t             [ property (object) ]\n\t             **\n\t             * Keeps @Matrix object, which represents element transformation\n\t            \\*/\n\t            el.matrix = m;\n\n\t            _.sx = sx;\n\t            _.sy = sy;\n\t            _.deg = deg;\n\t            _.dx = dx = m.e;\n\t            _.dy = dy = m.f;\n\n\t            if (sx == 1 && sy == 1 && !deg && _.bbox) {\n\t                _.bbox.x += +dx;\n\t                _.bbox.y += +dy;\n\t            } else {\n\t                _.dirtyT = 1;\n\t            }\n\t        },\n\t        getEmpty = function (item) {\n\t            var l = item[0];\n\t            switch (l.toLowerCase()) {\n\t                case \"t\": return [l, 0, 0];\n\t                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n\t                case \"r\": if (item.length == 4) {\n\t                    return [l, 0, item[2], item[3]];\n\t                } else {\n\t                    return [l, 0];\n\t                }\n\t                case \"s\": if (item.length == 5) {\n\t                    return [l, 1, 1, item[3], item[4]];\n\t                } else if (item.length == 3) {\n\t                    return [l, 1, 1];\n\t                } else {\n\t                    return [l, 1];\n\t                }\n\t            }\n\t        },\n\t        equaliseTransform = R._equaliseTransform = function (t1, t2) {\n\t            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n\t            t1 = R.parseTransformString(t1) || [];\n\t            t2 = R.parseTransformString(t2) || [];\n\t            var maxlength = mmax(t1.length, t2.length),\n\t                from = [],\n\t                to = [],\n\t                i = 0, j, jj,\n\t                tt1, tt2;\n\t            for (; i < maxlength; i++) {\n\t                tt1 = t1[i] || getEmpty(t2[i]);\n\t                tt2 = t2[i] || getEmpty(tt1);\n\t                if ((tt1[0] != tt2[0]) ||\n\t                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n\t                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n\t                    ) {\n\t                    return;\n\t                }\n\t                from[i] = [];\n\t                to[i] = [];\n\t                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\n\t                    j in tt1 && (from[i][j] = tt1[j]);\n\t                    j in tt2 && (to[i][j] = tt2[j]);\n\t                }\n\t            }\n\t            return {\n\t                from: from,\n\t                to: to\n\t            };\n\t        };\n\t    R._getContainer = function (x, y, w, h) {\n\t        var container;\n\t        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\n\t        if (container == null) {\n\t            return;\n\t        }\n\t        if (container.tagName) {\n\t            if (y == null) {\n\t                return {\n\t                    container: container,\n\t                    width: container.style.pixelWidth || container.offsetWidth,\n\t                    height: container.style.pixelHeight || container.offsetHeight\n\t                };\n\t            } else {\n\t                return {\n\t                    container: container,\n\t                    width: y,\n\t                    height: w\n\t                };\n\t            }\n\t        }\n\t        return {\n\t            container: 1,\n\t            x: x,\n\t            y: y,\n\t            width: w,\n\t            height: h\n\t        };\n\t    };\n\t    /*\\\n\t     * Raphael.pathToRelative\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path to relative form\n\t     > Parameters\n\t     - pathString (string|array) path string or array of segments\n\t     = (array) array of segments.\n\t    \\*/\n\t    R.pathToRelative = pathToRelative;\n\t    R._engine = {};\n\t    /*\\\n\t     * Raphael.path2curve\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path to a new path where all segments are cubic bezier curves.\n\t     > Parameters\n\t     - pathString (string|array) path string or array of segments\n\t     = (array) array of segments.\n\t    \\*/\n\t    R.path2curve = path2curve;\n\t    /*\\\n\t     * Raphael.matrix\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns matrix based on given parameters.\n\t     > Parameters\n\t     - a (number)\n\t     - b (number)\n\t     - c (number)\n\t     - d (number)\n\t     - e (number)\n\t     - f (number)\n\t     = (object) @Matrix\n\t    \\*/\n\t    R.matrix = function (a, b, c, d, e, f) {\n\t        return new Matrix(a, b, c, d, e, f);\n\t    };\n\t    function Matrix(a, b, c, d, e, f) {\n\t        if (a != null) {\n\t            this.a = +a;\n\t            this.b = +b;\n\t            this.c = +c;\n\t            this.d = +d;\n\t            this.e = +e;\n\t            this.f = +f;\n\t        } else {\n\t            this.a = 1;\n\t            this.b = 0;\n\t            this.c = 0;\n\t            this.d = 1;\n\t            this.e = 0;\n\t            this.f = 0;\n\t        }\n\t    }\n\t    (function (matrixproto) {\n\t        /*\\\n\t         * Matrix.add\n\t         [ method ]\n\t         **\n\t         * Adds given matrix to existing one.\n\t         > Parameters\n\t         - a (number)\n\t         - b (number)\n\t         - c (number)\n\t         - d (number)\n\t         - e (number)\n\t         - f (number)\n\t         or\n\t         - matrix (object) @Matrix\n\t        \\*/\n\t        matrixproto.add = function (a, b, c, d, e, f) {\n\t            var out = [[], [], []],\n\t                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n\t                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n\t                x, y, z, res;\n\n\t            if (a && a instanceof Matrix) {\n\t                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n\t            }\n\n\t            for (x = 0; x < 3; x++) {\n\t                for (y = 0; y < 3; y++) {\n\t                    res = 0;\n\t                    for (z = 0; z < 3; z++) {\n\t                        res += m[x][z] * matrix[z][y];\n\t                    }\n\t                    out[x][y] = res;\n\t                }\n\t            }\n\t            this.a = out[0][0];\n\t            this.b = out[1][0];\n\t            this.c = out[0][1];\n\t            this.d = out[1][1];\n\t            this.e = out[0][2];\n\t            this.f = out[1][2];\n\t        };\n\t        /*\\\n\t         * Matrix.invert\n\t         [ method ]\n\t         **\n\t         * Returns inverted version of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.invert = function () {\n\t            var me = this,\n\t                x = me.a * me.d - me.b * me.c;\n\t            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n\t        };\n\t        /*\\\n\t         * Matrix.clone\n\t         [ method ]\n\t         **\n\t         * Returns copy of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.clone = function () {\n\t            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n\t        };\n\t        /*\\\n\t         * Matrix.translate\n\t         [ method ]\n\t         **\n\t         * Translate the matrix\n\t         > Parameters\n\t         - x (number)\n\t         - y (number)\n\t        \\*/\n\t        matrixproto.translate = function (x, y) {\n\t            this.add(1, 0, 0, 1, x, y);\n\t        };\n\t        /*\\\n\t         * Matrix.scale\n\t         [ method ]\n\t         **\n\t         * Scales the matrix\n\t         > Parameters\n\t         - x (number)\n\t         - y (number) #optional\n\t         - cx (number) #optional\n\t         - cy (number) #optional\n\t        \\*/\n\t        matrixproto.scale = function (x, y, cx, cy) {\n\t            y == null && (y = x);\n\t            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n\t            this.add(x, 0, 0, y, 0, 0);\n\t            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n\t        };\n\t        /*\\\n\t         * Matrix.rotate\n\t         [ method ]\n\t         **\n\t         * Rotates the matrix\n\t         > Parameters\n\t         - a (number)\n\t         - x (number)\n\t         - y (number)\n\t        \\*/\n\t        matrixproto.rotate = function (a, x, y) {\n\t            a = R.rad(a);\n\t            x = x || 0;\n\t            y = y || 0;\n\t            var cos = +math.cos(a).toFixed(9),\n\t                sin = +math.sin(a).toFixed(9);\n\t            this.add(cos, sin, -sin, cos, x, y);\n\t            this.add(1, 0, 0, 1, -x, -y);\n\t        };\n\t        /*\\\n\t         * Matrix.x\n\t         [ method ]\n\t         **\n\t         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n\t         > Parameters\n\t         - x (number)\n\t         - y (number)\n\t         = (number) x\n\t        \\*/\n\t        matrixproto.x = function (x, y) {\n\t            return x * this.a + y * this.c + this.e;\n\t        };\n\t        /*\\\n\t         * Matrix.y\n\t         [ method ]\n\t         **\n\t         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n\t         > Parameters\n\t         - x (number)\n\t         - y (number)\n\t         = (number) y\n\t        \\*/\n\t        matrixproto.y = function (x, y) {\n\t            return x * this.b + y * this.d + this.f;\n\t        };\n\t        matrixproto.get = function (i) {\n\t            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n\t        };\n\t        matrixproto.toString = function () {\n\t            return R.svg ?\n\t                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\n\t                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\n\t        };\n\t        matrixproto.toFilter = function () {\n\t            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\n\t                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\n\t                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\n\t        };\n\t        matrixproto.offset = function () {\n\t            return [this.e.toFixed(4), this.f.toFixed(4)];\n\t        };\n\t        function norm(a) {\n\t            return a[0] * a[0] + a[1] * a[1];\n\t        }\n\t        function normalize(a) {\n\t            var mag = math.sqrt(norm(a));\n\t            a[0] && (a[0] /= mag);\n\t            a[1] && (a[1] /= mag);\n\t        }\n\t        /*\\\n\t         * Matrix.split\n\t         [ method ]\n\t         **\n\t         * Splits matrix into primitive transformations\n\t         = (object) in format:\n\t         o dx (number) translation by x\n\t         o dy (number) translation by y\n\t         o scalex (number) scale by x\n\t         o scaley (number) scale by y\n\t         o shear (number) shear\n\t         o rotate (number) rotation in deg\n\t         o isSimple (boolean) could it be represented via simple transformations\n\t        \\*/\n\t        matrixproto.split = function () {\n\t            var out = {};\n\t            // translation\n\t            out.dx = this.e;\n\t            out.dy = this.f;\n\n\t            // scale and shear\n\t            var row = [[this.a, this.c], [this.b, this.d]];\n\t            out.scalex = math.sqrt(norm(row[0]));\n\t            normalize(row[0]);\n\n\t            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n\t            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n\t            out.scaley = math.sqrt(norm(row[1]));\n\t            normalize(row[1]);\n\t            out.shear /= out.scaley;\n\n\t            // rotation\n\t            var sin = -row[0][1],\n\t                cos = row[1][1];\n\t            if (cos < 0) {\n\t                out.rotate = R.deg(math.acos(cos));\n\t                if (sin < 0) {\n\t                    out.rotate = 360 - out.rotate;\n\t                }\n\t            } else {\n\t                out.rotate = R.deg(math.asin(sin));\n\t            }\n\n\t            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n\t            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n\t            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n\t            return out;\n\t        };\n\t        /*\\\n\t         * Matrix.toTransformString\n\t         [ method ]\n\t         **\n\t         * Return transform string that represents given matrix\n\t         = (string) transform string\n\t        \\*/\n\t        matrixproto.toTransformString = function (shorter) {\n\t            var s = shorter || this[split]();\n\t            if (s.isSimple) {\n\t                s.scalex = +s.scalex.toFixed(4);\n\t                s.scaley = +s.scaley.toFixed(4);\n\t                s.rotate = +s.rotate.toFixed(4);\n\t                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\n\t                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n\t                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\n\t            } else {\n\t                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n\t            }\n\t        };\n\t    })(Matrix.prototype);\n\n\t    var preventDefault = function () {\n\t        this.returnValue = false;\n\t    },\n\t    preventTouch = function () {\n\t        return this.originalEvent.preventDefault();\n\t    },\n\t    stopPropagation = function () {\n\t        this.cancelBubble = true;\n\t    },\n\t    stopTouch = function () {\n\t        return this.originalEvent.stopPropagation();\n\t    },\n\t    getEventPosition = function (e) {\n\t        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n\n\t        return {\n\t            x: e.clientX + scrollX,\n\t            y: e.clientY + scrollY\n\t        };\n\t    },\n\t    addEvent = (function () {\n\t        if (g.doc.addEventListener) {\n\t            return function (obj, type, fn, element) {\n\t                var f = function (e) {\n\t                    var pos = getEventPosition(e);\n\t                    return fn.call(element, e, pos.x, pos.y);\n\t                };\n\t                obj.addEventListener(type, f, false);\n\n\t                if (supportsTouch && touchMap[type]) {\n\t                    var _f = function (e) {\n\t                        var pos = getEventPosition(e),\n\t                            olde = e;\n\n\t                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n\t                            if (e.targetTouches[i].target == obj) {\n\t                                e = e.targetTouches[i];\n\t                                e.originalEvent = olde;\n\t                                e.preventDefault = preventTouch;\n\t                                e.stopPropagation = stopTouch;\n\t                                break;\n\t                            }\n\t                        }\n\n\t                        return fn.call(element, e, pos.x, pos.y);\n\t                    };\n\t                    obj.addEventListener(touchMap[type], _f, false);\n\t                }\n\n\t                return function () {\n\t                    obj.removeEventListener(type, f, false);\n\n\t                    if (supportsTouch && touchMap[type])\n\t                        obj.removeEventListener(touchMap[type], _f, false);\n\n\t                    return true;\n\t                };\n\t            };\n\t        } else if (g.doc.attachEvent) {\n\t            return function (obj, type, fn, element) {\n\t                var f = function (e) {\n\t                    e = e || g.win.event;\n\t                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n\t                        x = e.clientX + scrollX,\n\t                        y = e.clientY + scrollY;\n\t                    e.preventDefault = e.preventDefault || preventDefault;\n\t                    e.stopPropagation = e.stopPropagation || stopPropagation;\n\t                    return fn.call(element, e, x, y);\n\t                };\n\t                obj.attachEvent(\"on\" + type, f);\n\t                var detacher = function () {\n\t                    obj.detachEvent(\"on\" + type, f);\n\t                    return true;\n\t                };\n\t                return detacher;\n\t            };\n\t        }\n\t    })(),\n\t    drag = [],\n\t    dragMove = function (e) {\n\t        var x = e.clientX,\n\t            y = e.clientY,\n\t            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n\t            dragi,\n\t            j = drag.length;\n\t        while (j--) {\n\t            dragi = drag[j];\n\t            if (supportsTouch && e.touches) {\n\t                var i = e.touches.length,\n\t                    touch;\n\t                while (i--) {\n\t                    touch = e.touches[i];\n\t                    if (touch.identifier == dragi.el._drag.id) {\n\t                        x = touch.clientX;\n\t                        y = touch.clientY;\n\t                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n\t                        break;\n\t                    }\n\t                }\n\t            } else {\n\t                e.preventDefault();\n\t            }\n\t            var node = dragi.el.node,\n\t                o,\n\t                next = node.nextSibling,\n\t                parent = node.parentNode,\n\t                display = node.style.display;\n\t            g.win.opera && parent.removeChild(node);\n\t            node.style.display = \"none\";\n\t            o = dragi.el.paper.getElementByPoint(x, y);\n\t            node.style.display = display;\n\t            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n\t            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\n\t            x += scrollX;\n\t            y += scrollY;\n\t            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n\t        }\n\t    },\n\t    dragUp = function (e) {\n\t        R.unmousemove(dragMove).unmouseup(dragUp);\n\t        var i = drag.length,\n\t            dragi;\n\t        while (i--) {\n\t            dragi = drag[i];\n\t            dragi.el._drag = {};\n\t            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n\t        }\n\t        drag = [];\n\t    },\n\t    /*\\\n\t     * Raphael.el\n\t     [ property (object) ]\n\t     **\n\t     * You can add your own method to elements. This is useful when you want to hack default functionality or\n\t     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\n\t     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\n\t     > Usage\n\t     | Raphael.el.red = function () {\n\t     |     this.attr({fill: \"#f00\"});\n\t     | };\n\t     | // then use it\n\t     | paper.circle(100, 100, 20).red();\n\t    \\*/\n\t    elproto = R.el = {};\n\t    /*\\\n\t     * Element.click\n\t     [ method ]\n\t     **\n\t     * Adds event handler for click for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unclick\n\t     [ method ]\n\t     **\n\t     * Removes event handler for click for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.dblclick\n\t     [ method ]\n\t     **\n\t     * Adds event handler for double click for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.undblclick\n\t     [ method ]\n\t     **\n\t     * Removes event handler for double click for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mousedown\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mousedown for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousedown\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mousedown for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mousemove\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mousemove for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousemove\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mousemove for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mouseout\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mouseout for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseout\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mouseout for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mouseover\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mouseover for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseover\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mouseover for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.mouseup\n\t     [ method ]\n\t     **\n\t     * Adds event handler for mouseup for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseup\n\t     [ method ]\n\t     **\n\t     * Removes event handler for mouseup for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchstart\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchstart for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchstart\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchstart for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchmove\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchmove for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchmove\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchmove for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchend\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchend for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchend\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchend for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\n\t    /*\\\n\t     * Element.touchcancel\n\t     [ method ]\n\t     **\n\t     * Adds event handler for touchcancel for the element.\n\t     > Parameters\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchcancel\n\t     [ method ]\n\t     **\n\t     * Removes event handler for touchcancel for the element.\n\t     > Parameters\n\t     - handler (function) #optional handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    for (var i = events.length; i--;) {\n\t        (function (eventName) {\n\t            R[eventName] = elproto[eventName] = function (fn, scope) {\n\t                if (R.is(fn, \"function\")) {\n\t                    this.events = this.events || [];\n\t                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\n\t                }\n\t                return this;\n\t            };\n\t            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n\t                var events = this.events || [],\n\t                    l = events.length;\n\t                while (l--){\n\t                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\n\t                        events[l].unbind();\n\t                        events.splice(l, 1);\n\t                        !events.length && delete this.events;\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t        })(events[i]);\n\t    }\n\n\t    /*\\\n\t     * Element.data\n\t     [ method ]\n\t     **\n\t     * Adds or retrieves given value associated with given key.\n\t     **\n\t     * See also @Element.removeData\n\t     > Parameters\n\t     - key (string) key to store data\n\t     - value (any) #optional value to store\n\t     = (object) @Element\n\t     * or, if value is not specified:\n\t     = (any) value\n\t     * or, if key and value are not specified:\n\t     = (object) Key/value pairs for all the data associated with the element.\n\t     > Usage\n\t     | for (var i = 0, i < 5, i++) {\n\t     |     paper.circle(10 + 15 * i, 10, 10)\n\t     |          .attr({fill: \"#000\"})\n\t     |          .data(\"i\", i)\n\t     |          .click(function () {\n\t     |             alert(this.data(\"i\"));\n\t     |          });\n\t     | }\n\t    \\*/\n\t    elproto.data = function (key, value) {\n\t        var data = eldata[this.id] = eldata[this.id] || {};\n\t        if (arguments.length == 0) {\n\t            return data;\n\t        }\n\t        if (arguments.length == 1) {\n\t            if (R.is(key, \"object\")) {\n\t                for (var i in key) if (key[has](i)) {\n\t                    this.data(i, key[i]);\n\t                }\n\t                return this;\n\t            }\n\t            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\n\t            return data[key];\n\t        }\n\t        data[key] = value;\n\t        eve(\"raphael.data.set.\" + this.id, this, value, key);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.removeData\n\t     [ method ]\n\t     **\n\t     * Removes value associated with an element by given key.\n\t     * If key is not provided, removes all the data of the element.\n\t     > Parameters\n\t     - key (string) #optional key\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.removeData = function (key) {\n\t        if (key == null) {\n\t            eldata[this.id] = {};\n\t        } else {\n\t            eldata[this.id] && delete eldata[this.id][key];\n\t        }\n\t        return this;\n\t    };\n\t     /*\\\n\t     * Element.getData\n\t     [ method ]\n\t     **\n\t     * Retrieves the element data\n\t     = (object) data\n\t    \\*/\n\t    elproto.getData = function () {\n\t        return clone(eldata[this.id] || {});\n\t    };\n\t    /*\\\n\t     * Element.hover\n\t     [ method ]\n\t     **\n\t     * Adds event handlers for hover for the element.\n\t     > Parameters\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     - icontext (object) #optional context for hover in handler\n\t     - ocontext (object) #optional context for hover out handler\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n\t        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n\t    };\n\t    /*\\\n\t     * Element.unhover\n\t     [ method ]\n\t     **\n\t     * Removes event handlers for hover for the element.\n\t     > Parameters\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.unhover = function (f_in, f_out) {\n\t        return this.unmouseover(f_in).unmouseout(f_out);\n\t    };\n\t    var draggable = [];\n\t    /*\\\n\t     * Element.drag\n\t     [ method ]\n\t     **\n\t     * Adds event handlers for drag of the element.\n\t     > Parameters\n\t     - onmove (function) handler for moving\n\t     - onstart (function) handler for drag start\n\t     - onend (function) handler for drag end\n\t     - mcontext (object) #optional context for moving handler\n\t     - scontext (object) #optional context for drag start handler\n\t     - econtext (object) #optional context for drag end handler\n\t     * Additionally following `drag` events will be triggered: `drag.start.<id>` on start,\n\t     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\n\t     * `drag.over.<id>` will be fired as well.\n\t     *\n\t     * Start event and start handler will be called in specified context or in context of the element with following parameters:\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * Move event and move handler will be called in specified context or in context of the element with following parameters:\n\t     o dx (number) shift by x from the start point\n\t     o dy (number) shift by y from the start point\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * End event and end handler will be called in specified context or in context of the element with following parameters:\n\t     o event (object) DOM event object\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n\t        function start(e) {\n\t            (e.originalEvent || e).preventDefault();\n\t            var x = e.clientX,\n\t                y = e.clientY,\n\t                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n\t                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n\t            this._drag.id = e.identifier;\n\t            if (supportsTouch && e.touches) {\n\t                var i = e.touches.length, touch;\n\t                while (i--) {\n\t                    touch = e.touches[i];\n\t                    this._drag.id = touch.identifier;\n\t                    if (touch.identifier == this._drag.id) {\n\t                        x = touch.clientX;\n\t                        y = touch.clientY;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            this._drag.x = x + scrollX;\n\t            this._drag.y = y + scrollY;\n\t            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\n\t            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n\t            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\n\t            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\n\t            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\n\t            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\n\t        }\n\t        this._drag = {};\n\t        draggable.push({el: this, start: start});\n\t        this.mousedown(start);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.onDragOver\n\t     [ method ]\n\t     **\n\t     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\n\t     > Parameters\n\t     - f (function) handler for event, first argument would be the element you are dragging over\n\t    \\*/\n\t    elproto.onDragOver = function (f) {\n\t        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\n\t    };\n\t    /*\\\n\t     * Element.undrag\n\t     [ method ]\n\t     **\n\t     * Removes all drag event handlers from given element.\n\t    \\*/\n\t    elproto.undrag = function () {\n\t        var i = draggable.length;\n\t        while (i--) if (draggable[i].el == this) {\n\t            this.unmousedown(draggable[i].start);\n\t            draggable.splice(i, 1);\n\t            eve.unbind(\"raphael.drag.*.\" + this.id);\n\t        }\n\t        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\n\t        drag = [];\n\t    };\n\t    /*\\\n\t     * Paper.circle\n\t     [ method ]\n\t     **\n\t     * Draws a circle.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - r (number) radius\n\t     = (object) Raphaël element object with type “circle”\n\t     **\n\t     > Usage\n\t     | var c = paper.circle(50, 50, 40);\n\t    \\*/\n\t    paperproto.circle = function (x, y, r) {\n\t        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.rect\n\t     [ method ]\n\t     *\n\t     * Draws a rectangle.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the top left corner\n\t     - y (number) y coordinate of the top left corner\n\t     - width (number) width\n\t     - height (number) height\n\t     - r (number) #optional radius for rounded corners, default is 0\n\t     = (object) Raphaël element object with type “rect”\n\t     **\n\t     > Usage\n\t     | // regular rectangle\n\t     | var c = paper.rect(10, 10, 50, 50);\n\t     | // rectangle with rounded corners\n\t     | var c = paper.rect(40, 40, 50, 50, 10);\n\t    \\*/\n\t    paperproto.rect = function (x, y, w, h, r) {\n\t        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.ellipse\n\t     [ method ]\n\t     **\n\t     * Draws an ellipse.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - rx (number) horizontal radius\n\t     - ry (number) vertical radius\n\t     = (object) Raphaël element object with type “ellipse”\n\t     **\n\t     > Usage\n\t     | var c = paper.ellipse(50, 50, 40, 20);\n\t    \\*/\n\t    paperproto.ellipse = function (x, y, rx, ry) {\n\t        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.path\n\t     [ method ]\n\t     **\n\t     * Creates a path element by given path data string.\n\t     > Parameters\n\t     - pathString (string) #optional path string in SVG format.\n\t     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\n\t     | \"M10,20L30,40\"\n\t     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\n\t     *\n\t     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\n\t     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n\t     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n\t     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n\t     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n\t     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n\t     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n\t     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n\t     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n\t     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n\t     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n\t     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\n\t     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\n\t     > Usage\n\t     | var c = paper.path(\"M10 10L90 90\");\n\t     | // draw a diagonal line:\n\t     | // move to 10,10, line to 90,90\n\t     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\n\t    \\*/\n\t    paperproto.path = function (pathString) {\n\t        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\n\t        var out = R._engine.path(R.format[apply](R, arguments), this);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.image\n\t     [ method ]\n\t     **\n\t     * Embeds an image into the surface.\n\t     **\n\t     > Parameters\n\t     **\n\t     - src (string) URI of the source image\n\t     - x (number) x coordinate position\n\t     - y (number) y coordinate position\n\t     - width (number) width of the image\n\t     - height (number) height of the image\n\t     = (object) Raphaël element object with type “image”\n\t     **\n\t     > Usage\n\t     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n\t    \\*/\n\t    paperproto.image = function (src, x, y, w, h) {\n\t        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.text\n\t     [ method ]\n\t     **\n\t     * Draws a text string. If you need line breaks, put “\\n” in the string.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate position\n\t     - y (number) y coordinate position\n\t     - text (string) The text string to draw\n\t     = (object) Raphaël element object with type “text”\n\t     **\n\t     > Usage\n\t     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\n\t    \\*/\n\t    paperproto.text = function (x, y, text) {\n\t        var out = R._engine.text(this, x || 0, y || 0, Str(text));\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.set\n\t     [ method ]\n\t     **\n\t     * Creates array-like object to keep and operate several elements at once.\n\t     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\n\t     * Sets act as pseudo elements — all methods available to an element can be used on a set.\n\t     = (object) array-like object that represents set of elements\n\t     **\n\t     > Usage\n\t     | var st = paper.set();\n\t     | st.push(\n\t     |     paper.circle(10, 10, 5),\n\t     |     paper.circle(30, 10, 5)\n\t     | );\n\t     | st.attr({fill: \"red\"}); // changes the fill of both circles\n\t    \\*/\n\t    paperproto.set = function (itemsArray) {\n\t        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\n\t        var out = new Set(itemsArray);\n\t        this.__set__ && this.__set__.push(out);\n\t        out[\"paper\"] = this;\n\t        out[\"type\"] = \"set\";\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.setStart\n\t     [ method ]\n\t     **\n\t     * Creates @Paper.set. All elements that will be created after calling this method and before calling\n\t     * @Paper.setFinish will be added to the set.\n\t     **\n\t     > Usage\n\t     | paper.setStart();\n\t     | paper.circle(10, 10, 5),\n\t     | paper.circle(30, 10, 5)\n\t     | var st = paper.setFinish();\n\t     | st.attr({fill: \"red\"}); // changes the fill of both circles\n\t    \\*/\n\t    paperproto.setStart = function (set) {\n\t        this.__set__ = set || this.set();\n\t    };\n\t    /*\\\n\t     * Paper.setFinish\n\t     [ method ]\n\t     **\n\t     * See @Paper.setStart. This method finishes catching and returns resulting set.\n\t     **\n\t     = (object) set\n\t    \\*/\n\t    paperproto.setFinish = function (set) {\n\t        var out = this.__set__;\n\t        delete this.__set__;\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Paper.getSize\n\t     [ method ]\n\t     **\n\t     * Obtains current paper actual size.\n\t     **\n\t     = (object)\n\t     \\*/\n\t    paperproto.getSize = function () {\n\t        var container = this.canvas.parentNode;\n\t        return {\n\t            width: container.offsetWidth,\n\t            height: container.offsetHeight\n\t                };\n\t        };\n\t    /*\\\n\t     * Paper.setSize\n\t     [ method ]\n\t     **\n\t     * If you need to change dimensions of the canvas call this method\n\t     **\n\t     > Parameters\n\t     **\n\t     - width (number) new width of the canvas\n\t     - height (number) new height of the canvas\n\t    \\*/\n\t    paperproto.setSize = function (width, height) {\n\t        return R._engine.setSize.call(this, width, height);\n\t    };\n\t    /*\\\n\t     * Paper.setViewBox\n\t     [ method ]\n\t     **\n\t     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\n\t     * specifying new boundaries.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) new x position, default is `0`\n\t     - y (number) new y position, default is `0`\n\t     - w (number) new width of the canvas\n\t     - h (number) new height of the canvas\n\t     - fit (boolean) `true` if you want graphics to fit into new boundary box\n\t    \\*/\n\t    paperproto.setViewBox = function (x, y, w, h, fit) {\n\t        return R._engine.setViewBox.call(this, x, y, w, h, fit);\n\t    };\n\t    /*\\\n\t     * Paper.top\n\t     [ property ]\n\t     **\n\t     * Points to the topmost element on the paper\n\t    \\*/\n\t    /*\\\n\t     * Paper.bottom\n\t     [ property ]\n\t     **\n\t     * Points to the bottom element on the paper\n\t    \\*/\n\t    paperproto.top = paperproto.bottom = null;\n\t    /*\\\n\t     * Paper.raphael\n\t     [ property ]\n\t     **\n\t     * Points to the @Raphael object/function\n\t    \\*/\n\t    paperproto.raphael = R;\n\t    var getOffset = function (elem) {\n\t        var box = elem.getBoundingClientRect(),\n\t            doc = elem.ownerDocument,\n\t            body = doc.body,\n\t            docElem = doc.documentElement,\n\t            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n\t            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n\t            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n\t        return {\n\t            y: top,\n\t            x: left\n\t        };\n\t    };\n\t    /*\\\n\t     * Paper.getElementByPoint\n\t     [ method ]\n\t     **\n\t     * Returns you topmost element under given point.\n\t     **\n\t     = (object) Raphaël element object\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate from the top left corner of the window\n\t     - y (number) y coordinate from the top left corner of the window\n\t     > Usage\n\t     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\t    \\*/\n\t    paperproto.getElementByPoint = function (x, y) {\n\t        var paper = this,\n\t            svg = paper.canvas,\n\t            target = g.doc.elementFromPoint(x, y);\n\t        if (g.win.opera && target.tagName == \"svg\") {\n\t            var so = getOffset(svg),\n\t                sr = svg.createSVGRect();\n\t            sr.x = x - so.x;\n\t            sr.y = y - so.y;\n\t            sr.width = sr.height = 1;\n\t            var hits = svg.getIntersectionList(sr, null);\n\t            if (hits.length) {\n\t                target = hits[hits.length - 1];\n\t            }\n\t        }\n\t        if (!target) {\n\t            return null;\n\t        }\n\t        while (target.parentNode && target != svg.parentNode && !target.raphael) {\n\t            target = target.parentNode;\n\t        }\n\t        target == paper.canvas.parentNode && (target = svg);\n\t        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\n\t        return target;\n\t    };\n\n\t    /*\\\n\t     * Paper.getElementsByBBox\n\t     [ method ]\n\t     **\n\t     * Returns set of elements that have an intersecting bounding box\n\t     **\n\t     > Parameters\n\t     **\n\t     - bbox (object) bbox to check with\n\t     = (object) @Set\n\t     \\*/\n\t    paperproto.getElementsByBBox = function (bbox) {\n\t        var set = this.set();\n\t        this.forEach(function (el) {\n\t            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\n\t                set.push(el);\n\t            }\n\t        });\n\t        return set;\n\t    };\n\n\t    /*\\\n\t     * Paper.getById\n\t     [ method ]\n\t     **\n\t     * Returns you element by its internal ID.\n\t     **\n\t     > Parameters\n\t     **\n\t     - id (number) id\n\t     = (object) Raphaël element object\n\t    \\*/\n\t    paperproto.getById = function (id) {\n\t        var bot = this.bottom;\n\t        while (bot) {\n\t            if (bot.id == id) {\n\t                return bot;\n\t            }\n\t            bot = bot.next;\n\t        }\n\t        return null;\n\t    };\n\t    /*\\\n\t     * Paper.forEach\n\t     [ method ]\n\t     **\n\t     * Executes given function for each element on the paper\n\t     *\n\t     * If callback function returns `false` it will stop loop running.\n\t     **\n\t     > Parameters\n\t     **\n\t     - callback (function) function to run\n\t     - thisArg (object) context object for the callback\n\t     = (object) Paper object\n\t     > Usage\n\t     | paper.forEach(function (el) {\n\t     |     el.attr({ stroke: \"blue\" });\n\t     | });\n\t    \\*/\n\t    paperproto.forEach = function (callback, thisArg) {\n\t        var bot = this.bottom;\n\t        while (bot) {\n\t            if (callback.call(thisArg, bot) === false) {\n\t                return this;\n\t            }\n\t            bot = bot.next;\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Paper.getElementsByPoint\n\t     [ method ]\n\t     **\n\t     * Returns set of elements that have common point inside\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the point\n\t     - y (number) y coordinate of the point\n\t     = (object) @Set\n\t    \\*/\n\t    paperproto.getElementsByPoint = function (x, y) {\n\t        var set = this.set();\n\t        this.forEach(function (el) {\n\t            if (el.isPointInside(x, y)) {\n\t                set.push(el);\n\t            }\n\t        });\n\t        return set;\n\t    };\n\t    function x_y() {\n\t        return this.x + S + this.y;\n\t    }\n\t    function x_y_w_h() {\n\t        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n\t    }\n\t    /*\\\n\t     * Element.isPointInside\n\t     [ method ]\n\t     **\n\t     * Determine if given point is inside this element’s shape\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the point\n\t     - y (number) y coordinate of the point\n\t     = (boolean) `true` if point inside the shape\n\t    \\*/\n\t    elproto.isPointInside = function (x, y) {\n\t        var rp = this.realPath = getPath[this.type](this);\n\t        if (this.attr('transform') && this.attr('transform').length) {\n\t            rp = R.transformPath(rp, this.attr('transform'));\n\t        }\n\t        return R.isPointInsidePath(rp, x, y);\n\t    };\n\t    /*\\\n\t     * Element.getBBox\n\t     [ method ]\n\t     **\n\t     * Return bounding box for a given element\n\t     **\n\t     > Parameters\n\t     **\n\t     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\n\t     = (object) Bounding box object:\n\t     o {\n\t     o     x: (number) top left corner x\n\t     o     y: (number) top left corner y\n\t     o     x2: (number) bottom right corner x\n\t     o     y2: (number) bottom right corner y\n\t     o     width: (number) width\n\t     o     height: (number) height\n\t     o }\n\t    \\*/\n\t    elproto.getBBox = function (isWithoutTransform) {\n\t        if (this.removed) {\n\t            return {};\n\t        }\n\t        var _ = this._;\n\t        if (isWithoutTransform) {\n\t            if (_.dirty || !_.bboxwt) {\n\t                this.realPath = getPath[this.type](this);\n\t                _.bboxwt = pathDimensions(this.realPath);\n\t                _.bboxwt.toString = x_y_w_h;\n\t                _.dirty = 0;\n\t            }\n\t            return _.bboxwt;\n\t        }\n\t        if (_.dirty || _.dirtyT || !_.bbox) {\n\t            if (_.dirty || !this.realPath) {\n\t                _.bboxwt = 0;\n\t                this.realPath = getPath[this.type](this);\n\t            }\n\t            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\n\t            _.bbox.toString = x_y_w_h;\n\t            _.dirty = _.dirtyT = 0;\n\t        }\n\t        return _.bbox;\n\t    };\n\t    /*\\\n\t     * Element.clone\n\t     [ method ]\n\t     **\n\t     = (object) clone of a given element\n\t     **\n\t    \\*/\n\t    elproto.clone = function () {\n\t        if (this.removed) {\n\t            return null;\n\t        }\n\t        var out = this.paper[this.type]().attr(this.attr());\n\t        this.__set__ && this.__set__.push(out);\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Element.glow\n\t     [ method ]\n\t     **\n\t     * Return set of elements that create glow-like effect around given element. See @Paper.set.\n\t     *\n\t     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\n\t     **\n\t     > Parameters\n\t     **\n\t     - glow (object) #optional parameters object with all properties optional:\n\t     o {\n\t     o     width (number) size of the glow, default is `10`\n\t     o     fill (boolean) will it be filled, default is `false`\n\t     o     opacity (number) opacity, default is `0.5`\n\t     o     offsetx (number) horizontal offset, default is `0`\n\t     o     offsety (number) vertical offset, default is `0`\n\t     o     color (string) glow colour, default is `black`\n\t     o }\n\t     = (object) @Paper.set of elements that represents glow\n\t    \\*/\n\t    elproto.glow = function (glow) {\n\t        if (this.type == \"text\") {\n\t            return null;\n\t        }\n\t        glow = glow || {};\n\t        var s = {\n\t            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\n\t            fill: glow.fill || false,\n\t            opacity: glow.opacity == null ? .5 : glow.opacity,\n\t            offsetx: glow.offsetx || 0,\n\t            offsety: glow.offsety || 0,\n\t            color: glow.color || \"#000\"\n\t        },\n\t            c = s.width / 2,\n\t            r = this.paper,\n\t            out = r.set(),\n\t            path = this.realPath || getPath[this.type](this);\n\t        path = this.matrix ? mapPath(path, this.matrix) : path;\n\t        for (var i = 1; i < c + 1; i++) {\n\t            out.push(r.path(path).attr({\n\t                stroke: s.color,\n\t                fill: s.fill ? s.color : \"none\",\n\t                \"stroke-linejoin\": \"round\",\n\t                \"stroke-linecap\": \"round\",\n\t                \"stroke-width\": +(s.width / c * i).toFixed(3),\n\t                opacity: +(s.opacity / c).toFixed(3)\n\t            }));\n\t        }\n\t        return out.insertBefore(this).translate(s.offsetx, s.offsety);\n\t    };\n\t    var curveslengths = {},\n\t    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n\t        if (length == null) {\n\t            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n\t        } else {\n\t            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n\t        }\n\t    },\n\t    getLengthFactory = function (istotal, subpath) {\n\t        return function (path, length, onlystart) {\n\t            path = path2curve(path);\n\t            var x, y, p, l, sp = \"\", subpaths = {}, point,\n\t                len = 0;\n\t            for (var i = 0, ii = path.length; i < ii; i++) {\n\t                p = path[i];\n\t                if (p[0] == \"M\") {\n\t                    x = +p[1];\n\t                    y = +p[2];\n\t                } else {\n\t                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                    if (len + l > length) {\n\t                        if (subpath && !subpaths.start) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\n\t                            if (onlystart) {return sp;}\n\t                            subpaths.start = sp;\n\t                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\n\t                            len += l;\n\t                            x = +p[5];\n\t                            y = +p[6];\n\t                            continue;\n\t                        }\n\t                        if (!istotal && !subpath) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            return {x: point.x, y: point.y, alpha: point.alpha};\n\t                        }\n\t                    }\n\t                    len += l;\n\t                    x = +p[5];\n\t                    y = +p[6];\n\t                }\n\t                sp += p.shift() + p;\n\t            }\n\t            subpaths.end = sp;\n\t            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n\t            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\n\t            return point;\n\t        };\n\t    };\n\t    var getTotalLength = getLengthFactory(1),\n\t        getPointAtLength = getLengthFactory(),\n\t        getSubpathsAtLength = getLengthFactory(0, 1);\n\t    /*\\\n\t     * Raphael.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns length of the given path in pixels.\n\t     **\n\t     > Parameters\n\t     **\n\t     - path (string) SVG path string.\n\t     **\n\t     = (number) length.\n\t    \\*/\n\t    R.getTotalLength = getTotalLength;\n\t    /*\\\n\t     * Raphael.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Return coordinates of the point located at the given length on the given path.\n\t     **\n\t     > Parameters\n\t     **\n\t     - path (string) SVG path string\n\t     - length (number)\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate\n\t     o     y: (number) y coordinate\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    R.getPointAtLength = getPointAtLength;\n\t    /*\\\n\t     * Raphael.getSubpath\n\t     [ method ]\n\t     **\n\t     * Return subpath of a given path from given length to given length.\n\t     **\n\t     > Parameters\n\t     **\n\t     - path (string) SVG path string\n\t     - from (number) position of the start of the segment\n\t     - to (number) position of the end of the segment\n\t     **\n\t     = (string) pathstring for the segment\n\t    \\*/\n\t    R.getSubpath = function (path, from, to) {\n\t        if (this.getTotalLength(path) - to < 1e-6) {\n\t            return getSubpathsAtLength(path, from).end;\n\t        }\n\t        var a = getSubpathsAtLength(path, to, 1);\n\t        return from ? getSubpathsAtLength(a, from).end : a;\n\t    };\n\t    /*\\\n\t     * Element.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns length of the path in pixels. Only works for element of “path” type.\n\t     = (number) length.\n\t    \\*/\n\t    elproto.getTotalLength = function () {\n\t        var path = this.getPath();\n\t        if (!path) {\n\t            return;\n\t        }\n\n\t        if (this.node.getTotalLength) {\n\t            return this.node.getTotalLength();\n\t        }\n\n\t        return getTotalLength(path);\n\t    };\n\t    /*\\\n\t     * Element.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\n\t     **\n\t     > Parameters\n\t     **\n\t     - length (number)\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate\n\t     o     y: (number) y coordinate\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    elproto.getPointAtLength = function (length) {\n\t        var path = this.getPath();\n\t        if (!path) {\n\t            return;\n\t        }\n\n\t        return getPointAtLength(path, length);\n\t    };\n\t    /*\\\n\t     * Element.getPath\n\t     [ method ]\n\t     **\n\t     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\n\t     = (object) path\n\t     **\n\t    \\*/\n\t    elproto.getPath = function () {\n\t        var path,\n\t            getPath = R._getPath[this.type];\n\n\t        if (this.type == \"text\" || this.type == \"set\") {\n\t            return;\n\t        }\n\n\t        if (getPath) {\n\t            path = getPath(this);\n\t        }\n\n\t        return path;\n\t    };\n\t    /*\\\n\t     * Element.getSubpath\n\t     [ method ]\n\t     **\n\t     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\n\t     **\n\t     > Parameters\n\t     **\n\t     - from (number) position of the start of the segment\n\t     - to (number) position of the end of the segment\n\t     **\n\t     = (string) pathstring for the segment\n\t    \\*/\n\t    elproto.getSubpath = function (from, to) {\n\t        var path = this.getPath();\n\t        if (!path) {\n\t            return;\n\t        }\n\n\t        return R.getSubpath(path, from, to);\n\t    };\n\t    /*\\\n\t     * Raphael.easing_formulas\n\t     [ property ]\n\t     **\n\t     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\n\t     # <ul>\n\t     #     <li>“linear”</li>\n\t     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\n\t     #     <li>“>” or “easeOut” or “ease-out”</li>\n\t     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\n\t     #     <li>“backIn” or “back-in”</li>\n\t     #     <li>“backOut” or “back-out”</li>\n\t     #     <li>“elastic”</li>\n\t     #     <li>“bounce”</li>\n\t     # </ul>\n\t     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\n\t    \\*/\n\t    var ef = R.easing_formulas = {\n\t        linear: function (n) {\n\t            return n;\n\t        },\n\t        \"<\": function (n) {\n\t            return pow(n, 1.7);\n\t        },\n\t        \">\": function (n) {\n\t            return pow(n, .48);\n\t        },\n\t        \"<>\": function (n) {\n\t            var q = .48 - n / 1.04,\n\t                Q = math.sqrt(.1734 + q * q),\n\t                x = Q - q,\n\t                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n\t                y = -Q - q,\n\t                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n\t                t = X + Y + .5;\n\t            return (1 - t) * 3 * t * t + t * t * t;\n\t        },\n\t        backIn: function (n) {\n\t            var s = 1.70158;\n\t            return n * n * ((s + 1) * n - s);\n\t        },\n\t        backOut: function (n) {\n\t            n = n - 1;\n\t            var s = 1.70158;\n\t            return n * n * ((s + 1) * n + s) + 1;\n\t        },\n\t        elastic: function (n) {\n\t            if (n == !!n) {\n\t                return n;\n\t            }\n\t            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\n\t        },\n\t        bounce: function (n) {\n\t            var s = 7.5625,\n\t                p = 2.75,\n\t                l;\n\t            if (n < (1 / p)) {\n\t                l = s * n * n;\n\t            } else {\n\t                if (n < (2 / p)) {\n\t                    n -= (1.5 / p);\n\t                    l = s * n * n + .75;\n\t                } else {\n\t                    if (n < (2.5 / p)) {\n\t                        n -= (2.25 / p);\n\t                        l = s * n * n + .9375;\n\t                    } else {\n\t                        n -= (2.625 / p);\n\t                        l = s * n * n + .984375;\n\t                    }\n\t                }\n\t            }\n\t            return l;\n\t        }\n\t    };\n\t    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\n\t    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\n\t    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\n\t    ef[\"back-in\"] = ef.backIn;\n\t    ef[\"back-out\"] = ef.backOut;\n\n\t    var animationElements = [],\n\t        requestAnimFrame = window.requestAnimationFrame       ||\n\t                           window.webkitRequestAnimationFrame ||\n\t                           window.mozRequestAnimationFrame    ||\n\t                           window.oRequestAnimationFrame      ||\n\t                           window.msRequestAnimationFrame     ||\n\t                           function (callback) {\n\t                               setTimeout(callback, 16);\n\t                           },\n\t        animation = function () {\n\t            var Now = +new Date,\n\t                l = 0;\n\t            for (; l < animationElements.length; l++) {\n\t                var e = animationElements[l];\n\t                if (e.el.removed || e.paused) {\n\t                    continue;\n\t                }\n\t                var time = Now - e.start,\n\t                    ms = e.ms,\n\t                    easing = e.easing,\n\t                    from = e.from,\n\t                    diff = e.diff,\n\t                    to = e.to,\n\t                    t = e.t,\n\t                    that = e.el,\n\t                    set = {},\n\t                    now,\n\t                    init = {},\n\t                    key;\n\t                if (e.initstatus) {\n\t                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\n\t                    e.status = e.initstatus;\n\t                    delete e.initstatus;\n\t                    e.stop && animationElements.splice(l--, 1);\n\t                } else {\n\t                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\n\t                }\n\t                if (time < 0) {\n\t                    continue;\n\t                }\n\t                if (time < ms) {\n\t                    var pos = easing(time / ms);\n\t                    for (var attr in from) if (from[has](attr)) {\n\t                        switch (availableAnimAttrs[attr]) {\n\t                            case nu:\n\t                                now = +from[attr] + pos * ms * diff[attr];\n\t                                break;\n\t                            case \"colour\":\n\t                                now = \"rgb(\" + [\n\t                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\n\t                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\n\t                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\n\t                                ].join(\",\") + \")\";\n\t                                break;\n\t                            case \"path\":\n\t                                now = [];\n\t                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                    now[i] = [from[attr][i][0]];\n\t                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\n\t                                    }\n\t                                    now[i] = now[i].join(S);\n\t                                }\n\t                                now = now.join(S);\n\t                                break;\n\t                            case \"transform\":\n\t                                if (diff[attr].real) {\n\t                                    now = [];\n\t                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                        now[i] = [from[attr][i][0]];\n\t                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\n\t                                        }\n\t                                    }\n\t                                } else {\n\t                                    var get = function (i) {\n\t                                        return +from[attr][i] + pos * ms * diff[attr][i];\n\t                                    };\n\t                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\n\t                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\n\t                                }\n\t                                break;\n\t                            case \"csv\":\n\t                                if (attr == \"clip-rect\") {\n\t                                    now = [];\n\t                                    i = 4;\n\t                                    while (i--) {\n\t                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\n\t                                    }\n\t                                }\n\t                                break;\n\t                            default:\n\t                                var from2 = [][concat](from[attr]);\n\t                                now = [];\n\t                                i = that.paper.customAttributes[attr].length;\n\t                                while (i--) {\n\t                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\n\t                                }\n\t                                break;\n\t                        }\n\t                        set[attr] = now;\n\t                    }\n\t                    that.attr(set);\n\t                    (function (id, that, anim) {\n\t                        setTimeout(function () {\n\t                            eve(\"raphael.anim.frame.\" + id, that, anim);\n\t                        });\n\t                    })(that.id, that, e.anim);\n\t                } else {\n\t                    (function(f, el, a) {\n\t                        setTimeout(function() {\n\t                            eve(\"raphael.anim.frame.\" + el.id, el, a);\n\t                            eve(\"raphael.anim.finish.\" + el.id, el, a);\n\t                            R.is(f, \"function\") && f.call(el);\n\t                        });\n\t                    })(e.callback, that, e.anim);\n\t                    that.attr(to);\n\t                    animationElements.splice(l--, 1);\n\t                    if (e.repeat > 1 && !e.next) {\n\t                        for (key in to) if (to[has](key)) {\n\t                            init[key] = e.totalOrigin[key];\n\t                        }\n\t                        e.el.attr(init);\n\t                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\n\t                    }\n\t                    if (e.next && !e.stop) {\n\t                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\n\t                    }\n\t                }\n\t            }\n\t            animationElements.length && requestAnimFrame(animation);\n\t        },\n\t        upto255 = function (color) {\n\t            return color > 255 ? 255 : color < 0 ? 0 : color;\n\t        };\n\t    /*\\\n\t     * Element.animateWith\n\t     [ method ]\n\t     **\n\t     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - el (object) element to sync with\n\t     - anim (object) animation to sync with\n\t     - params (object) #optional final attributes for the element, see also @Element.attr\n\t     - ms (number) #optional number of milliseconds for animation to run\n\t     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n\t     - callback (function) #optional callback function. Will be called at the end of animation.\n\t     * or\n\t     - element (object) element to sync with\n\t     - anim (object) animation to sync with\n\t     - animation (object) #optional animation object, see @Raphael.animation\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\n\t        var element = this;\n\t        if (element.removed) {\n\t            callback && callback.call(element);\n\t            return element;\n\t        }\n\t        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\n\t            x, y;\n\t        runAnimation(a, element, a.percents[0], null, element.attr());\n\t        for (var i = 0, ii = animationElements.length; i < ii; i++) {\n\t            if (animationElements[i].anim == anim && animationElements[i].el == el) {\n\t                animationElements[ii - 1].start = animationElements[i].start;\n\t                break;\n\t            }\n\t        }\n\t        return element;\n\t        //\n\t        //\n\t        // var a = params ? R.animation(params, ms, easing, callback) : anim,\n\t        //     status = element.status(anim);\n\t        // return this.animate(a).status(a, status * anim.ms / a.ms);\n\t    };\n\t    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\n\t        var cx = 3 * p1x,\n\t            bx = 3 * (p2x - p1x) - cx,\n\t            ax = 1 - cx - bx,\n\t            cy = 3 * p1y,\n\t            by = 3 * (p2y - p1y) - cy,\n\t            ay = 1 - cy - by;\n\t        function sampleCurveX(t) {\n\t            return ((ax * t + bx) * t + cx) * t;\n\t        }\n\t        function solve(x, epsilon) {\n\t            var t = solveCurveX(x, epsilon);\n\t            return ((ay * t + by) * t + cy) * t;\n\t        }\n\t        function solveCurveX(x, epsilon) {\n\t            var t0, t1, t2, x2, d2, i;\n\t            for(t2 = x, i = 0; i < 8; i++) {\n\t                x2 = sampleCurveX(t2) - x;\n\t                if (abs(x2) < epsilon) {\n\t                    return t2;\n\t                }\n\t                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\n\t                if (abs(d2) < 1e-6) {\n\t                    break;\n\t                }\n\t                t2 = t2 - x2 / d2;\n\t            }\n\t            t0 = 0;\n\t            t1 = 1;\n\t            t2 = x;\n\t            if (t2 < t0) {\n\t                return t0;\n\t            }\n\t            if (t2 > t1) {\n\t                return t1;\n\t            }\n\t            while (t0 < t1) {\n\t                x2 = sampleCurveX(t2);\n\t                if (abs(x2 - x) < epsilon) {\n\t                    return t2;\n\t                }\n\t                if (x > x2) {\n\t                    t0 = t2;\n\t                } else {\n\t                    t1 = t2;\n\t                }\n\t                t2 = (t1 - t0) / 2 + t0;\n\t            }\n\t            return t2;\n\t        }\n\t        return solve(t, 1 / (200 * duration));\n\t    }\n\t    elproto.onAnimation = function (f) {\n\t        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\n\t        return this;\n\t    };\n\t    function Animation(anim, ms) {\n\t        var percents = [],\n\t            newAnim = {};\n\t        this.ms = ms;\n\t        this.times = 1;\n\t        if (anim) {\n\t            for (var attr in anim) if (anim[has](attr)) {\n\t                newAnim[toFloat(attr)] = anim[attr];\n\t                percents.push(toFloat(attr));\n\t            }\n\t            percents.sort(sortByNumber);\n\t        }\n\t        this.anim = newAnim;\n\t        this.top = percents[percents.length - 1];\n\t        this.percents = percents;\n\t    }\n\t    /*\\\n\t     * Animation.delay\n\t     [ method ]\n\t     **\n\t     * Creates a copy of existing animation object with given delay.\n\t     **\n\t     > Parameters\n\t     **\n\t     - delay (number) number of ms to pass between animation start and actual animation\n\t     **\n\t     = (object) new altered Animation object\n\t     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\n\t     | circle1.animate(anim); // run the given animation immediately\n\t     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\n\t    \\*/\n\t    Animation.prototype.delay = function (delay) {\n\t        var a = new Animation(this.anim, this.ms);\n\t        a.times = this.times;\n\t        a.del = +delay || 0;\n\t        return a;\n\t    };\n\t    /*\\\n\t     * Animation.repeat\n\t     [ method ]\n\t     **\n\t     * Creates a copy of existing animation object with given repetition.\n\t     **\n\t     > Parameters\n\t     **\n\t     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\n\t     **\n\t     = (object) new altered Animation object\n\t    \\*/\n\t    Animation.prototype.repeat = function (times) {\n\t        var a = new Animation(this.anim, this.ms);\n\t        a.del = this.del;\n\t        a.times = math.floor(mmax(times, 0)) || 1;\n\t        return a;\n\t    };\n\t    function runAnimation(anim, element, percent, status, totalOrigin, times) {\n\t        percent = toFloat(percent);\n\t        var params,\n\t            isInAnim,\n\t            isInAnimSet,\n\t            percents = [],\n\t            next,\n\t            prev,\n\t            timestamp,\n\t            ms = anim.ms,\n\t            from = {},\n\t            to = {},\n\t            diff = {};\n\t        if (status) {\n\t            for (i = 0, ii = animationElements.length; i < ii; i++) {\n\t                var e = animationElements[i];\n\t                if (e.el.id == element.id && e.anim == anim) {\n\t                    if (e.percent != percent) {\n\t                        animationElements.splice(i, 1);\n\t                        isInAnimSet = 1;\n\t                    } else {\n\t                        isInAnim = e;\n\t                    }\n\t                    element.attr(e.totalOrigin);\n\t                    break;\n\t                }\n\t            }\n\t        } else {\n\t            status = +to; // NaN\n\t        }\n\t        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\n\t            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\n\t                percent = anim.percents[i];\n\t                prev = anim.percents[i - 1] || 0;\n\t                ms = ms / anim.top * (percent - prev);\n\t                next = anim.percents[i + 1];\n\t                params = anim.anim[percent];\n\t                break;\n\t            } else if (status) {\n\t                element.attr(anim.anim[anim.percents[i]]);\n\t            }\n\t        }\n\t        if (!params) {\n\t            return;\n\t        }\n\t        if (!isInAnim) {\n\t            for (var attr in params) if (params[has](attr)) {\n\t                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\n\t                    from[attr] = element.attr(attr);\n\t                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\n\t                    to[attr] = params[attr];\n\t                    switch (availableAnimAttrs[attr]) {\n\t                        case nu:\n\t                            diff[attr] = (to[attr] - from[attr]) / ms;\n\t                            break;\n\t                        case \"colour\":\n\t                            from[attr] = R.getRGB(from[attr]);\n\t                            var toColour = R.getRGB(to[attr]);\n\t                            diff[attr] = {\n\t                                r: (toColour.r - from[attr].r) / ms,\n\t                                g: (toColour.g - from[attr].g) / ms,\n\t                                b: (toColour.b - from[attr].b) / ms\n\t                            };\n\t                            break;\n\t                        case \"path\":\n\t                            var pathes = path2curve(from[attr], to[attr]),\n\t                                toPath = pathes[1];\n\t                            from[attr] = pathes[0];\n\t                            diff[attr] = [];\n\t                            for (i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                diff[attr][i] = [0];\n\t                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case \"transform\":\n\t                            var _ = element._,\n\t                                eq = equaliseTransform(_[attr], to[attr]);\n\t                            if (eq) {\n\t                                from[attr] = eq.from;\n\t                                to[attr] = eq.to;\n\t                                diff[attr] = [];\n\t                                diff[attr].real = true;\n\t                                for (i = 0, ii = from[attr].length; i < ii; i++) {\n\t                                    diff[attr][i] = [from[attr][i][0]];\n\t                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n\t                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                var m = (element.matrix || new Matrix),\n\t                                    to2 = {\n\t                                        _: {transform: _.transform},\n\t                                        getBBox: function () {\n\t                                            return element.getBBox(1);\n\t                                        }\n\t                                    };\n\t                                from[attr] = [\n\t                                    m.a,\n\t                                    m.b,\n\t                                    m.c,\n\t                                    m.d,\n\t                                    m.e,\n\t                                    m.f\n\t                                ];\n\t                                extractTransform(to2, to[attr]);\n\t                                to[attr] = to2._.transform;\n\t                                diff[attr] = [\n\t                                    (to2.matrix.a - m.a) / ms,\n\t                                    (to2.matrix.b - m.b) / ms,\n\t                                    (to2.matrix.c - m.c) / ms,\n\t                                    (to2.matrix.d - m.d) / ms,\n\t                                    (to2.matrix.e - m.e) / ms,\n\t                                    (to2.matrix.f - m.f) / ms\n\t                                ];\n\t                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\n\t                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\n\t                                // extractTransform(to2, to[attr]);\n\t                                // diff[attr] = [\n\t                                //     (to2._.sx - _.sx) / ms,\n\t                                //     (to2._.sy - _.sy) / ms,\n\t                                //     (to2._.deg - _.deg) / ms,\n\t                                //     (to2._.dx - _.dx) / ms,\n\t                                //     (to2._.dy - _.dy) / ms\n\t                                // ];\n\t                            }\n\t                            break;\n\t                        case \"csv\":\n\t                            var values = Str(params[attr])[split](separator),\n\t                                from2 = Str(from[attr])[split](separator);\n\t                            if (attr == \"clip-rect\") {\n\t                                from[attr] = from2;\n\t                                diff[attr] = [];\n\t                                i = from2.length;\n\t                                while (i--) {\n\t                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\n\t                                }\n\t                            }\n\t                            to[attr] = values;\n\t                            break;\n\t                        default:\n\t                            values = [][concat](params[attr]);\n\t                            from2 = [][concat](from[attr]);\n\t                            diff[attr] = [];\n\t                            i = element.paper.customAttributes[attr].length;\n\t                            while (i--) {\n\t                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t            }\n\t            var easing = params.easing,\n\t                easyeasy = R.easing_formulas[easing];\n\t            if (!easyeasy) {\n\t                easyeasy = Str(easing).match(bezierrg);\n\t                if (easyeasy && easyeasy.length == 5) {\n\t                    var curve = easyeasy;\n\t                    easyeasy = function (t) {\n\t                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\n\t                    };\n\t                } else {\n\t                    easyeasy = pipe;\n\t                }\n\t            }\n\t            timestamp = params.start || anim.start || +new Date;\n\t            e = {\n\t                anim: anim,\n\t                percent: percent,\n\t                timestamp: timestamp,\n\t                start: timestamp + (anim.del || 0),\n\t                status: 0,\n\t                initstatus: status || 0,\n\t                stop: false,\n\t                ms: ms,\n\t                easing: easyeasy,\n\t                from: from,\n\t                diff: diff,\n\t                to: to,\n\t                el: element,\n\t                callback: params.callback,\n\t                prev: prev,\n\t                next: next,\n\t                repeat: times || anim.times,\n\t                origin: element.attr(),\n\t                totalOrigin: totalOrigin\n\t            };\n\t            animationElements.push(e);\n\t            if (status && !isInAnim && !isInAnimSet) {\n\t                e.stop = true;\n\t                e.start = new Date - ms * status;\n\t                if (animationElements.length == 1) {\n\t                    return animation();\n\t                }\n\t            }\n\t            if (isInAnimSet) {\n\t                e.start = new Date - e.ms * status;\n\t            }\n\t            animationElements.length == 1 && requestAnimFrame(animation);\n\t        } else {\n\t            isInAnim.initstatus = status;\n\t            isInAnim.start = new Date - isInAnim.ms * status;\n\t        }\n\t        eve(\"raphael.anim.start.\" + element.id, element, anim);\n\t    }\n\t    /*\\\n\t     * Raphael.animation\n\t     [ method ]\n\t     **\n\t     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\n\t     * See also @Animation.delay and @Animation.repeat methods.\n\t     **\n\t     > Parameters\n\t     **\n\t     - params (object) final attributes for the element, see also @Element.attr\n\t     - ms (number) number of milliseconds for animation to run\n\t     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n\t     - callback (function) #optional callback function. Will be called at the end of animation.\n\t     **\n\t     = (object) @Animation\n\t    \\*/\n\t    R.animation = function (params, ms, easing, callback) {\n\t        if (params instanceof Animation) {\n\t            return params;\n\t        }\n\t        if (R.is(easing, \"function\") || !easing) {\n\t            callback = callback || easing || null;\n\t            easing = null;\n\t        }\n\t        params = Object(params);\n\t        ms = +ms || 0;\n\t        var p = {},\n\t            json,\n\t            attr;\n\t        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\n\t            json = true;\n\t            p[attr] = params[attr];\n\t        }\n\t        if (!json) {\n\t            // if percent-like syntax is used and end-of-all animation callback used\n\t            if(callback){\n\t                // find the last one\n\t                var lastKey = 0;\n\t                for(var i in params){\n\t                    var percent = toInt(i);\n\t                    if(params[has](i) && percent > lastKey){\n\t                        lastKey = percent;\n\t                    }\n\t                }\n\t                lastKey += '%';\n\t                // if already defined callback in the last keyframe, skip\n\t                !params[lastKey].callback && (params[lastKey].callback = callback);\n\t            }\n\t          return new Animation(params, ms);\n\t        } else {\n\t            easing && (p.easing = easing);\n\t            callback && (p.callback = callback);\n\t            return new Animation({100: p}, ms);\n\t        }\n\t    };\n\t    /*\\\n\t     * Element.animate\n\t     [ method ]\n\t     **\n\t     * Creates and starts animation for given element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - params (object) final attributes for the element, see also @Element.attr\n\t     - ms (number) number of milliseconds for animation to run\n\t     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n\t     - callback (function) #optional callback function. Will be called at the end of animation.\n\t     * or\n\t     - animation (object) animation object, see @Raphael.animation\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.animate = function (params, ms, easing, callback) {\n\t        var element = this;\n\t        if (element.removed) {\n\t            callback && callback.call(element);\n\t            return element;\n\t        }\n\t        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\n\t        runAnimation(anim, element, anim.percents[0], null, element.attr());\n\t        return element;\n\t    };\n\t    /*\\\n\t     * Element.setTime\n\t     [ method ]\n\t     **\n\t     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) animation object\n\t     - value (number) number of milliseconds from the beginning of the animation\n\t     **\n\t     = (object) original element if `value` is specified\n\t     * Note, that during animation following events are triggered:\n\t     *\n\t     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\n\t    \\*/\n\t    elproto.setTime = function (anim, value) {\n\t        if (anim && value != null) {\n\t            this.status(anim, mmin(value, anim.ms) / anim.ms);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.status\n\t     [ method ]\n\t     **\n\t     * Gets or sets the status of animation of the element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\n\t     **\n\t     = (number) status\n\t     * or\n\t     = (array) status if `anim` is not specified. Array of objects in format:\n\t     o {\n\t     o     anim: (object) animation object\n\t     o     status: (number) status\n\t     o }\n\t     * or\n\t     = (object) original element if `value` is specified\n\t    \\*/\n\t    elproto.status = function (anim, value) {\n\t        var out = [],\n\t            i = 0,\n\t            len,\n\t            e;\n\t        if (value != null) {\n\t            runAnimation(anim, this, -1, mmin(value, 1));\n\t            return this;\n\t        } else {\n\t            len = animationElements.length;\n\t            for (; i < len; i++) {\n\t                e = animationElements[i];\n\t                if (e.el.id == this.id && (!anim || e.anim == anim)) {\n\t                    if (anim) {\n\t                        return e.status;\n\t                    }\n\t                    out.push({\n\t                        anim: e.anim,\n\t                        status: e.status\n\t                    });\n\t                }\n\t            }\n\t            if (anim) {\n\t                return 0;\n\t            }\n\t            return out;\n\t        }\n\t    };\n\t    /*\\\n\t     * Element.pause\n\t     [ method ]\n\t     **\n\t     * Stops animation of the element with ability to resume it later on.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.pause = function (anim) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n\t            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\n\t                animationElements[i].paused = true;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.resume\n\t     [ method ]\n\t     **\n\t     * Resumes animation if it was paused with @Element.pause method.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.resume = function (anim) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n\t            var e = animationElements[i];\n\t            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\n\t                delete e.paused;\n\t                this.status(e.anim, e.status);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.stop\n\t     [ method ]\n\t     **\n\t     * Stops animation of the element.\n\t     **\n\t     > Parameters\n\t     **\n\t     - anim (object) #optional animation object\n\t     **\n\t     = (object) original element\n\t    \\*/\n\t    elproto.stop = function (anim) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n\t            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\n\t                animationElements.splice(i--, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    function stopAnimation(paper) {\n\t        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\n\t            animationElements.splice(i--, 1);\n\t        }\n\t    }\n\t    eve.on(\"raphael.remove\", stopAnimation);\n\t    eve.on(\"raphael.clear\", stopAnimation);\n\t    elproto.toString = function () {\n\t        return \"Rapha\\xebl\\u2019s object\";\n\t    };\n\n\t    // Set\n\t    var Set = function (items) {\n\t        this.items = [];\n\t        this.length = 0;\n\t        this.type = \"set\";\n\t        if (items) {\n\t            for (var i = 0, ii = items.length; i < ii; i++) {\n\t                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\n\t                    this[this.items.length] = this.items[this.items.length] = items[i];\n\t                    this.length++;\n\t                }\n\t            }\n\t        }\n\t    },\n\t    setproto = Set.prototype;\n\t    /*\\\n\t     * Set.push\n\t     [ method ]\n\t     **\n\t     * Adds each argument to the current set.\n\t     = (object) original element\n\t    \\*/\n\t    setproto.push = function () {\n\t        var item,\n\t            len;\n\t        for (var i = 0, ii = arguments.length; i < ii; i++) {\n\t            item = arguments[i];\n\t            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\n\t                len = this.items.length;\n\t                this[len] = this.items[len] = item;\n\t                this.length++;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.pop\n\t     [ method ]\n\t     **\n\t     * Removes last element and returns it.\n\t     = (object) element\n\t    \\*/\n\t    setproto.pop = function () {\n\t        this.length && delete this[this.length--];\n\t        return this.items.pop();\n\t    };\n\t    /*\\\n\t     * Set.forEach\n\t     [ method ]\n\t     **\n\t     * Executes given function for each element in the set.\n\t     *\n\t     * If function returns `false` it will stop loop running.\n\t     **\n\t     > Parameters\n\t     **\n\t     - callback (function) function to run\n\t     - thisArg (object) context object for the callback\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.forEach = function (callback, thisArg) {\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            if (callback.call(thisArg, this.items[i], i) === false) {\n\t                return this;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    for (var method in elproto) if (elproto[has](method)) {\n\t        setproto[method] = (function (methodname) {\n\t            return function () {\n\t                var arg = arguments;\n\t                return this.forEach(function (el) {\n\t                    el[methodname][apply](el, arg);\n\t                });\n\t            };\n\t        })(method);\n\t    }\n\t    setproto.attr = function (name, value) {\n\t        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\n\t            for (var j = 0, jj = name.length; j < jj; j++) {\n\t                this.items[j].attr(name[j]);\n\t            }\n\t        } else {\n\t            for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t                this.items[i].attr(name, value);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.clear\n\t     [ method ]\n\t     **\n\t     * Removes all elements from the set\n\t    \\*/\n\t    setproto.clear = function () {\n\t        while (this.length) {\n\t            this.pop();\n\t        }\n\t    };\n\t    /*\\\n\t     * Set.splice\n\t     [ method ]\n\t     **\n\t     * Removes given element from the set\n\t     **\n\t     > Parameters\n\t     **\n\t     - index (number) position of the deletion\n\t     - count (number) number of element to remove\n\t     - insertion… (object) #optional elements to insert\n\t     = (object) set elements that were deleted\n\t    \\*/\n\t    setproto.splice = function (index, count, insertion) {\n\t        index = index < 0 ? mmax(this.length + index, 0) : index;\n\t        count = mmax(0, mmin(this.length - index, count));\n\t        var tail = [],\n\t            todel = [],\n\t            args = [],\n\t            i;\n\t        for (i = 2; i < arguments.length; i++) {\n\t            args.push(arguments[i]);\n\t        }\n\t        for (i = 0; i < count; i++) {\n\t            todel.push(this[index + i]);\n\t        }\n\t        for (; i < this.length - index; i++) {\n\t            tail.push(this[index + i]);\n\t        }\n\t        var arglen = args.length;\n\t        for (i = 0; i < arglen + tail.length; i++) {\n\t            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n\t        }\n\t        i = this.items.length = this.length -= count - arglen;\n\t        while (this[i]) {\n\t            delete this[i++];\n\t        }\n\t        return new Set(todel);\n\t    };\n\t    /*\\\n\t     * Set.exclude\n\t     [ method ]\n\t     **\n\t     * Removes given element from the set\n\t     **\n\t     > Parameters\n\t     **\n\t     - element (object) element to remove\n\t     = (boolean) `true` if object was found & removed from the set\n\t    \\*/\n\t    setproto.exclude = function (el) {\n\t        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n\t            this.splice(i, 1);\n\t            return true;\n\t        }\n\t    };\n\t    setproto.animate = function (params, ms, easing, callback) {\n\t        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\n\t        var len = this.items.length,\n\t            i = len,\n\t            item,\n\t            set = this,\n\t            collector;\n\t        if (!len) {\n\t            return this;\n\t        }\n\t        callback && (collector = function () {\n\t            !--len && callback.call(set);\n\t        });\n\t        easing = R.is(easing, string) ? easing : collector;\n\t        var anim = R.animation(params, ms, easing, collector);\n\t        item = this.items[--i].animate(anim);\n\t        while (i--) {\n\t            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\n\t            (this.items[i] && !this.items[i].removed) || len--;\n\t        }\n\t        return this;\n\t    };\n\t    setproto.insertAfter = function (el) {\n\t        var i = this.items.length;\n\t        while (i--) {\n\t            this.items[i].insertAfter(el);\n\t        }\n\t        return this;\n\t    };\n\t    setproto.getBBox = function () {\n\t        var x = [],\n\t            y = [],\n\t            x2 = [],\n\t            y2 = [];\n\t        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n\t            var box = this.items[i].getBBox();\n\t            x.push(box.x);\n\t            y.push(box.y);\n\t            x2.push(box.x + box.width);\n\t            y2.push(box.y + box.height);\n\t        }\n\t        x = mmin[apply](0, x);\n\t        y = mmin[apply](0, y);\n\t        x2 = mmax[apply](0, x2);\n\t        y2 = mmax[apply](0, y2);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            x2: x2,\n\t            y2: y2,\n\t            width: x2 - x,\n\t            height: y2 - y\n\t        };\n\t    };\n\t    setproto.clone = function (s) {\n\t        s = this.paper.set();\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            s.push(this.items[i].clone());\n\t        }\n\t        return s;\n\t    };\n\t    setproto.toString = function () {\n\t        return \"Rapha\\xebl\\u2018s set\";\n\t    };\n\n\t    setproto.glow = function(glowConfig) {\n\t        var ret = this.paper.set();\n\t        this.forEach(function(shape, index){\n\t            var g = shape.glow(glowConfig);\n\t            if(g != null){\n\t                g.forEach(function(shape2, index2){\n\t                    ret.push(shape2);\n\t                });\n\t            }\n\t        });\n\t        return ret;\n\t    };\n\n\n\t    /*\\\n\t     * Set.isPointInside\n\t     [ method ]\n\t     **\n\t     * Determine if given point is inside this set’s elements\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x coordinate of the point\n\t     - y (number) y coordinate of the point\n\t     = (boolean) `true` if point is inside any of the set's elements\n\t     \\*/\n\t    setproto.isPointInside = function (x, y) {\n\t        var isPointInside = false;\n\t        this.forEach(function (el) {\n\t            if (el.isPointInside(x, y)) {\n\t                isPointInside = true;\n\t                return false; // stop loop\n\t            }\n\t        });\n\t        return isPointInside;\n\t    };\n\n\t    /*\\\n\t     * Raphael.registerFont\n\t     [ method ]\n\t     **\n\t     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\n\t     * Returns original parameter, so it could be used with chaining.\n\t     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\n\t     **\n\t     > Parameters\n\t     **\n\t     - font (object) the font to register\n\t     = (object) the font you passed in\n\t     > Usage\n\t     | Cufon.registerFont(Raphael.registerFont({…}));\n\t    \\*/\n\t    R.registerFont = function (font) {\n\t        if (!font.face) {\n\t            return font;\n\t        }\n\t        this.fonts = this.fonts || {};\n\t        var fontcopy = {\n\t                w: font.w,\n\t                face: {},\n\t                glyphs: {}\n\t            },\n\t            family = font.face[\"font-family\"];\n\t        for (var prop in font.face) if (font.face[has](prop)) {\n\t            fontcopy.face[prop] = font.face[prop];\n\t        }\n\t        if (this.fonts[family]) {\n\t            this.fonts[family].push(fontcopy);\n\t        } else {\n\t            this.fonts[family] = [fontcopy];\n\t        }\n\t        if (!font.svg) {\n\t            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\n\t            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\n\t                var path = font.glyphs[glyph];\n\t                fontcopy.glyphs[glyph] = {\n\t                    w: path.w,\n\t                    k: {},\n\t                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\n\t                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\n\t                        }) + \"z\"\n\t                };\n\t                if (path.k) {\n\t                    for (var k in path.k) if (path[has](k)) {\n\t                        fontcopy.glyphs[glyph].k[k] = path.k[k];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return font;\n\t    };\n\t    /*\\\n\t     * Paper.getFont\n\t     [ method ]\n\t     **\n\t     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\n\t     **\n\t     > Parameters\n\t     **\n\t     - family (string) font family name or any word from it\n\t     - weight (string) #optional font weight\n\t     - style (string) #optional font style\n\t     - stretch (string) #optional font stretch\n\t     = (object) the font object\n\t     > Usage\n\t     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\n\t    \\*/\n\t    paperproto.getFont = function (family, weight, style, stretch) {\n\t        stretch = stretch || \"normal\";\n\t        style = style || \"normal\";\n\t        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\n\t        if (!R.fonts) {\n\t            return;\n\t        }\n\t        var font = R.fonts[family];\n\t        if (!font) {\n\t            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\n\t            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\n\t                if (name.test(fontName)) {\n\t                    font = R.fonts[fontName];\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        var thefont;\n\t        if (font) {\n\t            for (var i = 0, ii = font.length; i < ii; i++) {\n\t                thefont = font[i];\n\t                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return thefont;\n\t    };\n\t    /*\\\n\t     * Paper.print\n\t     [ method ]\n\t     **\n\t     * Creates path that represent given text written using given font at given position with given size.\n\t     * Result of the method is path element that contains whole text as a separate path.\n\t     **\n\t     > Parameters\n\t     **\n\t     - x (number) x position of the text\n\t     - y (number) y position of the text\n\t     - string (string) text to print\n\t     - font (object) font object, see @Paper.getFont\n\t     - size (number) #optional size of the font, default is `16`\n\t     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\n\t     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\n\t     - line_spacing (number) #optional number in range `1..3`, default is `1`\n\t     = (object) resulting path element, which consist of all letters\n\t     > Usage\n\t     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\n\t    \\*/\n\t    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\n\t        origin = origin || \"middle\"; // baseline|middle\n\t        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\n\t        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\n\t        var letters = Str(string)[split](E),\n\t            shift = 0,\n\t            notfirst = 0,\n\t            path = E,\n\t            scale;\n\t        R.is(font, \"string\") && (font = this.getFont(font));\n\t        if (font) {\n\t            scale = (size || 16) / font.face[\"units-per-em\"];\n\t            var bb = font.face.bbox[split](separator),\n\t                top = +bb[0],\n\t                lineHeight = bb[3] - bb[1],\n\t                shifty = 0,\n\t                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\n\t            for (var i = 0, ii = letters.length; i < ii; i++) {\n\t                if (letters[i] == \"\\n\") {\n\t                    shift = 0;\n\t                    curr = 0;\n\t                    notfirst = 0;\n\t                    shifty += lineHeight * line_spacing;\n\t                } else {\n\t                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\n\t                        curr = font.glyphs[letters[i]];\n\t                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\n\t                    notfirst = 1;\n\t                }\n\t                if (curr && curr.d) {\n\t                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\n\t                }\n\t            }\n\t        }\n\t        return this.path(path).attr({\n\t            fill: \"#000\",\n\t            stroke: \"none\"\n\t        });\n\t    };\n\n\t    /*\\\n\t     * Paper.add\n\t     [ method ]\n\t     **\n\t     * Imports elements in JSON array in format `{type: type, <attributes>}`\n\t     **\n\t     > Parameters\n\t     **\n\t     - json (array)\n\t     = (object) resulting set of imported elements\n\t     > Usage\n\t     | paper.add([\n\t     |     {\n\t     |         type: \"circle\",\n\t     |         cx: 10,\n\t     |         cy: 10,\n\t     |         r: 5\n\t     |     },\n\t     |     {\n\t     |         type: \"rect\",\n\t     |         x: 10,\n\t     |         y: 10,\n\t     |         width: 10,\n\t     |         height: 10,\n\t     |         fill: \"#fc0\"\n\t     |     }\n\t     | ]);\n\t    \\*/\n\t    paperproto.add = function (json) {\n\t        if (R.is(json, \"array\")) {\n\t            var res = this.set(),\n\t                i = 0,\n\t                ii = json.length,\n\t                j;\n\t            for (; i < ii; i++) {\n\t                j = json[i] || {};\n\t                elements[has](j.type) && res.push(this[j.type]().attr(j));\n\t            }\n\t        }\n\t        return res;\n\t    };\n\n\t    /*\\\n\t     * Raphael.format\n\t     [ method ]\n\t     **\n\t     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\n\t     **\n\t     > Parameters\n\t     **\n\t     - token (string) string to format\n\t     - … (string) rest of arguments will be treated as parameters for replacement\n\t     = (string) formated string\n\t     > Usage\n\t     | var x = 10,\n\t     |     y = 20,\n\t     |     width = 40,\n\t     |     height = 50;\n\t     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n\t     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\n\t    \\*/\n\t    R.format = function (token, params) {\n\t        var args = R.is(params, array) ? [0][concat](params) : arguments;\n\t        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\n\t            return args[++i] == null ? E : args[i];\n\t        }));\n\t        return token || E;\n\t    };\n\t    /*\\\n\t     * Raphael.fullfill\n\t     [ method ]\n\t     **\n\t     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\n\t     **\n\t     > Parameters\n\t     **\n\t     - token (string) string to format\n\t     - json (object) object which properties will be used as a replacement\n\t     = (string) formated string\n\t     > Usage\n\t     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n\t     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n\t     |     x: 10,\n\t     |     y: 20,\n\t     |     dim: {\n\t     |         width: 40,\n\t     |         height: 50,\n\t     |         \"negative width\": -40\n\t     |     }\n\t     | }));\n\t    \\*/\n\t    R.fullfill = (function () {\n\t        var tokenRegex = /\\{([^\\}]+)\\}/g,\n\t            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n\t            replacer = function (all, key, obj) {\n\t                var res = obj;\n\t                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n\t                    name = name || quotedName;\n\t                    if (res) {\n\t                        if (name in res) {\n\t                            res = res[name];\n\t                        }\n\t                        typeof res == \"function\" && isFunc && (res = res());\n\t                    }\n\t                });\n\t                res = (res == null || res == obj ? all : res) + \"\";\n\t                return res;\n\t            };\n\t        return function (str, obj) {\n\t            return String(str).replace(tokenRegex, function (all, key) {\n\t                return replacer(all, key, obj);\n\t            });\n\t        };\n\t    })();\n\t    /*\\\n\t     * Raphael.ninja\n\t     [ method ]\n\t     **\n\t     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\n\t     * Beware, that in this case plugins could stop working, because they are depending on global variable existence.\n\t     **\n\t     = (object) Raphael object\n\t     > Usage\n\t     | (function (local_raphael) {\n\t     |     var paper = local_raphael(10, 10, 320, 200);\n\t     |     …\n\t     | })(Raphael.ninja());\n\t    \\*/\n\t    R.ninja = function () {\n\t        if (oldRaphael.was) {\n\t            g.win.Raphael = oldRaphael.is;\n\t        } else {\n\t            // IE8 raises an error when deleting window property\n\t            window.Raphael = undefined;\n\t            try {\n\t                delete window.Raphael;\n\t            } catch(e) {}\n\t        }\n\t        return R;\n\t    };\n\t    /*\\\n\t     * Raphael.st\n\t     [ property (object) ]\n\t     **\n\t     * You can add your own method to elements and sets. It is wise to add a set method for each element method\n\t     * you added, so you will be able to call the same method on sets too.\n\t     **\n\t     * See also @Raphael.el.\n\t     > Usage\n\t     | Raphael.el.red = function () {\n\t     |     this.attr({fill: \"#f00\"});\n\t     | };\n\t     | Raphael.st.red = function () {\n\t     |     this.forEach(function (el) {\n\t     |         el.red();\n\t     |     });\n\t     | };\n\t     | // then use it\n\t     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\n\t    \\*/\n\t    R.st = setproto;\n\n\t    eve.on(\"raphael.DOMload\", function () {\n\t        loaded = true;\n\t    });\n\n\t    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\n\t    (function (doc, loaded, f) {\n\t        if (doc.readyState == null && doc.addEventListener){\n\t            doc.addEventListener(loaded, f = function () {\n\t                doc.removeEventListener(loaded, f, false);\n\t                doc.readyState = \"complete\";\n\t            }, false);\n\t            doc.readyState = \"loading\";\n\t        }\n\t        function isLoaded() {\n\t            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\n\t        }\n\t        isLoaded();\n\t    })(document, \"DOMContentLoaded\");\n\n\t    return R;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t// \n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t// \n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t// \n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t// ┌────────────────────────────────────────────────────────────┐ \\\\\n\t// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n\t// ├────────────────────────────────────────────────────────────┤ \\\\\n\t// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n\t// └────────────────────────────────────────────────────────────┘ \\\\\n\n\t(function (glob) {\n\t    var version = \"0.5.0\",\n\t        has = \"hasOwnProperty\",\n\t        separator = /[\\.\\/]/,\n\t        comaseparator = /\\s*,\\s*/,\n\t        wildcard = \"*\",\n\t        fun = function () {},\n\t        numsort = function (a, b) {\n\t            return a - b;\n\t        },\n\t        current_event,\n\t        stop,\n\t        events = {n: {}},\n\t        firstDefined = function () {\n\t            for (var i = 0, ii = this.length; i < ii; i++) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        lastDefined = function () {\n\t            var i = this.length;\n\t            while (--i) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        objtos = Object.prototype.toString,\n\t        Str = String,\n\t        isArray = Array.isArray || function (ar) {\n\t            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n\t        };\n\t    /*\\\n\t     * eve\n\t     [ method ]\n\n\t     * Fires event with given `name`, given scope and other parameters.\n\n\t     > Arguments\n\n\t     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n\t     - scope (object) context for the event handlers\n\t     - varargs (...) the rest of arguments will be sent to event handlers\n\n\t     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n\t    \\*/\n\t        eve = function (name, scope) {\n\t            var e = events,\n\t                oldstop = stop,\n\t                args = Array.prototype.slice.call(arguments, 2),\n\t                listeners = eve.listeners(name),\n\t                z = 0,\n\t                f = false,\n\t                l,\n\t                indexed = [],\n\t                queue = {},\n\t                out = [],\n\t                ce = current_event,\n\t                errors = [];\n\t            out.firstDefined = firstDefined;\n\t            out.lastDefined = lastDefined;\n\t            current_event = name;\n\t            stop = 0;\n\t            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n\t                indexed.push(listeners[i].zIndex);\n\t                if (listeners[i].zIndex < 0) {\n\t                    queue[listeners[i].zIndex] = listeners[i];\n\t                }\n\t            }\n\t            indexed.sort(numsort);\n\t            while (indexed[z] < 0) {\n\t                l = queue[indexed[z++]];\n\t                out.push(l.apply(scope, args));\n\t                if (stop) {\n\t                    stop = oldstop;\n\t                    return out;\n\t                }\n\t            }\n\t            for (i = 0; i < ii; i++) {\n\t                l = listeners[i];\n\t                if (\"zIndex\" in l) {\n\t                    if (l.zIndex == indexed[z]) {\n\t                        out.push(l.apply(scope, args));\n\t                        if (stop) {\n\t                            break;\n\t                        }\n\t                        do {\n\t                            z++;\n\t                            l = queue[indexed[z]];\n\t                            l && out.push(l.apply(scope, args));\n\t                            if (stop) {\n\t                                break;\n\t                            }\n\t                        } while (l)\n\t                    } else {\n\t                        queue[l.zIndex] = l;\n\t                    }\n\t                } else {\n\t                    out.push(l.apply(scope, args));\n\t                    if (stop) {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            stop = oldstop;\n\t            current_event = ce;\n\t            return out;\n\t        };\n\t        // Undocumented. Debug only.\n\t        eve._events = events;\n\t    /*\\\n\t     * eve.listeners\n\t     [ method ]\n\n\t     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n\t     > Arguments\n\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n\t     = (array) array of event handlers\n\t    \\*/\n\t    eve.listeners = function (name) {\n\t        var names = isArray(name) ? name : name.split(separator),\n\t            e = events,\n\t            item,\n\t            items,\n\t            k,\n\t            i,\n\t            ii,\n\t            j,\n\t            jj,\n\t            nes,\n\t            es = [e],\n\t            out = [];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            nes = [];\n\t            for (j = 0, jj = es.length; j < jj; j++) {\n\t                e = es[j].n;\n\t                items = [e[names[i]], e[wildcard]];\n\t                k = 2;\n\t                while (k--) {\n\t                    item = items[k];\n\t                    if (item) {\n\t                        nes.push(item);\n\t                        out = out.concat(item.f || []);\n\t                    }\n\t                }\n\t            }\n\t            es = nes;\n\t        }\n\t        return out;\n\t    };\n\t    /*\\\n\t     * eve.separator\n\t     [ method ]\n\n\t     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n\t     * here. Be aware that if you pass a string longer than one character it will be treated as\n\t     * a list of characters.\n\n\t     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n\t    \\*/\n\t    eve.separator = function (sep) {\n\t        if (sep) {\n\t            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n\t            sep = \"[\" + sep + \"]\";\n\t            separator = new RegExp(sep);\n\t        } else {\n\t            separator = /[\\.\\/]/;\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.on\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n\t     | eve.on(\"*.under.*\", f);\n\t     | eve(\"mouse.under.floor\"); // triggers f\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     - name (array) if you don’t want to use separators, you can use array of strings\n\t     - f (function) event handler function\n\t     **\n\t     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n\t     > Example:\n\t     | eve.on(\"mouse\", eatIt)(2);\n\t     | eve.on(\"mouse\", scream);\n\t     | eve.on(\"mouse\", catchIt)(1);\n\t     * This will ensure that `catchIt` function will be called before `eatIt`.\n\t     *\n\t     * If you want to put your handler before non-indexed handlers, specify a negative value.\n\t     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n\t    \\*/\n\t    eve.on = function (name, f) {\n\t        if (typeof f != \"function\") {\n\t            return function () {};\n\t        }\n\t        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n\t        for (var i = 0, ii = names.length; i < ii; i++) {\n\t            (function (name) {\n\t                var names = isArray(name) ? name : Str(name).split(separator),\n\t                    e = events,\n\t                    exist;\n\t                for (var i = 0, ii = names.length; i < ii; i++) {\n\t                    e = e.n;\n\t                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n\t                }\n\t                e.f = e.f || [];\n\t                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n\t                    exist = true;\n\t                    break;\n\t                }\n\t                !exist && e.f.push(f);\n\t            }(names[i]));\n\t        }\n\t        return function (zIndex) {\n\t            if (+zIndex == +zIndex) {\n\t                f.zIndex = +zIndex;\n\t            }\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.f\n\t     [ method ]\n\t     **\n\t     * Returns function that will fire given event with optional arguments.\n\t     * Arguments that will be passed to the result function will be also\n\t     * concated to the list of final arguments.\n\t     | el.onclick = eve.f(\"click\", 1, 2);\n\t     | eve.on(\"click\", function (a, b, c) {\n\t     |     console.log(a, b, c); // 1, 2, [event object]\n\t     | });\n\t     > Arguments\n\t     - event (string) event name\n\t     - varargs (…) and any other arguments\n\t     = (function) possible event handler function\n\t    \\*/\n\t    eve.f = function (event) {\n\t        var attrs = [].slice.call(arguments, 1);\n\t        return function () {\n\t            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.stop\n\t     [ method ]\n\t     **\n\t     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n\t    \\*/\n\t    eve.stop = function () {\n\t        stop = 1;\n\t    };\n\t    /*\\\n\t     * eve.nt\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     > Arguments\n\t     **\n\t     - subname (string) #optional subname of the event\n\t     **\n\t     = (string) name of the event, if `subname` is not specified\n\t     * or\n\t     = (boolean) `true`, if current event’s name contains `subname`\n\t    \\*/\n\t    eve.nt = function (subname) {\n\t        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n\t        if (subname) {\n\t            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n\t        }\n\t        return cur;\n\t    };\n\t    /*\\\n\t     * eve.nts\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     **\n\t     = (array) names of the event\n\t    \\*/\n\t    eve.nts = function () {\n\t        return isArray(current_event) ? current_event : current_event.split(separator);\n\t    };\n\t    /*\\\n\t     * eve.off\n\t     [ method ]\n\t     **\n\t     * Removes given function from the list of event listeners assigned to given name.\n\t     * If no arguments specified all the events will be cleared.\n\t     **\n\t     > Arguments\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t    \\*/\n\t    /*\\\n\t     * eve.unbind\n\t     [ method ]\n\t     **\n\t     * See @eve.off\n\t    \\*/\n\t    eve.off = eve.unbind = function (name, f) {\n\t        if (!name) {\n\t            eve._events = events = {n: {}};\n\t            return;\n\t        }\n\t        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n\t        if (names.length > 1) {\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                eve.off(names[i], f);\n\t            }\n\t            return;\n\t        }\n\t        names = isArray(name) ? name : Str(name).split(separator);\n\t        var e,\n\t            key,\n\t            splice,\n\t            i, ii, j, jj,\n\t            cur = [events];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            for (j = 0; j < cur.length; j += splice.length - 2) {\n\t                splice = [j, 1];\n\t                e = cur[j].n;\n\t                if (names[i] != wildcard) {\n\t                    if (e[names[i]]) {\n\t                        splice.push(e[names[i]]);\n\t                    }\n\t                } else {\n\t                    for (key in e) if (e[has](key)) {\n\t                        splice.push(e[key]);\n\t                    }\n\t                }\n\t                cur.splice.apply(cur, splice);\n\t            }\n\t        }\n\t        for (i = 0, ii = cur.length; i < ii; i++) {\n\t            e = cur[i];\n\t            while (e.n) {\n\t                if (f) {\n\t                    if (e.f) {\n\t                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n\t                            e.f.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !e.f.length && delete e.f;\n\t                    }\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        var funcs = e.n[key].f;\n\t                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n\t                            funcs.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !funcs.length && delete e.n[key].f;\n\t                    }\n\t                } else {\n\t                    delete e.f;\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        delete e.n[key].f;\n\t                    }\n\t                }\n\t                e = e.n;\n\t            }\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.once\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name to only run once then unbind itself.\n\t     | eve.once(\"login\", f);\n\t     | eve(\"login\"); // triggers f\n\t     | eve(\"login\"); // no listeners\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     > Arguments\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     = (function) same return function as @eve.on\n\t    \\*/\n\t    eve.once = function (name, f) {\n\t        var f2 = function () {\n\t            eve.off(name, f2);\n\t            return f.apply(this, arguments);\n\t        };\n\t        return eve.on(name, f2);\n\t    };\n\t    /*\\\n\t     * eve.version\n\t     [ property (string) ]\n\t     **\n\t     * Current version of the library.\n\t    \\*/\n\t    eve.version = version;\n\t    eve.toString = function () {\n\t        return \"You are running Eve \" + version;\n\t    };\n\t    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : ( true ? (!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() { return eve; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))) : (glob.eve = eve));\n\t})(this);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(R) {\n\t    if (R && !R.svg) {\n\t        return;\n\t    }\n\n\t    var has = \"hasOwnProperty\",\n\t        Str = String,\n\t        toFloat = parseFloat,\n\t        toInt = parseInt,\n\t        math = Math,\n\t        mmax = math.max,\n\t        abs = math.abs,\n\t        pow = math.pow,\n\t        separator = /[, ]+/,\n\t        eve = R.eve,\n\t        E = \"\",\n\t        S = \" \";\n\t    var xlink = \"http://www.w3.org/1999/xlink\",\n\t        markers = {\n\t            block: \"M5,0 0,2.5 5,5z\",\n\t            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\n\t            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\n\t            open: \"M6,1 1,3.5 6,6\",\n\t            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\n\t        },\n\t        markerCounter = {};\n\t    R.toString = function () {\n\t        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\n\t    };\n\t    var $ = function (el, attr) {\n\t        if (attr) {\n\t            if (typeof el == \"string\") {\n\t                el = $(el);\n\t            }\n\t            for (var key in attr) if (attr[has](key)) {\n\t                if (key.substring(0, 6) == \"xlink:\") {\n\t                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\n\t                } else {\n\t                    el.setAttribute(key, Str(attr[key]));\n\t                }\n\t            }\n\t        } else {\n\t            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\n\t            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\n\t        }\n\t        return el;\n\t    },\n\t    addGradientFill = function (element, gradient) {\n\t        var type = \"linear\",\n\t            id = element.id + gradient,\n\t            fx = .5, fy = .5,\n\t            o = element.node,\n\t            SVG = element.paper,\n\t            s = o.style,\n\t            el = R._g.doc.getElementById(id);\n\t        if (!el) {\n\t            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\n\t                type = \"radial\";\n\t                if (_fx && _fy) {\n\t                    fx = toFloat(_fx);\n\t                    fy = toFloat(_fy);\n\t                    var dir = ((fy > .5) * 2 - 1);\n\t                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\n\t                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\n\t                        fy != .5 &&\n\t                        (fy = fy.toFixed(5) - 1e-5 * dir);\n\t                }\n\t                return E;\n\t            });\n\t            gradient = gradient.split(/\\s*\\-\\s*/);\n\t            if (type == \"linear\") {\n\t                var angle = gradient.shift();\n\t                angle = -toFloat(angle);\n\t                if (isNaN(angle)) {\n\t                    return null;\n\t                }\n\t                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\n\t                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\n\t                vector[2] *= max;\n\t                vector[3] *= max;\n\t                if (vector[2] < 0) {\n\t                    vector[0] = -vector[2];\n\t                    vector[2] = 0;\n\t                }\n\t                if (vector[3] < 0) {\n\t                    vector[1] = -vector[3];\n\t                    vector[3] = 0;\n\t                }\n\t            }\n\t            var dots = R._parseDots(gradient);\n\t            if (!dots) {\n\t                return null;\n\t            }\n\t            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\n\n\t            if (element.gradient && id != element.gradient.id) {\n\t                SVG.defs.removeChild(element.gradient);\n\t                delete element.gradient;\n\t            }\n\n\t            if (!element.gradient) {\n\t                el = $(type + \"Gradient\", {id: id});\n\t                element.gradient = el;\n\t                $(el, type == \"radial\" ? {\n\t                    fx: fx,\n\t                    fy: fy\n\t                } : {\n\t                    x1: vector[0],\n\t                    y1: vector[1],\n\t                    x2: vector[2],\n\t                    y2: vector[3],\n\t                    gradientTransform: element.matrix.invert()\n\t                });\n\t                SVG.defs.appendChild(el);\n\t                for (var i = 0, ii = dots.length; i < ii; i++) {\n\t                    el.appendChild($(\"stop\", {\n\t                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\n\t                        \"stop-color\": dots[i].color || \"#fff\",\n\t                        \"stop-opacity\": isFinite(dots[i].opacity) ? dots[i].opacity : 1\n\t                    }));\n\t                }\n\t            }\n\t        }\n\t        $(o, {\n\t            fill: fillurl(id),\n\t            opacity: 1,\n\t            \"fill-opacity\": 1\n\t        });\n\t        s.fill = E;\n\t        s.opacity = 1;\n\t        s.fillOpacity = 1;\n\t        return 1;\n\t    },\n\t    isIE9or10 = function () {\n\t      var mode = document.documentMode;\n\t      return mode && (mode === 9 || mode === 10);\n\t    },\n\t    fillurl = function (id) {\n\t      if (isIE9or10()) {\n\t          return \"url('#\" + id + \"')\";\n\t      }\n\t      var location = document.location;\n\t      var locationString = (\n\t          location.protocol + '//' +\n\t          location.host +\n\t          location.pathname +\n\t          location.search\n\t      );\n\t      return \"url('\" + locationString + \"#\" + id + \"')\";\n\t    },\n\t    updatePosition = function (o) {\n\t        var bbox = o.getBBox(1);\n\t        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\n\t    },\n\t    addArrow = function (o, value, isEnd) {\n\t        if (o.type == \"path\") {\n\t            var values = Str(value).toLowerCase().split(\"-\"),\n\t                p = o.paper,\n\t                se = isEnd ? \"end\" : \"start\",\n\t                node = o.node,\n\t                attrs = o.attrs,\n\t                stroke = attrs[\"stroke-width\"],\n\t                i = values.length,\n\t                type = \"classic\",\n\t                from,\n\t                to,\n\t                dx,\n\t                refX,\n\t                attr,\n\t                w = 3,\n\t                h = 3,\n\t                t = 5;\n\t            while (i--) {\n\t                switch (values[i]) {\n\t                    case \"block\":\n\t                    case \"classic\":\n\t                    case \"oval\":\n\t                    case \"diamond\":\n\t                    case \"open\":\n\t                    case \"none\":\n\t                        type = values[i];\n\t                        break;\n\t                    case \"wide\": h = 5; break;\n\t                    case \"narrow\": h = 2; break;\n\t                    case \"long\": w = 5; break;\n\t                    case \"short\": w = 2; break;\n\t                }\n\t            }\n\t            if (type == \"open\") {\n\t                w += 2;\n\t                h += 2;\n\t                t += 2;\n\t                dx = 1;\n\t                refX = isEnd ? 4 : 1;\n\t                attr = {\n\t                    fill: \"none\",\n\t                    stroke: attrs.stroke\n\t                };\n\t            } else {\n\t                refX = dx = w / 2;\n\t                attr = {\n\t                    fill: attrs.stroke,\n\t                    stroke: \"none\"\n\t                };\n\t            }\n\t            if (o._.arrows) {\n\t                if (isEnd) {\n\t                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\n\t                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\n\t                } else {\n\t                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\n\t                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\n\t                }\n\t            } else {\n\t                o._.arrows = {};\n\t            }\n\t            if (type != \"none\") {\n\t                var pathId = \"raphael-marker-\" + type,\n\t                    markerId = \"raphael-marker-\" + se + type + w + h + \"-obj\" + o.id;\n\t                if (!R._g.doc.getElementById(pathId)) {\n\t                    p.defs.appendChild($($(\"path\"), {\n\t                        \"stroke-linecap\": \"round\",\n\t                        d: markers[type],\n\t                        id: pathId\n\t                    }));\n\t                    markerCounter[pathId] = 1;\n\t                } else {\n\t                    markerCounter[pathId]++;\n\t                }\n\t                var marker = R._g.doc.getElementById(markerId),\n\t                    use;\n\t                if (!marker) {\n\t                    marker = $($(\"marker\"), {\n\t                        id: markerId,\n\t                        markerHeight: h,\n\t                        markerWidth: w,\n\t                        orient: \"auto\",\n\t                        refX: refX,\n\t                        refY: h / 2\n\t                    });\n\t                    use = $($(\"use\"), {\n\t                        \"xlink:href\": \"#\" + pathId,\n\t                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\n\t                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\n\t                    });\n\t                    marker.appendChild(use);\n\t                    p.defs.appendChild(marker);\n\t                    markerCounter[markerId] = 1;\n\t                } else {\n\t                    markerCounter[markerId]++;\n\t                    use = marker.getElementsByTagName(\"use\")[0];\n\t                }\n\t                $(use, attr);\n\t                var delta = dx * (type != \"diamond\" && type != \"oval\");\n\t                if (isEnd) {\n\t                    from = o._.arrows.startdx * stroke || 0;\n\t                    to = R.getTotalLength(attrs.path) - delta * stroke;\n\t                } else {\n\t                    from = delta * stroke;\n\t                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n\t                }\n\t                attr = {};\n\t                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\n\t                if (to || from) {\n\t                    attr.d = R.getSubpath(attrs.path, from, to);\n\t                }\n\t                $(node, attr);\n\t                o._.arrows[se + \"Path\"] = pathId;\n\t                o._.arrows[se + \"Marker\"] = markerId;\n\t                o._.arrows[se + \"dx\"] = delta;\n\t                o._.arrows[se + \"Type\"] = type;\n\t                o._.arrows[se + \"String\"] = value;\n\t            } else {\n\t                if (isEnd) {\n\t                    from = o._.arrows.startdx * stroke || 0;\n\t                    to = R.getTotalLength(attrs.path) - from;\n\t                } else {\n\t                    from = 0;\n\t                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n\t                }\n\t                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\n\t                delete o._.arrows[se + \"Path\"];\n\t                delete o._.arrows[se + \"Marker\"];\n\t                delete o._.arrows[se + \"dx\"];\n\t                delete o._.arrows[se + \"Type\"];\n\t                delete o._.arrows[se + \"String\"];\n\t            }\n\t            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\n\t                var item = R._g.doc.getElementById(attr);\n\t                item && item.parentNode.removeChild(item);\n\t            }\n\t        }\n\t    },\n\t    dasharray = {\n\t        \"-\": [3, 1],\n\t        \".\": [1, 1],\n\t        \"-.\": [3, 1, 1, 1],\n\t        \"-..\": [3, 1, 1, 1, 1, 1],\n\t        \". \": [1, 3],\n\t        \"- \": [4, 3],\n\t        \"--\": [8, 3],\n\t        \"- .\": [4, 3, 1, 3],\n\t        \"--.\": [8, 3, 1, 3],\n\t        \"--..\": [8, 3, 1, 3, 1, 3]\n\t    },\n\t    addDashes = function (o, value, params) {\n\t        value = dasharray[Str(value).toLowerCase()];\n\t        if (value) {\n\t            var width = o.attrs[\"stroke-width\"] || \"1\",\n\t                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\n\t                dashes = [],\n\t                i = value.length;\n\t            while (i--) {\n\t                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\n\t            }\n\t            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\n\t        }\n\t        else {\n\t          $(o.node, {\"stroke-dasharray\": \"none\"});\n\t        }\n\t    },\n\t    setFillAndStroke = function (o, params) {\n\t        var node = o.node,\n\t            attrs = o.attrs,\n\t            vis = node.style.visibility;\n\t        node.style.visibility = \"hidden\";\n\t        for (var att in params) {\n\t            if (params[has](att)) {\n\t                if (!R._availableAttrs[has](att)) {\n\t                    continue;\n\t                }\n\t                var value = params[att];\n\t                attrs[att] = value;\n\t                switch (att) {\n\t                    case \"blur\":\n\t                        o.blur(value);\n\t                        break;\n\t                    case \"title\":\n\t                        var title = node.getElementsByTagName(\"title\");\n\n\t                        // Use the existing <title>.\n\t                        if (title.length && (title = title[0])) {\n\t                          title.firstChild.nodeValue = value;\n\t                        } else {\n\t                          title = $(\"title\");\n\t                          var val = R._g.doc.createTextNode(value);\n\t                          title.appendChild(val);\n\t                          node.appendChild(title);\n\t                        }\n\t                        break;\n\t                    case \"href\":\n\t                    case \"target\":\n\t                        var pn = node.parentNode;\n\t                        if (pn.tagName.toLowerCase() != \"a\") {\n\t                            var hl = $(\"a\");\n\t                            pn.insertBefore(hl, node);\n\t                            hl.appendChild(node);\n\t                            pn = hl;\n\t                        }\n\t                        if (att == \"target\") {\n\t                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\n\t                        } else {\n\t                            pn.setAttributeNS(xlink, att, value);\n\t                        }\n\t                        break;\n\t                    case \"cursor\":\n\t                        node.style.cursor = value;\n\t                        break;\n\t                    case \"transform\":\n\t                        o.transform(value);\n\t                        break;\n\t                    case \"arrow-start\":\n\t                        addArrow(o, value);\n\t                        break;\n\t                    case \"arrow-end\":\n\t                        addArrow(o, value, 1);\n\t                        break;\n\t                    case \"clip-rect\":\n\t                        var rect = Str(value).split(separator);\n\t                        if (rect.length == 4) {\n\t                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\n\t                            var el = $(\"clipPath\"),\n\t                                rc = $(\"rect\");\n\t                            el.id = R.createUUID();\n\t                            $(rc, {\n\t                                x: rect[0],\n\t                                y: rect[1],\n\t                                width: rect[2],\n\t                                height: rect[3]\n\t                            });\n\t                            el.appendChild(rc);\n\t                            o.paper.defs.appendChild(el);\n\t                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\n\t                            o.clip = rc;\n\t                        }\n\t                        if (!value) {\n\t                            var path = node.getAttribute(\"clip-path\");\n\t                            if (path) {\n\t                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\n\t                                clip && clip.parentNode.removeChild(clip);\n\t                                $(node, {\"clip-path\": E});\n\t                                delete o.clip;\n\t                            }\n\t                        }\n\t                    break;\n\t                    case \"path\":\n\t                        if (o.type == \"path\") {\n\t                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\n\t                            o._.dirty = 1;\n\t                            if (o._.arrows) {\n\t                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n\t                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n\t                            }\n\t                        }\n\t                        break;\n\t                    case \"width\":\n\t                        node.setAttribute(att, value);\n\t                        o._.dirty = 1;\n\t                        if (attrs.fx) {\n\t                            att = \"x\";\n\t                            value = attrs.x;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    case \"x\":\n\t                        if (attrs.fx) {\n\t                            value = -attrs.x - (attrs.width || 0);\n\t                        }\n\t                    case \"rx\":\n\t                        if (att == \"rx\" && o.type == \"rect\") {\n\t                            break;\n\t                        }\n\t                    case \"cx\":\n\t                        node.setAttribute(att, value);\n\t                        o.pattern && updatePosition(o);\n\t                        o._.dirty = 1;\n\t                        break;\n\t                    case \"height\":\n\t                        node.setAttribute(att, value);\n\t                        o._.dirty = 1;\n\t                        if (attrs.fy) {\n\t                            att = \"y\";\n\t                            value = attrs.y;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    case \"y\":\n\t                        if (attrs.fy) {\n\t                            value = -attrs.y - (attrs.height || 0);\n\t                        }\n\t                    case \"ry\":\n\t                        if (att == \"ry\" && o.type == \"rect\") {\n\t                            break;\n\t                        }\n\t                    case \"cy\":\n\t                        node.setAttribute(att, value);\n\t                        o.pattern && updatePosition(o);\n\t                        o._.dirty = 1;\n\t                        break;\n\t                    case \"r\":\n\t                        if (o.type == \"rect\") {\n\t                            $(node, {rx: value, ry: value});\n\t                        } else {\n\t                            node.setAttribute(att, value);\n\t                        }\n\t                        o._.dirty = 1;\n\t                        break;\n\t                    case \"src\":\n\t                        if (o.type == \"image\") {\n\t                            node.setAttributeNS(xlink, \"href\", value);\n\t                        }\n\t                        break;\n\t                    case \"stroke-width\":\n\t                        if (o._.sx != 1 || o._.sy != 1) {\n\t                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\n\t                        }\n\t                        node.setAttribute(att, value);\n\t                        if (attrs[\"stroke-dasharray\"]) {\n\t                            addDashes(o, attrs[\"stroke-dasharray\"], params);\n\t                        }\n\t                        if (o._.arrows) {\n\t                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n\t                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n\t                        }\n\t                        break;\n\t                    case \"stroke-dasharray\":\n\t                        addDashes(o, value, params);\n\t                        break;\n\t                    case \"fill\":\n\t                        var isURL = Str(value).match(R._ISURL);\n\t                        if (isURL) {\n\t                            el = $(\"pattern\");\n\t                            var ig = $(\"image\");\n\t                            el.id = R.createUUID();\n\t                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\n\t                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\n\t                            el.appendChild(ig);\n\n\t                            (function (el) {\n\t                                R._preload(isURL[1], function () {\n\t                                    var w = this.offsetWidth,\n\t                                        h = this.offsetHeight;\n\t                                    $(el, {width: w, height: h});\n\t                                    $(ig, {width: w, height: h});\n\t                                });\n\t                            })(el);\n\t                            o.paper.defs.appendChild(el);\n\t                            $(node, {fill: \"url(#\" + el.id + \")\"});\n\t                            o.pattern = el;\n\t                            o.pattern && updatePosition(o);\n\t                            break;\n\t                        }\n\t                        var clr = R.getRGB(value);\n\t                        if (!clr.error) {\n\t                            delete params.gradient;\n\t                            delete attrs.gradient;\n\t                            !R.is(attrs.opacity, \"undefined\") &&\n\t                                R.is(params.opacity, \"undefined\") &&\n\t                                $(node, {opacity: attrs.opacity});\n\t                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\n\t                                R.is(params[\"fill-opacity\"], \"undefined\") &&\n\t                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\n\t                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\n\t                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\n\t                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n\t                                if (gradient) {\n\t                                    var stops = gradient.getElementsByTagName(\"stop\");\n\t                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\n\t                                }\n\t                            }\n\t                            attrs.gradient = value;\n\t                            attrs.fill = \"none\";\n\t                            break;\n\t                        }\n\t                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n\t                    case \"stroke\":\n\t                        clr = R.getRGB(value);\n\t                        node.setAttribute(att, clr.hex);\n\t                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n\t                        if (att == \"stroke\" && o._.arrows) {\n\t                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n\t                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n\t                        }\n\t                        break;\n\t                    case \"gradient\":\n\t                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\n\t                        break;\n\t                    case \"opacity\":\n\t                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\n\t                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\n\t                        }\n\t                        // fall\n\t                    case \"fill-opacity\":\n\t                        if (attrs.gradient) {\n\t                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n\t                            if (gradient) {\n\t                                stops = gradient.getElementsByTagName(\"stop\");\n\t                                $(stops[stops.length - 1], {\"stop-opacity\": value});\n\t                            }\n\t                            break;\n\t                        }\n\t                    default:\n\t                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\n\t                        var cssrule = att.replace(/(\\-.)/g, function (w) {\n\t                            return w.substring(1).toUpperCase();\n\t                        });\n\t                        node.style[cssrule] = value;\n\t                        o._.dirty = 1;\n\t                        node.setAttribute(att, value);\n\t                        break;\n\t                }\n\t            }\n\t        }\n\n\t        tuneText(o, params);\n\t        node.style.visibility = vis;\n\t    },\n\t    leading = 1.2,\n\t    tuneText = function (el, params) {\n\t        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\n\t            return;\n\t        }\n\t        var a = el.attrs,\n\t            node = el.node,\n\t            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\"font-size\"), 10) : 10;\n\n\t        if (params[has](\"text\")) {\n\t            a.text = params.text;\n\t            while (node.firstChild) {\n\t                node.removeChild(node.firstChild);\n\t            }\n\t            var texts = Str(params.text).split(\"\\n\"),\n\t                tspans = [],\n\t                tspan;\n\t            for (var i = 0, ii = texts.length; i < ii; i++) {\n\t                tspan = $(\"tspan\");\n\t                i && $(tspan, {dy: fontSize * leading, x: a.x});\n\t                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\n\t                node.appendChild(tspan);\n\t                tspans[i] = tspan;\n\t            }\n\t        } else {\n\t            tspans = node.getElementsByTagName(\"tspan\");\n\t            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\n\t                $(tspans[i], {dy: fontSize * leading, x: a.x});\n\t            } else {\n\t                $(tspans[0], {dy: 0});\n\t            }\n\t        }\n\t        $(node, {x: a.x, y: a.y});\n\t        el._.dirty = 1;\n\t        var bb = el._getBBox(),\n\t            dif = a.y - (bb.y + bb.height / 2);\n\t        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\n\t    },\n\t    getRealNode = function (node) {\n\t        if (node.parentNode && node.parentNode.tagName.toLowerCase() === \"a\") {\n\t            return node.parentNode;\n\t        } else {\n\t            return node;\n\t        }\n\t    },\n\t    Element = function (node, svg) {\n\t        var X = 0,\n\t            Y = 0;\n\t        /*\\\n\t         * Element.node\n\t         [ property (object) ]\n\t         **\n\t         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n\t         **\n\t         * Note: Don’t mess with it.\n\t         > Usage\n\t         | // draw a circle at coordinate 10,10 with radius of 10\n\t         | var c = paper.circle(10, 10, 10);\n\t         | c.node.onclick = function () {\n\t         |     c.attr(\"fill\", \"red\");\n\t         | };\n\t        \\*/\n\t        this[0] = this.node = node;\n\t        /*\\\n\t         * Element.raphael\n\t         [ property (object) ]\n\t         **\n\t         * Internal reference to @Raphael object. In case it is not available.\n\t         > Usage\n\t         | Raphael.el.red = function () {\n\t         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\n\t         |     hsb.h = 1;\n\t         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\n\t         | }\n\t        \\*/\n\t        node.raphael = true;\n\t        /*\\\n\t         * Element.id\n\t         [ property (number) ]\n\t         **\n\t         * Unique id of the element. Especially useful when you want to listen to events of the element,\n\t         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\n\t        \\*/\n\t        this.id = guid();\n\t        node.raphaelid = this.id;\n\n\t        /**\n\t        * Method that returns a 5 letter/digit id, enough for 36^5 = 60466176 elements\n\t        * @returns {string} id\n\t        */\n\t        function guid() {\n\t            return (\"0000\" + (Math.random()*Math.pow(36,5) << 0).toString(36)).slice(-5);\n\t        }\n\n\t        this.matrix = R.matrix();\n\t        this.realPath = null;\n\t        /*\\\n\t         * Element.paper\n\t         [ property (object) ]\n\t         **\n\t         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\n\t         > Usage\n\t         | Raphael.el.cross = function () {\n\t         |     this.attr({fill: \"red\"});\n\t         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\n\t         |         .attr({stroke: \"red\"});\n\t         | }\n\t        \\*/\n\t        this.paper = svg;\n\t        this.attrs = this.attrs || {};\n\t        this._ = {\n\t            transform: [],\n\t            sx: 1,\n\t            sy: 1,\n\t            deg: 0,\n\t            dx: 0,\n\t            dy: 0,\n\t            dirty: 1\n\t        };\n\t        !svg.bottom && (svg.bottom = this);\n\t        /*\\\n\t         * Element.prev\n\t         [ property (object) ]\n\t         **\n\t         * Reference to the previous element in the hierarchy.\n\t        \\*/\n\t        this.prev = svg.top;\n\t        svg.top && (svg.top.next = this);\n\t        svg.top = this;\n\t        /*\\\n\t         * Element.next\n\t         [ property (object) ]\n\t         **\n\t         * Reference to the next element in the hierarchy.\n\t        \\*/\n\t        this.next = null;\n\t    },\n\t    elproto = R.el;\n\n\t    Element.prototype = elproto;\n\t    elproto.constructor = Element;\n\n\t    R._engine.path = function (pathString, SVG) {\n\t        var el = $(\"path\");\n\t        SVG.canvas && SVG.canvas.appendChild(el);\n\t        var p = new Element(el, SVG);\n\t        p.type = \"path\";\n\t        setFillAndStroke(p, {\n\t            fill: \"none\",\n\t            stroke: \"#000\",\n\t            path: pathString\n\t        });\n\t        return p;\n\t    };\n\t    /*\\\n\t     * Element.rotate\n\t     [ method ]\n\t     **\n\t     * Deprecated! Use @Element.transform instead.\n\t     * Adds rotation by given angle around given point to the list of\n\t     * transformations of the element.\n\t     > Parameters\n\t     - deg (number) angle in degrees\n\t     - cx (number) #optional x coordinate of the centre of rotation\n\t     - cy (number) #optional y coordinate of the centre of rotation\n\t     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.rotate = function (deg, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        deg = Str(deg).split(separator);\n\t        if (deg.length - 1) {\n\t            cx = toFloat(deg[1]);\n\t            cy = toFloat(deg[2]);\n\t        }\n\t        deg = toFloat(deg[0]);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t            cx = bbox.x + bbox.width / 2;\n\t            cy = bbox.y + bbox.height / 2;\n\t        }\n\t        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.scale\n\t     [ method ]\n\t     **\n\t     * Deprecated! Use @Element.transform instead.\n\t     * Adds scale by given amount relative to given point to the list of\n\t     * transformations of the element.\n\t     > Parameters\n\t     - sx (number) horisontal scale amount\n\t     - sy (number) vertical scale amount\n\t     - cx (number) #optional x coordinate of the centre of scale\n\t     - cy (number) #optional y coordinate of the centre of scale\n\t     * If cx & cy aren’t specified centre of the shape is used instead.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.scale = function (sx, sy, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        sx = Str(sx).split(separator);\n\t        if (sx.length - 1) {\n\t            sy = toFloat(sx[1]);\n\t            cx = toFloat(sx[2]);\n\t            cy = toFloat(sx[3]);\n\t        }\n\t        sx = toFloat(sx[0]);\n\t        (sy == null) && (sy = sx);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t        }\n\t        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n\t        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n\t        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.translate\n\t     [ method ]\n\t     **\n\t     * Deprecated! Use @Element.transform instead.\n\t     * Adds translation by given amount to the list of transformations of the element.\n\t     > Parameters\n\t     - dx (number) horisontal shift\n\t     - dy (number) vertical shift\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.translate = function (dx, dy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        dx = Str(dx).split(separator);\n\t        if (dx.length - 1) {\n\t            dy = toFloat(dx[1]);\n\t        }\n\t        dx = toFloat(dx[0]) || 0;\n\t        dy = +dy || 0;\n\t        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.transform\n\t     [ method ]\n\t     **\n\t     * Adds transformation to the element which is separate to other attributes,\n\t     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\n\t     * of transformation string is similar to the path string syntax:\n\t     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\n\t     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\n\t     * scale and `m` is for matrix.\n\t     *\n\t     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\n\t     *\n\t     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\n\t     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\n\t     * coordinates as optional parameters, the default is the centre point of the element.\n\t     * Matrix accepts six parameters.\n\t     > Usage\n\t     | var el = paper.rect(10, 20, 300, 200);\n\t     | // translate 100, 100, rotate 45°, translate -100, 0\n\t     | el.transform(\"t100,100r45t-100,0\");\n\t     | // if you want you can append or prepend transformations\n\t     | el.transform(\"...t50,50\");\n\t     | el.transform(\"s2...\");\n\t     | // or even wrap\n\t     | el.transform(\"t50,50...t-50-50\");\n\t     | // to reset transformation call method with empty string\n\t     | el.transform(\"\");\n\t     | // to get current value call it without parameters\n\t     | console.log(el.transform());\n\t     > Parameters\n\t     - tstr (string) #optional transformation string\n\t     * If tstr isn’t specified\n\t     = (string) current transformation string\n\t     * else\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.transform = function (tstr) {\n\t        var _ = this._;\n\t        if (tstr == null) {\n\t            return _.transform;\n\t        }\n\t        R._extractTransform(this, tstr);\n\n\t        this.clip && $(this.clip, {transform: this.matrix.invert()});\n\t        this.pattern && updatePosition(this);\n\t        this.node && $(this.node, {transform: this.matrix});\n\n\t        if (_.sx != 1 || _.sy != 1) {\n\t            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\n\t            this.attr({\"stroke-width\": sw});\n\t        }\n\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.hide\n\t     [ method ]\n\t     **\n\t     * Makes element invisible. See @Element.show.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.hide = function () {\n\t        if(!this.removed) this.node.style.display = \"none\";\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.show\n\t     [ method ]\n\t     **\n\t     * Makes element visible. See @Element.hide.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.show = function () {\n\t        if(!this.removed) this.node.style.display = \"\";\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.remove\n\t     [ method ]\n\t     **\n\t     * Removes element from the paper.\n\t    \\*/\n\t    elproto.remove = function () {\n\t        var node = getRealNode(this.node);\n\t        if (this.removed || !node.parentNode) {\n\t            return;\n\t        }\n\t        var paper = this.paper;\n\t        paper.__set__ && paper.__set__.exclude(this);\n\t        eve.unbind(\"raphael.*.*.\" + this.id);\n\t        if (this.gradient) {\n\t            paper.defs.removeChild(this.gradient);\n\t        }\n\t        R._tear(this, paper);\n\n\t        node.parentNode.removeChild(node);\n\n\t        // Remove custom data for element\n\t        this.removeData();\n\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t        this.removed = true;\n\t    };\n\t    elproto._getBBox = function () {\n\t        if (this.node.style.display == \"none\") {\n\t            this.show();\n\t            var hide = true;\n\t        }\n\t        var canvasHidden = false,\n\t            containerStyle;\n\t        if (this.paper.canvas.parentElement) {\n\t          containerStyle = this.paper.canvas.parentElement.style;\n\t        } //IE10+ can't find parentElement\n\t        else if (this.paper.canvas.parentNode) {\n\t          containerStyle = this.paper.canvas.parentNode.style;\n\t        }\n\n\t        if(containerStyle && containerStyle.display == \"none\") {\n\t          canvasHidden = true;\n\t          containerStyle.display = \"\";\n\t        }\n\t        var bbox = {};\n\t        try {\n\t            bbox = this.node.getBBox();\n\t        } catch(e) {\n\t            // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\n\t            bbox = {\n\t                x: this.node.clientLeft,\n\t                y: this.node.clientTop,\n\t                width: this.node.clientWidth,\n\t                height: this.node.clientHeight\n\t            }\n\t        } finally {\n\t            bbox = bbox || {};\n\t            if(canvasHidden){\n\t              containerStyle.display = \"none\";\n\t            }\n\t        }\n\t        hide && this.hide();\n\t        return bbox;\n\t    };\n\t    /*\\\n\t     * Element.attr\n\t     [ method ]\n\t     **\n\t     * Sets the attributes of the element.\n\t     > Parameters\n\t     - attrName (string) attribute’s name\n\t     - value (string) value\n\t     * or\n\t     - params (object) object of name/value pairs\n\t     * or\n\t     - attrName (string) attribute’s name\n\t     * or\n\t     - attrNames (array) in this case method returns array of current values for given attribute names\n\t     = (object) @Element if attrsName & value or params are passed in.\n\t     = (...) value of the attribute if only attrsName is passed in.\n\t     = (array) array of values of the attribute if attrsNames is passed in.\n\t     = (object) object of attributes if nothing is passed in.\n\t     > Possible parameters\n\t     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\n\t     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\n\t     o clip-rect (string) comma or space separated values: x, y, width and height\n\t     o cursor (string) CSS type of the cursor\n\t     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\n\t     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\n\t     o fill (string) colour, gradient or image\n\t     o fill-opacity (number)\n\t     o font (string)\n\t     o font-family (string)\n\t     o font-size (number) font size in pixels\n\t     o font-weight (string)\n\t     o height (number)\n\t     o href (string) URL, if specified element behaves as hyperlink\n\t     o opacity (number)\n\t     o path (string) SVG path string format\n\t     o r (number) radius of the circle, ellipse or rounded corner on the rect\n\t     o rx (number) horisontal radius of the ellipse\n\t     o ry (number) vertical radius of the ellipse\n\t     o src (string) image URL, only works for @Element.image element\n\t     o stroke (string) stroke colour\n\t     o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\n\t     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\n\t     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\n\t     o stroke-miterlimit (number)\n\t     o stroke-opacity (number)\n\t     o stroke-width (number) stroke width in pixels, default is '1'\n\t     o target (string) used with href\n\t     o text (string) contents of the text element. Use `\\n` for multiline text\n\t     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\n\t     o title (string) will create tooltip with a given text\n\t     o transform (string) see @Element.transform\n\t     o width (number)\n\t     o x (number)\n\t     o y (number)\n\t     > Gradients\n\t     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\n\t     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\n\t     *\n\t     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\n\t     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\n\t     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\n\t     > Path String\n\t     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\n\t     > Colour Parsing\n\t     # <ul>\n\t     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n\t     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n\t     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n\t     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n\t     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n\t     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\n\t     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\n\t     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n\t     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n\t     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\n\t     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\n\t     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n\t     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\n\t     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\n\t     # </ul>\n\t    \\*/\n\t    elproto.attr = function (name, value) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (name == null) {\n\t            var res = {};\n\t            for (var a in this.attrs) if (this.attrs[has](a)) {\n\t                res[a] = this.attrs[a];\n\t            }\n\t            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n\t            res.transform = this._.transform;\n\t            return res;\n\t        }\n\t        if (value == null && R.is(name, \"string\")) {\n\t            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\n\t                return this.attrs.gradient;\n\t            }\n\t            if (name == \"transform\") {\n\t                return this._.transform;\n\t            }\n\t            var names = name.split(separator),\n\t                out = {};\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                name = names[i];\n\t                if (name in this.attrs) {\n\t                    out[name] = this.attrs[name];\n\t                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n\t                    out[name] = this.paper.customAttributes[name].def;\n\t                } else {\n\t                    out[name] = R._availableAttrs[name];\n\t                }\n\t            }\n\t            return ii - 1 ? out : out[names[0]];\n\t        }\n\t        if (value == null && R.is(name, \"array\")) {\n\t            out = {};\n\t            for (i = 0, ii = name.length; i < ii; i++) {\n\t                out[name[i]] = this.attr(name[i]);\n\t            }\n\t            return out;\n\t        }\n\t        if (value != null) {\n\t            var params = {};\n\t            params[name] = value;\n\t        } else if (name != null && R.is(name, \"object\")) {\n\t            params = name;\n\t        }\n\t        for (var key in params) {\n\t            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n\t        }\n\t        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n\t            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n\t            this.attrs[key] = params[key];\n\t            for (var subkey in par) if (par[has](subkey)) {\n\t                params[subkey] = par[subkey];\n\t            }\n\t        }\n\t        setFillAndStroke(this, params);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.toFront\n\t     [ method ]\n\t     **\n\t     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.toFront = function () {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        var node = getRealNode(this.node);\n\t        node.parentNode.appendChild(node);\n\t        var svg = this.paper;\n\t        svg.top != this && R._tofront(this, svg);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.toBack\n\t     [ method ]\n\t     **\n\t     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.toBack = function () {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        var node = getRealNode(this.node);\n\t        var parentNode = node.parentNode;\n\t        parentNode.insertBefore(node, parentNode.firstChild);\n\t        R._toback(this, this.paper);\n\t        var svg = this.paper;\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertAfter\n\t     [ method ]\n\t     **\n\t     * Inserts current object after the given one.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.insertAfter = function (element) {\n\t        if (this.removed || !element) {\n\t            return this;\n\t        }\n\n\t        var node = getRealNode(this.node);\n\t        var afterNode = getRealNode(element.node || element[element.length - 1].node);\n\t        if (afterNode.nextSibling) {\n\t            afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\n\t        } else {\n\t            afterNode.parentNode.appendChild(node);\n\t        }\n\t        R._insertafter(this, element, this.paper);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertBefore\n\t     [ method ]\n\t     **\n\t     * Inserts current object before the given one.\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.insertBefore = function (element) {\n\t        if (this.removed || !element) {\n\t            return this;\n\t        }\n\n\t        var node = getRealNode(this.node);\n\t        var beforeNode = getRealNode(element.node || element[0].node);\n\t        beforeNode.parentNode.insertBefore(node, beforeNode);\n\t        R._insertbefore(this, element, this.paper);\n\t        return this;\n\t    };\n\t    elproto.blur = function (size) {\n\t        // Experimental. No Safari support. Use it on your own risk.\n\t        var t = this;\n\t        if (+size !== 0) {\n\t            var fltr = $(\"filter\"),\n\t                blur = $(\"feGaussianBlur\");\n\t            t.attrs.blur = size;\n\t            fltr.id = R.createUUID();\n\t            $(blur, {stdDeviation: +size || 1.5});\n\t            fltr.appendChild(blur);\n\t            t.paper.defs.appendChild(fltr);\n\t            t._blur = fltr;\n\t            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\n\t        } else {\n\t            if (t._blur) {\n\t                t._blur.parentNode.removeChild(t._blur);\n\t                delete t._blur;\n\t                delete t.attrs.blur;\n\t            }\n\t            t.node.removeAttribute(\"filter\");\n\t        }\n\t        return t;\n\t    };\n\t    R._engine.circle = function (svg, x, y, r) {\n\t        var el = $(\"circle\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\n\t        res.type = \"circle\";\n\t        $(el, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.rect = function (svg, x, y, w, h, r) {\n\t        var el = $(\"rect\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\n\t        res.type = \"rect\";\n\t        $(el, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.ellipse = function (svg, x, y, rx, ry) {\n\t        var el = $(\"ellipse\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\n\t        res.type = \"ellipse\";\n\t        $(el, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.image = function (svg, src, x, y, w, h) {\n\t        var el = $(\"image\");\n\t        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\n\t        el.setAttributeNS(xlink, \"href\", src);\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {x: x, y: y, width: w, height: h, src: src};\n\t        res.type = \"image\";\n\t        return res;\n\t    };\n\t    R._engine.text = function (svg, x, y, text) {\n\t        var el = $(\"text\");\n\t        svg.canvas && svg.canvas.appendChild(el);\n\t        var res = new Element(el, svg);\n\t        res.attrs = {\n\t            x: x,\n\t            y: y,\n\t            \"text-anchor\": \"middle\",\n\t            text: text,\n\t            \"font-family\": R._availableAttrs[\"font-family\"],\n\t            \"font-size\": R._availableAttrs[\"font-size\"],\n\t            stroke: \"none\",\n\t            fill: \"#000\"\n\t        };\n\t        res.type = \"text\";\n\t        setFillAndStroke(res, res.attrs);\n\t        return res;\n\t    };\n\t    R._engine.setSize = function (width, height) {\n\t        this.width = width || this.width;\n\t        this.height = height || this.height;\n\t        this.canvas.setAttribute(\"width\", this.width);\n\t        this.canvas.setAttribute(\"height\", this.height);\n\t        if (this._viewBox) {\n\t            this.setViewBox.apply(this, this._viewBox);\n\t        }\n\t        return this;\n\t    };\n\t    R._engine.create = function () {\n\t        var con = R._getContainer.apply(0, arguments),\n\t            container = con && con.container,\n\t            x = con.x,\n\t            y = con.y,\n\t            width = con.width,\n\t            height = con.height;\n\t        if (!container) {\n\t            throw new Error(\"SVG container not found.\");\n\t        }\n\t        var cnvs = $(\"svg\"),\n\t            css = \"overflow:hidden;\",\n\t            isFloating;\n\t        x = x || 0;\n\t        y = y || 0;\n\t        width = width || 512;\n\t        height = height || 342;\n\t        $(cnvs, {\n\t            height: height,\n\t            version: 1.1,\n\t            width: width,\n\t            xmlns: \"http://www.w3.org/2000/svg\",\n\t            \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\"\n\t        });\n\t        if (container == 1) {\n\t            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\n\t            R._g.doc.body.appendChild(cnvs);\n\t            isFloating = 1;\n\t        } else {\n\t            cnvs.style.cssText = css + \"position:relative\";\n\t            if (container.firstChild) {\n\t                container.insertBefore(cnvs, container.firstChild);\n\t            } else {\n\t                container.appendChild(cnvs);\n\t            }\n\t        }\n\t        container = new R._Paper;\n\t        container.width = width;\n\t        container.height = height;\n\t        container.canvas = cnvs;\n\t        container.clear();\n\t        container._left = container._top = 0;\n\t        isFloating && (container.renderfix = function () {});\n\t        container.renderfix();\n\t        return container;\n\t    };\n\t    R._engine.setViewBox = function (x, y, w, h, fit) {\n\t        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n\t        var paperSize = this.getSize(),\n\t            size = mmax(w / paperSize.width, h / paperSize.height),\n\t            top = this.top,\n\t            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\n\t            vb,\n\t            sw;\n\t        if (x == null) {\n\t            if (this._vbSize) {\n\t                size = 1;\n\t            }\n\t            delete this._vbSize;\n\t            vb = \"0 0 \" + this.width + S + this.height;\n\t        } else {\n\t            this._vbSize = size;\n\t            vb = x + S + y + S + w + S + h;\n\t        }\n\t        $(this.canvas, {\n\t            viewBox: vb,\n\t            preserveAspectRatio: aspectRatio\n\t        });\n\t        while (size && top) {\n\t            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\n\t            top.attr({\"stroke-width\": sw});\n\t            top._.dirty = 1;\n\t            top._.dirtyT = 1;\n\t            top = top.prev;\n\t        }\n\t        this._viewBox = [x, y, w, h, !!fit];\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Paper.renderfix\n\t     [ method ]\n\t     **\n\t     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependent\n\t     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\n\t     * This method fixes the issue.\n\t     **\n\t       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\n\t    \\*/\n\t    R.prototype.renderfix = function () {\n\t        var cnvs = this.canvas,\n\t            s = cnvs.style,\n\t            pos;\n\t        try {\n\t            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\n\t        } catch (e) {\n\t            pos = cnvs.createSVGMatrix();\n\t        }\n\t        var left = -pos.e % 1,\n\t            top = -pos.f % 1;\n\t        if (left || top) {\n\t            if (left) {\n\t                this._left = (this._left + left) % 1;\n\t                s.left = this._left + \"px\";\n\t            }\n\t            if (top) {\n\t                this._top = (this._top + top) % 1;\n\t                s.top = this._top + \"px\";\n\t            }\n\t        }\n\t    };\n\t    /*\\\n\t     * Paper.clear\n\t     [ method ]\n\t     **\n\t     * Clears the paper, i.e. removes all the elements.\n\t    \\*/\n\t    R.prototype.clear = function () {\n\t        R.eve(\"raphael.clear\", this);\n\t        var c = this.canvas;\n\t        while (c.firstChild) {\n\t            c.removeChild(c.firstChild);\n\t        }\n\t        this.bottom = this.top = null;\n\t        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\n\t        c.appendChild(this.desc);\n\t        c.appendChild(this.defs = $(\"defs\"));\n\t    };\n\t    /*\\\n\t     * Paper.remove\n\t     [ method ]\n\t     **\n\t     * Removes the paper from the DOM.\n\t    \\*/\n\t    R.prototype.remove = function () {\n\t        eve(\"raphael.remove\", this);\n\t        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t    };\n\t    var setproto = R.st;\n\t    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n\t        setproto[method] = (function (methodname) {\n\t            return function () {\n\t                var arg = arguments;\n\t                return this.forEach(function (el) {\n\t                    el[methodname].apply(el, arg);\n\t                });\n\t            };\n\t        })(method);\n\t    }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(R) {\n\t    if (R && !R.vml) {\n\t        return;\n\t    }\n\n\t    var has = \"hasOwnProperty\",\n\t        Str = String,\n\t        toFloat = parseFloat,\n\t        math = Math,\n\t        round = math.round,\n\t        mmax = math.max,\n\t        mmin = math.min,\n\t        abs = math.abs,\n\t        fillString = \"fill\",\n\t        separator = /[, ]+/,\n\t        eve = R.eve,\n\t        ms = \" progid:DXImageTransform.Microsoft\",\n\t        S = \" \",\n\t        E = \"\",\n\t        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\n\t        bites = /([clmz]),?([^clmz]*)/gi,\n\t        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\n\t        val = /-?[^,\\s-]+/g,\n\t        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",\n\t        zoom = 21600,\n\t        pathTypes = {path: 1, rect: 1, image: 1},\n\t        ovalTypes = {circle: 1, ellipse: 1},\n\t        path2vml = function (path) {\n\t            var total =  /[ahqstv]/ig,\n\t                command = R._pathToAbsolute;\n\t            Str(path).match(total) && (command = R._path2curve);\n\t            total = /[clmz]/g;\n\t            if (command == R._pathToAbsolute && !Str(path).match(total)) {\n\t                var res = Str(path).replace(bites, function (all, command, args) {\n\t                    var vals = [],\n\t                        isMove = command.toLowerCase() == \"m\",\n\t                        res = map[command];\n\t                    args.replace(val, function (value) {\n\t                        if (isMove && vals.length == 2) {\n\t                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\n\t                            vals = [];\n\t                        }\n\t                        vals.push(round(value * zoom));\n\t                    });\n\t                    return res + vals;\n\t                });\n\t                return res;\n\t            }\n\t            var pa = command(path), p, r;\n\t            res = [];\n\t            for (var i = 0, ii = pa.length; i < ii; i++) {\n\t                p = pa[i];\n\t                r = pa[i][0].toLowerCase();\n\t                r == \"z\" && (r = \"x\");\n\t                for (var j = 1, jj = p.length; j < jj; j++) {\n\t                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\n\t                }\n\t                res.push(r);\n\t            }\n\t            return res.join(S);\n\t        },\n\t        compensation = function (deg, dx, dy) {\n\t            var m = R.matrix();\n\t            m.rotate(-deg, .5, .5);\n\t            return {\n\t                dx: m.x(dx, dy),\n\t                dy: m.y(dx, dy)\n\t            };\n\t        },\n\t        setCoords = function (p, sx, sy, dx, dy, deg) {\n\t            var _ = p._,\n\t                m = p.matrix,\n\t                fillpos = _.fillpos,\n\t                o = p.node,\n\t                s = o.style,\n\t                y = 1,\n\t                flip = \"\",\n\t                dxdy,\n\t                kx = zoom / sx,\n\t                ky = zoom / sy;\n\t            s.visibility = \"hidden\";\n\t            if (!sx || !sy) {\n\t                return;\n\t            }\n\t            o.coordsize = abs(kx) + S + abs(ky);\n\t            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\n\t            if (deg) {\n\t                var c = compensation(deg, dx, dy);\n\t                dx = c.dx;\n\t                dy = c.dy;\n\t            }\n\t            sx < 0 && (flip += \"x\");\n\t            sy < 0 && (flip += \" y\") && (y = -1);\n\t            s.flip = flip;\n\t            o.coordorigin = (dx * -kx) + S + (dy * -ky);\n\t            if (fillpos || _.fillsize) {\n\t                var fill = o.getElementsByTagName(fillString);\n\t                fill = fill && fill[0];\n\t                o.removeChild(fill);\n\t                if (fillpos) {\n\t                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\n\t                    fill.position = c.dx * y + S + c.dy * y;\n\t                }\n\t                if (_.fillsize) {\n\t                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\n\t                }\n\t                o.appendChild(fill);\n\t            }\n\t            s.visibility = \"visible\";\n\t        };\n\t    R.toString = function () {\n\t        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\n\t    };\n\t    var addArrow = function (o, value, isEnd) {\n\t        var values = Str(value).toLowerCase().split(\"-\"),\n\t            se = isEnd ? \"end\" : \"start\",\n\t            i = values.length,\n\t            type = \"classic\",\n\t            w = \"medium\",\n\t            h = \"medium\";\n\t        while (i--) {\n\t            switch (values[i]) {\n\t                case \"block\":\n\t                case \"classic\":\n\t                case \"oval\":\n\t                case \"diamond\":\n\t                case \"open\":\n\t                case \"none\":\n\t                    type = values[i];\n\t                    break;\n\t                case \"wide\":\n\t                case \"narrow\": h = values[i]; break;\n\t                case \"long\":\n\t                case \"short\": w = values[i]; break;\n\t            }\n\t        }\n\t        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\n\t        stroke[se + \"arrow\"] = type;\n\t        stroke[se + \"arrowlength\"] = w;\n\t        stroke[se + \"arrowwidth\"] = h;\n\t    },\n\t    setFillAndStroke = function (o, params) {\n\t        // o.paper.canvas.style.display = \"none\";\n\t        o.attrs = o.attrs || {};\n\t        var node = o.node,\n\t            a = o.attrs,\n\t            s = node.style,\n\t            xy,\n\t            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\n\t            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\n\t            res = o;\n\n\n\t        for (var par in params) if (params[has](par)) {\n\t            a[par] = params[par];\n\t        }\n\t        if (newpath) {\n\t            a.path = R._getPath[o.type](o);\n\t            o._.dirty = 1;\n\t        }\n\t        params.href && (node.href = params.href);\n\t        params.title && (node.title = params.title);\n\t        params.target && (node.target = params.target);\n\t        params.cursor && (s.cursor = params.cursor);\n\t        \"blur\" in params && o.blur(params.blur);\n\t        if (params.path && o.type == \"path\" || newpath) {\n\t            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\n\t            o._.dirty = 1;\n\t            if (o.type == \"image\") {\n\t                o._.fillpos = [a.x, a.y];\n\t                o._.fillsize = [a.width, a.height];\n\t                setCoords(o, 1, 1, 0, 0, 0);\n\t            }\n\t        }\n\t        \"transform\" in params && o.transform(params.transform);\n\t        if (isOval) {\n\t            var cx = +a.cx,\n\t                cy = +a.cy,\n\t                rx = +a.rx || +a.r || 0,\n\t                ry = +a.ry || +a.r || 0;\n\t            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\n\t            o._.dirty = 1;\n\t        }\n\t        if (\"clip-rect\" in params) {\n\t            var rect = Str(params[\"clip-rect\"]).split(separator);\n\t            if (rect.length == 4) {\n\t                rect[2] = +rect[2] + (+rect[0]);\n\t                rect[3] = +rect[3] + (+rect[1]);\n\t                var div = node.clipRect || R._g.doc.createElement(\"div\"),\n\t                    dstyle = div.style;\n\t                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\n\t                if (!node.clipRect) {\n\t                    dstyle.position = \"absolute\";\n\t                    dstyle.top = 0;\n\t                    dstyle.left = 0;\n\t                    dstyle.width = o.paper.width + \"px\";\n\t                    dstyle.height = o.paper.height + \"px\";\n\t                    node.parentNode.insertBefore(div, node);\n\t                    div.appendChild(node);\n\t                    node.clipRect = div;\n\t                }\n\t            }\n\t            if (!params[\"clip-rect\"]) {\n\t                node.clipRect && (node.clipRect.style.clip = \"auto\");\n\t            }\n\t        }\n\t        if (o.textpath) {\n\t            var textpathStyle = o.textpath.style;\n\t            params.font && (textpathStyle.font = params.font);\n\t            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\n\t            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\n\t            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\n\t            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\n\t        }\n\t        if (\"arrow-start\" in params) {\n\t            addArrow(res, params[\"arrow-start\"]);\n\t        }\n\t        if (\"arrow-end\" in params) {\n\t            addArrow(res, params[\"arrow-end\"], 1);\n\t        }\n\t        if (params.opacity != null ||\n\t            params.fill != null ||\n\t            params.src != null ||\n\t            params.stroke != null ||\n\t            params[\"stroke-width\"] != null ||\n\t            params[\"stroke-opacity\"] != null ||\n\t            params[\"fill-opacity\"] != null ||\n\t            params[\"stroke-dasharray\"] != null ||\n\t            params[\"stroke-miterlimit\"] != null ||\n\t            params[\"stroke-linejoin\"] != null ||\n\t            params[\"stroke-linecap\"] != null) {\n\t            var fill = node.getElementsByTagName(fillString),\n\t                newfill = false;\n\t            fill = fill && fill[0];\n\t            !fill && (newfill = fill = createNode(fillString));\n\t            if (o.type == \"image\" && params.src) {\n\t                fill.src = params.src;\n\t            }\n\t            params.fill && (fill.on = true);\n\t            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\n\t                fill.on = false;\n\t            }\n\t            if (fill.on && params.fill) {\n\t                var isURL = Str(params.fill).match(R._ISURL);\n\t                if (isURL) {\n\t                    fill.parentNode == node && node.removeChild(fill);\n\t                    fill.rotate = true;\n\t                    fill.src = isURL[1];\n\t                    fill.type = \"tile\";\n\t                    var bbox = o.getBBox(1);\n\t                    fill.position = bbox.x + S + bbox.y;\n\t                    o._.fillpos = [bbox.x, bbox.y];\n\n\t                    R._preload(isURL[1], function () {\n\t                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\n\t                    });\n\t                } else {\n\t                    fill.color = R.getRGB(params.fill).hex;\n\t                    fill.src = E;\n\t                    fill.type = \"solid\";\n\t                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\n\t                        a.fill = \"none\";\n\t                        a.gradient = params.fill;\n\t                        fill.rotate = false;\n\t                    }\n\t                }\n\t            }\n\t            if (\"fill-opacity\" in params || \"opacity\" in params) {\n\t                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\n\t                opacity = mmin(mmax(opacity, 0), 1);\n\t                fill.opacity = opacity;\n\t                if (fill.src) {\n\t                    fill.color = \"none\";\n\t                }\n\t            }\n\t            node.appendChild(fill);\n\t            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\n\t            newstroke = false;\n\t            !stroke && (newstroke = stroke = createNode(\"stroke\"));\n\t            if ((params.stroke && params.stroke != \"none\") ||\n\t                params[\"stroke-width\"] ||\n\t                params[\"stroke-opacity\"] != null ||\n\t                params[\"stroke-dasharray\"] ||\n\t                params[\"stroke-miterlimit\"] ||\n\t                params[\"stroke-linejoin\"] ||\n\t                params[\"stroke-linecap\"]) {\n\t                stroke.on = true;\n\t            }\n\t            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\n\t            var strokeColor = R.getRGB(params.stroke);\n\t            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\n\t            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\n\t            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\n\t            opacity = mmin(mmax(opacity, 0), 1);\n\t            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\n\t            params[\"stroke-width\"] && (stroke.weight = width);\n\t            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\n\t            stroke.opacity = opacity;\n\n\t            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\n\t            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\n\t            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\n\t            if (\"stroke-dasharray\" in params) {\n\t                var dasharray = {\n\t                    \"-\": \"shortdash\",\n\t                    \".\": \"shortdot\",\n\t                    \"-.\": \"shortdashdot\",\n\t                    \"-..\": \"shortdashdotdot\",\n\t                    \". \": \"dot\",\n\t                    \"- \": \"dash\",\n\t                    \"--\": \"longdash\",\n\t                    \"- .\": \"dashdot\",\n\t                    \"--.\": \"longdashdot\",\n\t                    \"--..\": \"longdashdotdot\"\n\t                };\n\t                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\n\t            }\n\t            newstroke && node.appendChild(stroke);\n\t        }\n\t        if (res.type == \"text\") {\n\t            res.paper.canvas.style.display = E;\n\t            var span = res.paper.span,\n\t                m = 100,\n\t                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\n\t            s = span.style;\n\t            a.font && (s.font = a.font);\n\t            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\n\t            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\n\t            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\n\t            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\n\t            s.fontSize = fontSize * m + \"px\";\n\t            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\n\t            var brect = span.getBoundingClientRect();\n\t            res.W = a.w = (brect.right - brect.left) / m;\n\t            res.H = a.h = (brect.bottom - brect.top) / m;\n\t            // res.paper.canvas.style.display = \"none\";\n\t            res.X = a.x;\n\t            res.Y = a.y + res.H / 2;\n\n\t            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\n\t            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\n\t            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\n\t                res._.dirty = 1;\n\t                break;\n\t            }\n\n\t            // text-anchor emulation\n\t            switch (a[\"text-anchor\"]) {\n\t                case \"start\":\n\t                    res.textpath.style[\"v-text-align\"] = \"left\";\n\t                    res.bbx = res.W / 2;\n\t                break;\n\t                case \"end\":\n\t                    res.textpath.style[\"v-text-align\"] = \"right\";\n\t                    res.bbx = -res.W / 2;\n\t                break;\n\t                default:\n\t                    res.textpath.style[\"v-text-align\"] = \"center\";\n\t                    res.bbx = 0;\n\t                break;\n\t            }\n\t            res.textpath.style[\"v-text-kern\"] = true;\n\t        }\n\t        // res.paper.canvas.style.display = E;\n\t    },\n\t    addGradientFill = function (o, gradient, fill) {\n\t        o.attrs = o.attrs || {};\n\t        var attrs = o.attrs,\n\t            pow = Math.pow,\n\t            opacity,\n\t            oindex,\n\t            type = \"linear\",\n\t            fxfy = \".5 .5\";\n\t        o.attrs.gradient = gradient;\n\t        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\n\t            type = \"radial\";\n\t            if (fx && fy) {\n\t                fx = toFloat(fx);\n\t                fy = toFloat(fy);\n\t                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\n\t                fxfy = fx + S + fy;\n\t            }\n\t            return E;\n\t        });\n\t        gradient = gradient.split(/\\s*\\-\\s*/);\n\t        if (type == \"linear\") {\n\t            var angle = gradient.shift();\n\t            angle = -toFloat(angle);\n\t            if (isNaN(angle)) {\n\t                return null;\n\t            }\n\t        }\n\t        var dots = R._parseDots(gradient);\n\t        if (!dots) {\n\t            return null;\n\t        }\n\t        o = o.shape || o.node;\n\t        if (dots.length) {\n\t            o.removeChild(fill);\n\t            fill.on = true;\n\t            fill.method = \"none\";\n\t            fill.color = dots[0].color;\n\t            fill.color2 = dots[dots.length - 1].color;\n\t            var clrs = [];\n\t            for (var i = 0, ii = dots.length; i < ii; i++) {\n\t                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\n\t            }\n\t            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\n\t            if (type == \"radial\") {\n\t                fill.type = \"gradientTitle\";\n\t                fill.focus = \"100%\";\n\t                fill.focussize = \"0 0\";\n\t                fill.focusposition = fxfy;\n\t                fill.angle = 0;\n\t            } else {\n\t                // fill.rotate= true;\n\t                fill.type = \"gradient\";\n\t                fill.angle = (270 - angle) % 360;\n\t            }\n\t            o.appendChild(fill);\n\t        }\n\t        return 1;\n\t    },\n\t    Element = function (node, vml) {\n\t        this[0] = this.node = node;\n\t        node.raphael = true;\n\t        this.id = R._oid++;\n\t        node.raphaelid = this.id;\n\t        this.X = 0;\n\t        this.Y = 0;\n\t        this.attrs = {};\n\t        this.paper = vml;\n\t        this.matrix = R.matrix();\n\t        this._ = {\n\t            transform: [],\n\t            sx: 1,\n\t            sy: 1,\n\t            dx: 0,\n\t            dy: 0,\n\t            deg: 0,\n\t            dirty: 1,\n\t            dirtyT: 1\n\t        };\n\t        !vml.bottom && (vml.bottom = this);\n\t        this.prev = vml.top;\n\t        vml.top && (vml.top.next = this);\n\t        vml.top = this;\n\t        this.next = null;\n\t    };\n\t    var elproto = R.el;\n\n\t    Element.prototype = elproto;\n\t    elproto.constructor = Element;\n\t    elproto.transform = function (tstr) {\n\t        if (tstr == null) {\n\t            return this._.transform;\n\t        }\n\t        var vbs = this.paper._viewBoxShift,\n\t            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\n\t            oldt;\n\t        if (vbs) {\n\t            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\n\t        }\n\t        R._extractTransform(this, vbt + tstr);\n\t        var matrix = this.matrix.clone(),\n\t            skew = this.skew,\n\t            o = this.node,\n\t            split,\n\t            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\n\t            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\n\t        matrix.translate(1, 1);\n\t        if (isPatt || isGrad || this.type == \"image\") {\n\t            skew.matrix = \"1 0 0 1\";\n\t            skew.offset = \"0 0\";\n\t            split = matrix.split();\n\t            if ((isGrad && split.noRotation) || !split.isSimple) {\n\t                o.style.filter = matrix.toFilter();\n\t                var bb = this.getBBox(),\n\t                    bbt = this.getBBox(1),\n\t                    dx = bb.x - bbt.x,\n\t                    dy = bb.y - bbt.y;\n\t                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\n\t                setCoords(this, 1, 1, dx, dy, 0);\n\t            } else {\n\t                o.style.filter = E;\n\t                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\n\t            }\n\t        } else {\n\t            o.style.filter = E;\n\t            skew.matrix = Str(matrix);\n\t            skew.offset = matrix.offset();\n\t        }\n\t        if (oldt !== null) { // empty string value is true as well\n\t            this._.transform = oldt;\n\t            R._extractTransform(this, oldt);\n\t        }\n\t        return this;\n\t    };\n\t    elproto.rotate = function (deg, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (deg == null) {\n\t            return;\n\t        }\n\t        deg = Str(deg).split(separator);\n\t        if (deg.length - 1) {\n\t            cx = toFloat(deg[1]);\n\t            cy = toFloat(deg[2]);\n\t        }\n\t        deg = toFloat(deg[0]);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t            cx = bbox.x + bbox.width / 2;\n\t            cy = bbox.y + bbox.height / 2;\n\t        }\n\t        this._.dirtyT = 1;\n\t        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n\t        return this;\n\t    };\n\t    elproto.translate = function (dx, dy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        dx = Str(dx).split(separator);\n\t        if (dx.length - 1) {\n\t            dy = toFloat(dx[1]);\n\t        }\n\t        dx = toFloat(dx[0]) || 0;\n\t        dy = +dy || 0;\n\t        if (this._.bbox) {\n\t            this._.bbox.x += dx;\n\t            this._.bbox.y += dy;\n\t        }\n\t        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n\t        return this;\n\t    };\n\t    elproto.scale = function (sx, sy, cx, cy) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        sx = Str(sx).split(separator);\n\t        if (sx.length - 1) {\n\t            sy = toFloat(sx[1]);\n\t            cx = toFloat(sx[2]);\n\t            cy = toFloat(sx[3]);\n\t            isNaN(cx) && (cx = null);\n\t            isNaN(cy) && (cy = null);\n\t        }\n\t        sx = toFloat(sx[0]);\n\t        (sy == null) && (sy = sx);\n\t        (cy == null) && (cx = cy);\n\t        if (cx == null || cy == null) {\n\t            var bbox = this.getBBox(1);\n\t        }\n\t        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n\t        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n\n\t        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n\t        this._.dirtyT = 1;\n\t        return this;\n\t    };\n\t    elproto.hide = function () {\n\t        !this.removed && (this.node.style.display = \"none\");\n\t        return this;\n\t    };\n\t    elproto.show = function () {\n\t        !this.removed && (this.node.style.display = E);\n\t        return this;\n\t    };\n\t    // Needed to fix the vml setViewBox issues\n\t    elproto.auxGetBBox = R.el.getBBox;\n\t    elproto.getBBox = function(){\n\t      var b = this.auxGetBBox();\n\t      if (this.paper && this.paper._viewBoxShift)\n\t      {\n\t        var c = {};\n\t        var z = 1/this.paper._viewBoxShift.scale;\n\t        c.x = b.x - this.paper._viewBoxShift.dx;\n\t        c.x *= z;\n\t        c.y = b.y - this.paper._viewBoxShift.dy;\n\t        c.y *= z;\n\t        c.width  = b.width  * z;\n\t        c.height = b.height * z;\n\t        c.x2 = c.x + c.width;\n\t        c.y2 = c.y + c.height;\n\t        return c;\n\t      }\n\t      return b;\n\t    };\n\t    elproto._getBBox = function () {\n\t        if (this.removed) {\n\t            return {};\n\t        }\n\t        return {\n\t            x: this.X + (this.bbx || 0) - this.W / 2,\n\t            y: this.Y - this.H,\n\t            width: this.W,\n\t            height: this.H\n\t        };\n\t    };\n\t    elproto.remove = function () {\n\t        if (this.removed || !this.node.parentNode) {\n\t            return;\n\t        }\n\t        this.paper.__set__ && this.paper.__set__.exclude(this);\n\t        R.eve.unbind(\"raphael.*.*.\" + this.id);\n\t        R._tear(this, this.paper);\n\t        this.node.parentNode.removeChild(this.node);\n\t        this.shape && this.shape.parentNode.removeChild(this.shape);\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t        this.removed = true;\n\t    };\n\t    elproto.attr = function (name, value) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (name == null) {\n\t            var res = {};\n\t            for (var a in this.attrs) if (this.attrs[has](a)) {\n\t                res[a] = this.attrs[a];\n\t            }\n\t            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n\t            res.transform = this._.transform;\n\t            return res;\n\t        }\n\t        if (value == null && R.is(name, \"string\")) {\n\t            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\n\t                return this.attrs.gradient;\n\t            }\n\t            var names = name.split(separator),\n\t                out = {};\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                name = names[i];\n\t                if (name in this.attrs) {\n\t                    out[name] = this.attrs[name];\n\t                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n\t                    out[name] = this.paper.customAttributes[name].def;\n\t                } else {\n\t                    out[name] = R._availableAttrs[name];\n\t                }\n\t            }\n\t            return ii - 1 ? out : out[names[0]];\n\t        }\n\t        if (this.attrs && value == null && R.is(name, \"array\")) {\n\t            out = {};\n\t            for (i = 0, ii = name.length; i < ii; i++) {\n\t                out[name[i]] = this.attr(name[i]);\n\t            }\n\t            return out;\n\t        }\n\t        var params;\n\t        if (value != null) {\n\t            params = {};\n\t            params[name] = value;\n\t        }\n\t        value == null && R.is(name, \"object\") && (params = name);\n\t        for (var key in params) {\n\t            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n\t        }\n\t        if (params) {\n\t            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n\t                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n\t                this.attrs[key] = params[key];\n\t                for (var subkey in par) if (par[has](subkey)) {\n\t                    params[subkey] = par[subkey];\n\t                }\n\t            }\n\t            // this.paper.canvas.style.display = \"none\";\n\t            if (params.text && this.type == \"text\") {\n\t                this.textpath.string = params.text;\n\t            }\n\t            setFillAndStroke(this, params);\n\t            // this.paper.canvas.style.display = E;\n\t        }\n\t        return this;\n\t    };\n\t    elproto.toFront = function () {\n\t        !this.removed && this.node.parentNode.appendChild(this.node);\n\t        this.paper && this.paper.top != this && R._tofront(this, this.paper);\n\t        return this;\n\t    };\n\t    elproto.toBack = function () {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (this.node.parentNode.firstChild != this.node) {\n\t            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\n\t            R._toback(this, this.paper);\n\t        }\n\t        return this;\n\t    };\n\t    elproto.insertAfter = function (element) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (element.constructor == R.st.constructor) {\n\t            element = element[element.length - 1];\n\t        }\n\t        if (element.node.nextSibling) {\n\t            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\n\t        } else {\n\t            element.node.parentNode.appendChild(this.node);\n\t        }\n\t        R._insertafter(this, element, this.paper);\n\t        return this;\n\t    };\n\t    elproto.insertBefore = function (element) {\n\t        if (this.removed) {\n\t            return this;\n\t        }\n\t        if (element.constructor == R.st.constructor) {\n\t            element = element[0];\n\t        }\n\t        element.node.parentNode.insertBefore(this.node, element.node);\n\t        R._insertbefore(this, element, this.paper);\n\t        return this;\n\t    };\n\t    elproto.blur = function (size) {\n\t        var s = this.node.runtimeStyle,\n\t            f = s.filter;\n\t        f = f.replace(blurregexp, E);\n\t        if (+size !== 0) {\n\t            this.attrs.blur = size;\n\t            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\n\t            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\n\t        } else {\n\t            s.filter = f;\n\t            s.margin = 0;\n\t            delete this.attrs.blur;\n\t        }\n\t        return this;\n\t    };\n\n\t    R._engine.path = function (pathString, vml) {\n\t        var el = createNode(\"shape\");\n\t        el.style.cssText = cssDot;\n\t        el.coordsize = zoom + S + zoom;\n\t        el.coordorigin = vml.coordorigin;\n\t        var p = new Element(el, vml),\n\t            attr = {fill: \"none\", stroke: \"#000\"};\n\t        pathString && (attr.path = pathString);\n\t        p.type = \"path\";\n\t        p.path = [];\n\t        p.Path = E;\n\t        setFillAndStroke(p, attr);\n\t        vml.canvas && vml.canvas.appendChild(el);\n\t        var skew = createNode(\"skew\");\n\t        skew.on = true;\n\t        el.appendChild(skew);\n\t        p.skew = skew;\n\t        p.transform(E);\n\t        return p;\n\t    };\n\t    R._engine.rect = function (vml, x, y, w, h, r) {\n\t        var path = R._rectPath(x, y, w, h, r),\n\t            res = vml.path(path),\n\t            a = res.attrs;\n\t        res.X = a.x = x;\n\t        res.Y = a.y = y;\n\t        res.W = a.width = w;\n\t        res.H = a.height = h;\n\t        a.r = r;\n\t        a.path = path;\n\t        res.type = \"rect\";\n\t        return res;\n\t    };\n\t    R._engine.ellipse = function (vml, x, y, rx, ry) {\n\t        var res = vml.path(),\n\t            a = res.attrs;\n\t        res.X = x - rx;\n\t        res.Y = y - ry;\n\t        res.W = rx * 2;\n\t        res.H = ry * 2;\n\t        res.type = \"ellipse\";\n\t        setFillAndStroke(res, {\n\t            cx: x,\n\t            cy: y,\n\t            rx: rx,\n\t            ry: ry\n\t        });\n\t        return res;\n\t    };\n\t    R._engine.circle = function (vml, x, y, r) {\n\t        var res = vml.path(),\n\t            a = res.attrs;\n\t        res.X = x - r;\n\t        res.Y = y - r;\n\t        res.W = res.H = r * 2;\n\t        res.type = \"circle\";\n\t        setFillAndStroke(res, {\n\t            cx: x,\n\t            cy: y,\n\t            r: r\n\t        });\n\t        return res;\n\t    };\n\t    R._engine.image = function (vml, src, x, y, w, h) {\n\t        var path = R._rectPath(x, y, w, h),\n\t            res = vml.path(path).attr({stroke: \"none\"}),\n\t            a = res.attrs,\n\t            node = res.node,\n\t            fill = node.getElementsByTagName(fillString)[0];\n\t        a.src = src;\n\t        res.X = a.x = x;\n\t        res.Y = a.y = y;\n\t        res.W = a.width = w;\n\t        res.H = a.height = h;\n\t        a.path = path;\n\t        res.type = \"image\";\n\t        fill.parentNode == node && node.removeChild(fill);\n\t        fill.rotate = true;\n\t        fill.src = src;\n\t        fill.type = \"tile\";\n\t        res._.fillpos = [x, y];\n\t        res._.fillsize = [w, h];\n\t        node.appendChild(fill);\n\t        setCoords(res, 1, 1, 0, 0, 0);\n\t        return res;\n\t    };\n\t    R._engine.text = function (vml, x, y, text) {\n\t        var el = createNode(\"shape\"),\n\t            path = createNode(\"path\"),\n\t            o = createNode(\"textpath\");\n\t        x = x || 0;\n\t        y = y || 0;\n\t        text = text || \"\";\n\t        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\n\t        path.textpathok = true;\n\t        o.string = Str(text);\n\t        o.on = true;\n\t        el.style.cssText = cssDot;\n\t        el.coordsize = zoom + S + zoom;\n\t        el.coordorigin = \"0 0\";\n\t        var p = new Element(el, vml),\n\t            attr = {\n\t                fill: \"#000\",\n\t                stroke: \"none\",\n\t                font: R._availableAttrs.font,\n\t                text: text\n\t            };\n\t        p.shape = el;\n\t        p.path = path;\n\t        p.textpath = o;\n\t        p.type = \"text\";\n\t        p.attrs.text = Str(text);\n\t        p.attrs.x = x;\n\t        p.attrs.y = y;\n\t        p.attrs.w = 1;\n\t        p.attrs.h = 1;\n\t        setFillAndStroke(p, attr);\n\t        el.appendChild(o);\n\t        el.appendChild(path);\n\t        vml.canvas.appendChild(el);\n\t        var skew = createNode(\"skew\");\n\t        skew.on = true;\n\t        el.appendChild(skew);\n\t        p.skew = skew;\n\t        p.transform(E);\n\t        return p;\n\t    };\n\t    R._engine.setSize = function (width, height) {\n\t        var cs = this.canvas.style;\n\t        this.width = width;\n\t        this.height = height;\n\t        width == +width && (width += \"px\");\n\t        height == +height && (height += \"px\");\n\t        cs.width = width;\n\t        cs.height = height;\n\t        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\n\t        if (this._viewBox) {\n\t            R._engine.setViewBox.apply(this, this._viewBox);\n\t        }\n\t        return this;\n\t    };\n\t    R._engine.setViewBox = function (x, y, w, h, fit) {\n\t        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n\t        var paperSize = this.getSize(),\n\t            width = paperSize.width,\n\t            height = paperSize.height,\n\t            H, W;\n\t        if (fit) {\n\t            H = height / h;\n\t            W = width / w;\n\t            if (w * H < width) {\n\t                x -= (width - w * H) / 2 / H;\n\t            }\n\t            if (h * W < height) {\n\t                y -= (height - h * W) / 2 / W;\n\t            }\n\t        }\n\t        this._viewBox = [x, y, w, h, !!fit];\n\t        this._viewBoxShift = {\n\t            dx: -x,\n\t            dy: -y,\n\t            scale: paperSize\n\t        };\n\t        this.forEach(function (el) {\n\t            el.transform(\"...\");\n\t        });\n\t        return this;\n\t    };\n\t    var createNode;\n\t    R._engine.initWin = function (win) {\n\t            var doc = win.document;\n\t            if (doc.styleSheets.length < 31) {\n\t                doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\n\t            } else {\n\t                // no more room, add to the existing one\n\t                // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n\t                doc.styleSheets[0].addRule(\".rvml\", \"behavior:url(#default#VML)\");\n\t            }\n\t            try {\n\t                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\n\t                createNode = function (tagName) {\n\t                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\n\t                };\n\t            } catch (e) {\n\t                createNode = function (tagName) {\n\t                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n\t                };\n\t            }\n\t        };\n\t    R._engine.initWin(R._g.win);\n\t    R._engine.create = function () {\n\t        var con = R._getContainer.apply(0, arguments),\n\t            container = con.container,\n\t            height = con.height,\n\t            s,\n\t            width = con.width,\n\t            x = con.x,\n\t            y = con.y;\n\t        if (!container) {\n\t            throw new Error(\"VML container not found.\");\n\t        }\n\t        var res = new R._Paper,\n\t            c = res.canvas = R._g.doc.createElement(\"div\"),\n\t            cs = c.style;\n\t        x = x || 0;\n\t        y = y || 0;\n\t        width = width || 512;\n\t        height = height || 342;\n\t        res.width = width;\n\t        res.height = height;\n\t        width == +width && (width += \"px\");\n\t        height == +height && (height += \"px\");\n\t        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\n\t        res.coordorigin = \"0 0\";\n\t        res.span = R._g.doc.createElement(\"span\");\n\t        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\n\t        c.appendChild(res.span);\n\t        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\n\t        if (container == 1) {\n\t            R._g.doc.body.appendChild(c);\n\t            cs.left = x + \"px\";\n\t            cs.top = y + \"px\";\n\t            cs.position = \"absolute\";\n\t        } else {\n\t            if (container.firstChild) {\n\t                container.insertBefore(c, container.firstChild);\n\t            } else {\n\t                container.appendChild(c);\n\t            }\n\t        }\n\t        res.renderfix = function () {};\n\t        return res;\n\t    };\n\t    R.prototype.clear = function () {\n\t        R.eve(\"raphael.clear\", this);\n\t        this.canvas.innerHTML = E;\n\t        this.span = R._g.doc.createElement(\"span\");\n\t        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\n\t        this.canvas.appendChild(this.span);\n\t        this.bottom = this.top = null;\n\t    };\n\t    R.prototype.remove = function () {\n\t        R.eve(\"raphael.remove\", this);\n\t        this.canvas.parentNode.removeChild(this.canvas);\n\t        for (var i in this) {\n\t            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n\t        }\n\t        return true;\n\t    };\n\n\t    var setproto = R.st;\n\t    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n\t        setproto[method] = (function (methodname) {\n\t            return function () {\n\t                var arg = arguments;\n\t                return this.forEach(function (el) {\n\t                    el[methodname].apply(el, arg);\n\t                });\n\t            };\n\t        })(method);\n\t    }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._raphael@2.2.7@raphael/raphael.js\n// module id = 542\n// module chunks = 54","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"wrapper wrapper-content\"\n  }, [_vm._m(0), _vm._v(\" \"), _vm._m(1), _vm._v(\" \"), _c('div', {\n    staticClass: \"wrapper wrapper-content\"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-8\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('h5', [_vm._v(\"Close Trade\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-tools\"\n  }, [_c('a', {\n    staticClass: \"collapse-link\",\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.collapse($event)\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-chevron-up\"\n  })])])]), _vm._v(\" \"), _vm._m(2)])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-4\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('h5', [_vm._v(\"Rank Statistics\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-tools\"\n  }, [_c('a', {\n    staticClass: \"collapse-link\",\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.collapse($event)\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-chevron-up\"\n  })])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content p-xs\"\n  }, [_c('donut-chart', {\n    attrs: {\n      \"id\": \"donut\",\n      \"data\": _vm.donutData,\n      \"colors\": \"[\\\"#ff6384\\\",\\\"#36a2eb\\\",\\\"#ffce56\\\",\\\"#000\\\"]\"\n    }\n  })], 1)])])])]), _vm._v(\" \"), _vm._m(3)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-3 col-sm-6\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('span', {\n    staticClass: \"label label-success pull-right\"\n  }, [_vm._v(\"Today\")]), _vm._v(\" \"), _c('h5', [_vm._v(\"Account\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('h1', {\n    staticClass: \"no-margins\"\n  }, [_vm._v(\"130\")]), _vm._v(\" \"), _c('small', [_vm._v(\"No.of Client\")])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-3 col-sm-6\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('span', {\n    staticClass: \"label label-info pull-right\"\n  }, [_vm._v(\"This Month\")]), _vm._v(\" \"), _c('h5', [_vm._v(\"Account\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('h1', {\n    staticClass: \"no-margins\"\n  }, [_vm._v(\"19,821\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"stat-percent font-bold text-navy\"\n  }, [_vm._v(\"120% \"), _c('i', {\n    staticClass: \"fa fa-level-up\"\n  })]), _vm._v(\" \"), _c('small', [_vm._v(\"No.of Client\")])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-3 col-sm-6\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('span', {\n    staticClass: \"label label-success pull-right\"\n  }, [_vm._v(\"Today\")]), _vm._v(\" \"), _c('h5', [_vm._v(\"Commission\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('h1', {\n    staticClass: \"no-margins\"\n  }, [_vm._v(\"6,247.80\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"stat-percent font-bold text-navy\"\n  }, [_vm._v(\"144% \"), _c('i', {\n    staticClass: \"fa fa-level-up\"\n  })]), _vm._v(\" \"), _c('small', [_vm._v(\"Commission Paid\")])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-3 col-sm-6\"\n  }, [_c('div', {\n    staticClass: \"ibox float-e-margins\"\n  }, [_c('div', {\n    staticClass: \"ibox-title\"\n  }, [_c('span', {\n    staticClass: \"label label-info pull-right\"\n  }, [_vm._v(\"This Month\")]), _vm._v(\" \"), _c('h5', [_vm._v(\"Commission\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('h1', {\n    staticClass: \"no-margins\"\n  }, [_vm._v(\"54,057.52\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"stat-percent font-bold text-danger\"\n  }, [_vm._v(\"98% \"), _c('i', {\n    staticClass: \"fa fa-level-down\"\n  })]), _vm._v(\" \"), _c('small', [_vm._v(\"Commission Paid\")])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-6 col-md-6\"\n  }, [_c('div', {\n    staticClass: \"widget style1\"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-xs-2 text-center\"\n  }, [_c('i', {\n    staticClass: \"fa fa-trophy fa-5x\"\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-xs-5 text-right\"\n  }, [_c('span', [_vm._v(\" Today Deposit \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"font-bold\"\n  }, [_vm._v(\"$ 3,300.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-xs-5 text-right\"\n  }, [_c('span', [_vm._v(\" This Month Deposit \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"font-bold\"\n  }, [_vm._v(\"$ 84,232.00\")])])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-6 col-md-6\"\n  }, [_c('div', {\n    staticClass: \"widget style1\"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-xs-2 text-center\"\n  }, [_c('i', {\n    staticClass: \"fa fa-briefcase fa-5x\"\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-xs-5 text-right\"\n  }, [_c('span', [_vm._v(\" Today Withdrawal \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"font-bold\"\n  }, [_vm._v(\"$ 1,232.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-xs-5 text-right\"\n  }, [_c('span', [_vm._v(\" This Month Withdrawal \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"font-bold\"\n  }, [_vm._v(\"$ 4,232.50\")])])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ibox-content\"\n  }, [_c('div', {\n    staticClass: \"tabs-container\"\n  }, [_c('ul', {\n    staticClass: \"nav nav-tabs\",\n    attrs: {\n      \"role\": \"tablist\"\n    }\n  }, [_c('li', {\n    staticClass: \"active\",\n    attrs: {\n      \"role\": \"presentation\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#fx-today\",\n      \"data-toggle\": \"tab\",\n      \"aria-controls\": \"fx-today\"\n    }\n  }, [_vm._v(\"FX\"), _c('small', {\n    staticClass: \"label-white-outline m-l-xs\"\n  }, [_vm._v(\"Today\")])])]), _vm._v(\" \"), _c('li', {\n    attrs: {\n      \"role\": \"presentation\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#fx-monthly\",\n      \"data-toggle\": \"tab\",\n      \"aria-controls\": \"sfx-monthly\"\n    }\n  }, [_vm._v(\"FX\"), _c('small', {\n    staticClass: \"label-white-outline m-l-xs\"\n  }, [_vm._v(\"This Month\")])])]), _vm._v(\" \"), _c('li', {\n    attrs: {\n      \"role\": \"presentation\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#bo-today\",\n      \"data-toggle\": \"tab\",\n      \"aria-controls\": \"bo-today\"\n    }\n  }, [_vm._v(\"BO\"), _c('small', {\n    staticClass: \"label-white-outline m-l-xs\"\n  }, [_vm._v(\"Today\")])])]), _vm._v(\" \"), _c('li', {\n    attrs: {\n      \"role\": \"presentation\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#bo-monthly\",\n      \"data-toggle\": \"tab\",\n      \"aria-controls\": \"bo-monthly\"\n    }\n  }, [_vm._v(\"BO\"), _c('small', {\n    staticClass: \"label-white-outline m-l-xs\"\n  }, [_vm._v(\"This Month\")])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tab-content\"\n  }, [_c('div', {\n    staticClass: \"tab-pane active\",\n    attrs: {\n      \"id\": \"fx-today\"\n    }\n  }, [_c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"row text-center\"\n  }, [_c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"USDCAD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURGBP\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"XAGUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"XAUUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"WTICrude\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"BrentCrude\")]), _c('h4', [_vm._v(\"14,560.00\")])])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tab-pane\",\n    attrs: {\n      \"id\": \"fx-monthly\"\n    }\n  }, [_c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"row text-center\"\n  }, [_c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"USDCAD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURGBP\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"XAGUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"XAUUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"WTICrude\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"BrentCrude\")]), _c('h4', [_vm._v(\"214,560.00\")])])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tab-pane\",\n    attrs: {\n      \"id\": \"bo-today\"\n    }\n  }, [_c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"row text-center\"\n  }, [_c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"USDCAD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURGBP\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDJPY\")]), _c('h4', [_vm._v(\"14,560.00\")])])])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tab-pane\",\n    attrs: {\n      \"id\": \"bo-monthly\"\n    }\n  }, [_c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"row text-center\"\n  }, [_c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"USDCAD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"NZDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURGBP\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDUSD\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"EURJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"GBPJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-sm-2 col-xs-4 m-b-xs\"\n  }, [_c('small', [_vm._v(\"AUDJPY\")]), _c('h4', [_vm._v(\"214,560.00\")])])])])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"footer\"\n  }, [_c('div', [_c('strong', [_vm._v(\"Copyright\")]), _vm._v(\" GQ capital © 2017\\n\\t\\t\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._vue-loader@12.2.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-0311cc99\"}!./~/._vue-loader@12.2.1@vue-loader/lib/selector.js?type=template&index=0!./src/components/admin/index.vue\n// module id = 562\n// module chunks = 54","define(\"VueMorris\",[],function(){return function(t){function e(r){if(i[r])return i[r].exports;var o=i[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,r){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,\"a\",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=13)}([function(t,e,i){\"use strict\";var r={toObject:function(t){return\"string\"==typeof t?JSON.parse(t):t},toBoolean:function(t){return\"string\"==typeof t?\"true\"===t:t},toInt:function(t){return\"string\"==typeof t?parseInt(t):t}};t.exports=r},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var r=i(0),o=function(t){return t&&t.__esModule?t:{default:t}}(r),n={id:{type:String,required:!0},data:{type:[String,Array],required:!0},barColors:{type:[String,Array],required:!1},xkey:{type:String,required:!1,default:\"key\"},ykeys:{type:[String,Array],required:!1,default:function(){return[\"value\"]}},labels:{type:[String,Array],required:!1,default:function(){return[\"Value\"]}},hoverCallback:{type:Function,required:!1},axes:{type:[Boolean,String],required:!1,default:!0},hideHover:{type:String,required:!1},stacked:{type:[Boolean,String],required:!1},resize:{type:[Boolean,String],required:!1},grid:{type:[Boolean,String],required:!1,default:!0},gridTextColor:{type:String,required:!1,default:\"#888\"},gridTextSize:{type:[Number,String],required:!1,default:12},gridTextFamily:{type:String,required:!1,default:\"sans-serif\"},gridTextWeight:{type:String,required:!1,default:\"normal\"},colors:{type:[String,Array],required:!1},formatter:{type:Function,required:!1},lineColors:{type:[String,Array],required:!1},xLabels:{type:String,required:!1},lineWidth:{type:[Number,String],required:!1},pointSize:{type:[Number,String],required:!1},pointFillColors:{type:[String,Array],required:!1},pointStrokeColors:{type:[String,Array],required:!1},ymax:{type:String,required:!1},ymin:{type:String,required:!1},smooth:{type:[Boolean,String],required:!1,default:!0},parseTime:{type:[Boolean,String],required:!1,default:!0},postUnits:{type:String,required:!1},preUnits:{type:String,required:!1},dateFormat:{type:Function,required:!1},xLabelFormat:{type:Function,required:!1},yLabelFormat:{type:Function,required:!1},xLabelAngle:{type:String,required:!1},goals:{type:[String,Array],required:!1},goalStrokeWidth:{type:[Number,String],required:!1},goalLineColors:{type:[String,Array],required:!1},events:{type:[String,Array],required:!1},eventStrokeWidth:{type:String,required:!1},eventLineColors:{type:[String,Array],required:!1},fillOpacity:{type:String,required:!1},behaveLikeLine:{type:[Boolean,String],required:!1,default:!1}},s={id:n.id,data:n.data,barColors:n.barColors,xkey:n.xkey,ykeys:n.ykeys,labels:n.labels,hoverCallback:n.hoverCallback,grid:n.grid,axes:n.axes,hideHover:n.hideHover,stacked:n.stacked,resize:n.resize,gridTextColor:n.gridTextColor,gridTextSize:n.gridTextSize,gridTextFamily:n.gridTextFamily,gridTextWeight:n.gridTextWeight},a={id:n.id,data:n.data,colors:n.colors,formatter:n.formatter,resize:n.resize},h={id:n.id,data:n.data,resize:n.resize,lineColors:n.lineColors,xkey:n.xkey,ykeys:n.ykeys,labels:n.labels,xLabels:n.xLabels,grid:n.grid,gridTextColor:n.gridTextColor,gridTextSize:n.gridTextSize,gridTextFamily:n.gridTextFamily,gridTextWeight:n.gridTextWeight,lineWidth:n.lineWidth,pointSize:n.pointSize,pointFillColors:n.pointFillColors,pointStrokeColors:n.pointStrokeColors,ymax:n.ymax,ymin:n.ymin,smooth:n.smooth,hideHover:n.hideHover,parseTime:n.parseTime,postUnits:n.postUnits,preUnits:n.preUnits,dateFormat:n.dateFormat,xLabelFormat:n.xLabelFormat,yLabelFormat:n.yLabelFormat,xLabelAngle:n.xLabelAngle,goals:n.goals,goalStrokeWidth:n.goalStrokeWidth,goalLineColors:n.goalLineColors,events:n.events,eventStrokeWidth:n.eventStrokeWidth,eventLineColors:n.eventLineColors,fillOpacity:n.fillOpacity,hoverCallback:n.hoverCallback},l={behaveLikeLine:n.behaveLikeLine};for(var u in h)h.hasOwnProperty(u)&&(l[u]=h[u]);var p={addOption:function(t,e){this[t]&&(e[t]=this[t])},addOptionAsObject:function(t,e){this[t]&&(e[t]=o.default.toObject(this[t]))}};e.default={bar:{props:s,methods:p},donut:{props:a,methods:p},line:{props:h,methods:p},area:{props:l,methods:p}}},function(t,e){/* @license\nmorris.js v0.5.0\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n(function(){var t,e,i,r,o=[].slice,n=function(t,e){return function(){return t.apply(e,arguments)}},s={}.hasOwnProperty,a=function(t,e){function i(){this.constructor=t}for(var r in e)s.call(e,r)&&(t[r]=e[r]);return i.prototype=e.prototype,t.prototype=new i,t.__super__=e.prototype,t},h=[].indexOf||function(t){for(var e=0,i=this.length;e<i;e++)if(e in this&&this[e]===t)return e;return-1};e=window.Morris={},t=jQuery,e.EventEmitter=function(){function t(){}return t.prototype.on=function(t,e){return null==this.handlers&&(this.handlers={}),null==this.handlers[t]&&(this.handlers[t]=[]),this.handlers[t].push(e),this},t.prototype.fire=function(){var t,e,i,r,n,s,a;if(i=arguments[0],t=2<=arguments.length?o.call(arguments,1):[],null!=this.handlers&&null!=this.handlers[i]){for(s=this.handlers[i],a=[],r=0,n=s.length;r<n;r++)e=s[r],a.push(e.apply(null,t));return a}},t}(),e.commas=function(t){var e,i,r,o;return null!=t?(r=t<0?\"-\":\"\",e=Math.abs(t),i=Math.floor(e).toFixed(0),r+=i.replace(/(?=(?:\\d{3})+$)(?!^)/g,\",\"),o=e.toString(),o.length>i.length&&(r+=o.slice(i.length)),r):\"-\"},e.pad2=function(t){return(t<10?\"0\":\"\")+t},e.Grid=function(i){function r(e){this.resizeHandler=n(this.resizeHandler,this);var i=this;if(\"string\"==typeof e.element?this.el=t(document.getElementById(e.element)):this.el=t(e.element),null==this.el||0===this.el.length)throw new Error(\"Graph container element not found\");\"static\"===this.el.css(\"position\")&&this.el.css(\"position\",\"relative\"),this.options=t.extend({},this.gridDefaults,this.defaults||{},e),\"string\"==typeof this.options.units&&(this.options.postUnits=e.units),this.raphael=new Raphael(this.el[0]),this.elementWidth=null,this.elementHeight=null,this.dirty=!1,this.selectFrom=null,this.init&&this.init(),this.setData(this.options.data),this.el.bind(\"mousemove\",function(t){var e,r,o,n,s;return r=i.el.offset(),s=t.pageX-r.left,i.selectFrom?(e=i.data[i.hitTest(Math.min(s,i.selectFrom))]._x,o=i.data[i.hitTest(Math.max(s,i.selectFrom))]._x,n=o-e,i.selectionRect.attr({x:e,width:n})):i.fire(\"hovermove\",s,t.pageY-r.top)}),this.el.bind(\"mouseleave\",function(t){return i.selectFrom&&(i.selectionRect.hide(),i.selectFrom=null),i.fire(\"hoverout\")}),this.el.bind(\"touchstart touchmove touchend\",function(t){var e,r;return r=t.originalEvent.touches[0]||t.originalEvent.changedTouches[0],e=i.el.offset(),i.fire(\"hovermove\",r.pageX-e.left,r.pageY-e.top)}),this.el.bind(\"click\",function(t){var e;return e=i.el.offset(),i.fire(\"gridclick\",t.pageX-e.left,t.pageY-e.top)}),this.options.rangeSelect&&(this.selectionRect=this.raphael.rect(0,0,0,this.el.innerHeight()).attr({fill:this.options.rangeSelectColor,stroke:!1}).toBack().hide(),this.el.bind(\"mousedown\",function(t){var e;return e=i.el.offset(),i.startRange(t.pageX-e.left)}),this.el.bind(\"mouseup\",function(t){var e;return e=i.el.offset(),i.endRange(t.pageX-e.left),i.fire(\"hovermove\",t.pageX-e.left,t.pageY-e.top)})),this.options.resize&&t(window).bind(\"resize\",function(t){return null!=i.timeoutId&&window.clearTimeout(i.timeoutId),i.timeoutId=window.setTimeout(i.resizeHandler,100)}),this.el.css(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\"),this.postInit&&this.postInit()}return a(r,i),r.prototype.gridDefaults={dateFormat:null,axes:!0,grid:!0,gridLineColor:\"#aaa\",gridStrokeWidth:.5,gridTextColor:\"#888\",gridTextSize:12,gridTextFamily:\"sans-serif\",gridTextWeight:\"normal\",hideHover:!1,yLabelFormat:null,xLabelAngle:0,numLines:5,padding:25,parseTime:!0,postUnits:\"\",preUnits:\"\",ymax:\"auto\",ymin:\"auto 0\",goals:[],goalStrokeWidth:1,goalLineColors:[\"#666633\",\"#999966\",\"#cc6666\",\"#663333\"],events:[],eventStrokeWidth:1,eventLineColors:[\"#005a04\",\"#ccffbb\",\"#3a5f0b\",\"#005502\"],rangeSelect:null,rangeSelectColor:\"#eef\",resize:!1},r.prototype.setData=function(t,i){var r,o,n,s,a,h,l,u,p,d,c,f,g,y,m;return null==i&&(i=!0),this.options.data=t,null==t||0===t.length?(this.data=[],this.raphael.clear(),void(null!=this.hover&&this.hover.hide())):(f=this.cumulative?0:null,g=this.cumulative?0:null,this.options.goals.length>0&&(a=Math.min.apply(Math,this.options.goals),s=Math.max.apply(Math,this.options.goals),g=null!=g?Math.min(g,a):a,f=null!=f?Math.max(f,s):s),this.data=function(){var i,r,s;for(s=[],n=i=0,r=t.length;i<r;n=++i)l=t[n],h={src:l},h.label=l[this.options.xkey],this.options.parseTime?(h.x=e.parseDate(h.label),this.options.dateFormat?h.label=this.options.dateFormat(h.x):\"number\"==typeof h.label&&(h.label=new Date(h.label).toString())):(h.x=n,this.options.xLabelFormat&&(h.label=this.options.xLabelFormat(h))),p=0,h.y=function(){var t,e,i,r;for(i=this.options.ykeys,r=[],o=t=0,e=i.length;t<e;o=++t)c=i[o],y=l[c],\"string\"==typeof y&&(y=parseFloat(y)),null!=y&&\"number\"!=typeof y&&(y=null),null!=y&&(this.cumulative?p+=y:null!=f?(f=Math.max(y,f),g=Math.min(y,g)):f=g=y),this.cumulative&&null!=p&&(f=Math.max(p,f),g=Math.min(p,g)),r.push(y);return r}.call(this),s.push(h);return s}.call(this),this.options.parseTime&&(this.data=this.data.sort(function(t,e){return(t.x>e.x)-(e.x>t.x)})),this.xmin=this.data[0].x,this.xmax=this.data[this.data.length-1].x,this.events=[],this.options.events.length>0&&(this.options.parseTime?this.events=function(){var t,i,o,n;for(o=this.options.events,n=[],t=0,i=o.length;t<i;t++)r=o[t],n.push(e.parseDate(r));return n}.call(this):this.events=this.options.events,this.xmax=Math.max(this.xmax,Math.max.apply(Math,this.events)),this.xmin=Math.min(this.xmin,Math.min.apply(Math,this.events))),this.xmin===this.xmax&&(this.xmin-=1,this.xmax+=1),this.ymin=this.yboundary(\"min\",g),this.ymax=this.yboundary(\"max\",f),this.ymin===this.ymax&&(g&&(this.ymin-=1),this.ymax+=1),!0!==(m=this.options.axes)&&\"both\"!==m&&\"y\"!==m&&!0!==this.options.grid||(this.options.ymax===this.gridDefaults.ymax&&this.options.ymin===this.gridDefaults.ymin?(this.grid=this.autoGridLines(this.ymin,this.ymax,this.options.numLines),this.ymin=Math.min(this.ymin,this.grid[0]),this.ymax=Math.max(this.ymax,this.grid[this.grid.length-1])):(u=(this.ymax-this.ymin)/(this.options.numLines-1),this.grid=function(){var t,e,i;for(i=[],d=t=this.ymin,e=this.ymax;u>0?t<=e:t>=e;d=t+=u)i.push(d);return i}.call(this))),this.dirty=!0,i?this.redraw():void 0)},r.prototype.yboundary=function(t,e){var i,r;return i=this.options[\"y\"+t],\"string\"==typeof i?\"auto\"===i.slice(0,4)?i.length>5?(r=parseInt(i.slice(5),10),null==e?r:Math[t](e,r)):null!=e?e:0:parseInt(i,10):i},r.prototype.autoGridLines=function(t,e,i){var r,o,n,s,a,h,l,u,p;return a=e-t,p=Math.floor(Math.log(a)/Math.log(10)),l=Math.pow(10,p),o=Math.floor(t/l)*l,r=Math.ceil(e/l)*l,h=(r-o)/(i-1),1===l&&h>1&&Math.ceil(h)!==h&&(h=Math.ceil(h),r=o+h*(i-1)),o<0&&r>0&&(o=Math.floor(t/h)*h,r=Math.ceil(e/h)*h),h<1?(s=Math.floor(Math.log(h)/Math.log(10)),n=function(){var t,e;for(e=[],u=t=o;h>0?t<=r:t>=r;u=t+=h)e.push(parseFloat(u.toFixed(1-s)));return e}()):n=function(){var t,e;for(e=[],u=t=o;h>0?t<=r:t>=r;u=t+=h)e.push(u);return e}(),n},r.prototype._calc=function(){var t,e,i,r,o,n,s,a;if(o=this.el.width(),i=this.el.height(),(this.elementWidth!==o||this.elementHeight!==i||this.dirty)&&(this.elementWidth=o,this.elementHeight=i,this.dirty=!1,this.left=this.options.padding,this.right=this.elementWidth-this.options.padding,this.top=this.options.padding,this.bottom=this.elementHeight-this.options.padding,!0!==(s=this.options.axes)&&\"both\"!==s&&\"y\"!==s||(n=function(){var t,i,r,o;for(r=this.grid,o=[],t=0,i=r.length;t<i;t++)e=r[t],o.push(this.measureText(this.yAxisFormat(e)).width);return o}.call(this),this.left+=Math.max.apply(Math,n)),!0!==(a=this.options.axes)&&\"both\"!==a&&\"x\"!==a||(t=function(){var t,e,i;for(i=[],r=t=0,e=this.data.length;0<=e?t<e:t>e;r=0<=e?++t:--t)i.push(this.measureText(this.data[r].text,-this.options.xLabelAngle).height);return i}.call(this),this.bottom-=Math.max.apply(Math,t)),this.width=Math.max(1,this.right-this.left),this.height=Math.max(1,this.bottom-this.top),this.dx=this.width/(this.xmax-this.xmin),this.dy=this.height/(this.ymax-this.ymin),this.calc))return this.calc()},r.prototype.transY=function(t){return this.bottom-(t-this.ymin)*this.dy},r.prototype.transX=function(t){return 1===this.data.length?(this.left+this.right)/2:this.left+(t-this.xmin)*this.dx},r.prototype.redraw=function(){if(this.raphael.clear(),this._calc(),this.drawGrid(),this.drawGoals(),this.drawEvents(),this.draw)return this.draw()},r.prototype.measureText=function(t,e){var i,r;return null==e&&(e=0),r=this.raphael.text(100,100,t).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).rotate(e),i=r.getBBox(),r.remove(),i},r.prototype.yAxisFormat=function(t){return this.yLabelFormat(t)},r.prototype.yLabelFormat=function(t){return\"function\"==typeof this.options.yLabelFormat?this.options.yLabelFormat(t):\"\"+this.options.preUnits+e.commas(t)+this.options.postUnits},r.prototype.drawGrid=function(){var t,e,i,r,o,n,s,a;if(!1!==this.options.grid||!0===(o=this.options.axes)||\"both\"===o||\"y\"===o){for(n=this.grid,a=[],i=0,r=n.length;i<r;i++)t=n[i],e=this.transY(t),!0!==(s=this.options.axes)&&\"both\"!==s&&\"y\"!==s||this.drawYAxisLabel(this.left-this.options.padding/2,e,this.yAxisFormat(t)),this.options.grid?a.push(this.drawGridLine(\"M\"+this.left+\",\"+e+\"H\"+(this.left+this.width))):a.push(void 0);return a}},r.prototype.drawGoals=function(){var t,e,i,r,o,n,s;for(n=this.options.goals,s=[],i=r=0,o=n.length;r<o;i=++r)e=n[i],t=this.options.goalLineColors[i%this.options.goalLineColors.length],s.push(this.drawGoal(e,t));return s},r.prototype.drawEvents=function(){var t,e,i,r,o,n,s;for(n=this.events,s=[],i=r=0,o=n.length;r<o;i=++r)e=n[i],t=this.options.eventLineColors[i%this.options.eventLineColors.length],s.push(this.drawEvent(e,t));return s},r.prototype.drawGoal=function(t,e){return this.raphael.path(\"M\"+this.left+\",\"+this.transY(t)+\"H\"+this.right).attr(\"stroke\",e).attr(\"stroke-width\",this.options.goalStrokeWidth)},r.prototype.drawEvent=function(t,e){return this.raphael.path(\"M\"+this.transX(t)+\",\"+this.bottom+\"V\"+this.top).attr(\"stroke\",e).attr(\"stroke-width\",this.options.eventStrokeWidth)},r.prototype.drawYAxisLabel=function(t,e,i){return this.raphael.text(t,e,i).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor).attr(\"text-anchor\",\"end\")},r.prototype.drawGridLine=function(t){return this.raphael.path(t).attr(\"stroke\",this.options.gridLineColor).attr(\"stroke-width\",this.options.gridStrokeWidth)},r.prototype.startRange=function(t){return this.hover.hide(),this.selectFrom=t,this.selectionRect.attr({x:t,width:0}).show()},r.prototype.endRange=function(t){var e,i;if(this.selectFrom)return i=Math.min(this.selectFrom,t),e=Math.max(this.selectFrom,t),this.options.rangeSelect.call(this.el,{start:this.data[this.hitTest(i)].x,end:this.data[this.hitTest(e)].x}),this.selectFrom=null},r.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},r}(e.EventEmitter),e.parseDate=function(t){var e,i,r,o,n,s,a,h,l,u,p;return\"number\"==typeof t?t:(i=t.match(/^(\\d+) Q(\\d)$/),o=t.match(/^(\\d+)-(\\d+)$/),n=t.match(/^(\\d+)-(\\d+)-(\\d+)$/),a=t.match(/^(\\d+) W(\\d+)$/),h=t.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),l=t.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),i?new Date(parseInt(i[1],10),3*parseInt(i[2],10)-1,1).getTime():o?new Date(parseInt(o[1],10),parseInt(o[2],10)-1,1).getTime():n?new Date(parseInt(n[1],10),parseInt(n[2],10)-1,parseInt(n[3],10)).getTime():a?(u=new Date(parseInt(a[1],10),0,1),4!==u.getDay()&&u.setMonth(0,1+(4-u.getDay()+7)%7),u.getTime()+6048e5*parseInt(a[2],10)):h?h[6]?(s=0,\"Z\"!==h[6]&&(s=60*parseInt(h[8],10)+parseInt(h[9],10),\"+\"===h[7]&&(s=0-s)),Date.UTC(parseInt(h[1],10),parseInt(h[2],10)-1,parseInt(h[3],10),parseInt(h[4],10),parseInt(h[5],10)+s)):new Date(parseInt(h[1],10),parseInt(h[2],10)-1,parseInt(h[3],10),parseInt(h[4],10),parseInt(h[5],10)).getTime():l?(p=parseFloat(l[6]),e=Math.floor(p),r=Math.round(1e3*(p-e)),l[8]?(s=0,\"Z\"!==l[8]&&(s=60*parseInt(l[10],10)+parseInt(l[11],10),\"+\"===l[9]&&(s=0-s)),Date.UTC(parseInt(l[1],10),parseInt(l[2],10)-1,parseInt(l[3],10),parseInt(l[4],10),parseInt(l[5],10)+s,e,r)):new Date(parseInt(l[1],10),parseInt(l[2],10)-1,parseInt(l[3],10),parseInt(l[4],10),parseInt(l[5],10),e,r).getTime()):new Date(parseInt(t,10),0,1).getTime())},e.Hover=function(){function i(i){null==i&&(i={}),this.options=t.extend({},e.Hover.defaults,i),this.el=t(\"<div class='\"+this.options.class+\"'></div>\"),this.el.hide(),this.options.parent.append(this.el)}return i.defaults={class:\"morris-hover morris-default-style\"},i.prototype.update=function(t,e,i){return t?(this.html(t),this.show(),this.moveTo(e,i)):this.hide()},i.prototype.html=function(t){return this.el.html(t)},i.prototype.moveTo=function(t,e){var i,r,o,n,s,a;return s=this.options.parent.innerWidth(),n=this.options.parent.innerHeight(),r=this.el.outerWidth(),i=this.el.outerHeight(),o=Math.min(Math.max(0,t-r/2),s-r),null!=e?(a=e-i-10)<0&&(a=e+10)+i>n&&(a=n/2-i/2):a=n/2-i/2,this.el.css({left:o+\"px\",top:parseInt(a)+\"px\"})},i.prototype.show=function(){return this.el.show()},i.prototype.hide=function(){return this.el.hide()},i}(),e.Line=function(t){function i(t){if(this.hilight=n(this.hilight,this),this.onHoverOut=n(this.onHoverOut,this),this.onHoverMove=n(this.onHoverMove,this),this.onGridClick=n(this.onGridClick,this),!(this instanceof e.Line))return new e.Line(t);i.__super__.constructor.call(this,t)}return a(i,t),i.prototype.init=function(){if(\"always\"!==this.options.hideHover)return this.hover=new e.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)},i.prototype.defaults={lineWidth:3,pointSize:4,lineColors:[\"#0b62a4\",\"#7A92A3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],pointStrokeWidths:[1],pointStrokeColors:[\"#ffffff\"],pointFillColors:[],smooth:!0,xLabels:\"auto\",xLabelFormat:null,xLabelMargin:24,hideHover:!1},i.prototype.calc=function(){return this.calcPoints(),this.generatePaths()},i.prototype.calcPoints=function(){var t,e,i,r,o,n;for(o=this.data,n=[],i=0,r=o.length;i<r;i++)t=o[i],t._x=this.transX(t.x),t._y=function(){var i,r,o,n;for(o=t.y,n=[],i=0,r=o.length;i<r;i++)e=o[i],null!=e?n.push(this.transY(e)):n.push(e);return n}.call(this),n.push(t._ymax=Math.min.apply(Math,[this.bottom].concat(function(){var i,r,o,n;for(o=t._y,n=[],i=0,r=o.length;i<r;i++)null!=(e=o[i])&&n.push(e);return n}())));return n},i.prototype.hitTest=function(t){var e,i,r,o,n;if(0===this.data.length)return null;for(n=this.data.slice(1),e=r=0,o=n.length;r<o&&(i=n[e],!(t<(i._x+this.data[e]._x)/2));e=++r);return e},i.prototype.onGridClick=function(t,e){var i;return i=this.hitTest(t),this.fire(\"click\",i,this.data[i].src,t,e)},i.prototype.onHoverMove=function(t,e){var i;return i=this.hitTest(t),this.displayHoverForRow(i)},i.prototype.onHoverOut=function(){if(!1!==this.options.hideHover)return this.displayHoverForRow(null)},i.prototype.displayHoverForRow=function(t){var e;return null!=t?((e=this.hover).update.apply(e,this.hoverContentForRow(t)),this.hilight(t)):(this.hover.hide(),this.hilight())},i.prototype.hoverContentForRow=function(t){var e,i,r,o,n,s,a;for(r=this.data[t],e=\"<div class='morris-hover-row-label'>\"+r.label+\"</div>\",a=r.y,i=n=0,s=a.length;n<s;i=++n)o=a[i],e+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(r,i,\"label\")+\"'>\\n  \"+this.options.labels[i]+\":\\n  \"+this.yLabelFormat(o)+\"\\n</div>\";return\"function\"==typeof this.options.hoverCallback&&(e=this.options.hoverCallback(t,this.options,e,r.src)),[e,r._x,r._ymax]},i.prototype.generatePaths=function(){var t,i,r,o;return this.paths=function(){var n,s,a,l;for(l=[],i=n=0,s=this.options.ykeys.length;0<=s?n<s:n>s;i=0<=s?++n:--n)o=\"boolean\"==typeof this.options.smooth?this.options.smooth:(a=this.options.ykeys[i],h.call(this.options.smooth,a)>=0),t=function(){var t,e,o,n;for(o=this.data,n=[],t=0,e=o.length;t<e;t++)r=o[t],void 0!==r._y[i]&&n.push({x:r._x,y:r._y[i]});return n}.call(this),t.length>1?l.push(e.Line.createPath(t,o,this.bottom)):l.push(null);return l}.call(this)},i.prototype.draw=function(){var t;if(!0!==(t=this.options.axes)&&\"both\"!==t&&\"x\"!==t||this.drawXAxis(),this.drawSeries(),!1===this.options.hideHover)return this.displayHoverForRow(this.data.length-1)},i.prototype.drawXAxis=function(){var t,i,r,o,n,s,a,h,l,u,p=this;for(a=this.bottom+this.options.padding/2,n=null,o=null,t=function(t,e){var i,r,s,h,l;return i=p.drawXAxisLabel(p.transX(e),a,t),l=i.getBBox(),i.transform(\"r\"+-p.options.xLabelAngle),r=i.getBBox(),i.transform(\"t0,\"+r.height/2+\"...\"),0!==p.options.xLabelAngle&&(h=-.5*l.width*Math.cos(p.options.xLabelAngle*Math.PI/180),i.transform(\"t\"+h+\",0...\")),r=i.getBBox(),(null==n||n>=r.x+r.width||null!=o&&o>=r.x)&&r.x>=0&&r.x+r.width<p.el.width()?(0!==p.options.xLabelAngle&&(s=1.25*p.options.gridTextSize/Math.sin(p.options.xLabelAngle*Math.PI/180),o=r.x-s),n=r.x-p.options.xLabelMargin):i.remove()},r=this.options.parseTime?1===this.data.length&&\"auto\"===this.options.xLabels?[[this.data[0].label,this.data[0].x]]:e.labelSeries(this.xmin,this.xmax,this.width,this.options.xLabels,this.options.xLabelFormat):function(){var t,e,i,r;for(i=this.data,r=[],t=0,e=i.length;t<e;t++)s=i[t],r.push([s.label,s.x]);return r}.call(this),r.reverse(),u=[],h=0,l=r.length;h<l;h++)i=r[h],u.push(t(i[0],i[1]));return u},i.prototype.drawSeries=function(){var t,e,i,r,o,n;for(this.seriesPoints=[],t=e=r=this.options.ykeys.length-1;r<=0?e<=0:e>=0;t=r<=0?++e:--e)this._drawLineFor(t);for(n=[],t=i=o=this.options.ykeys.length-1;o<=0?i<=0:i>=0;t=o<=0?++i:--i)n.push(this._drawPointFor(t));return n},i.prototype._drawPointFor=function(t){var e,i,r,o,n,s;for(this.seriesPoints[t]=[],n=this.data,s=[],r=0,o=n.length;r<o;r++)i=n[r],e=null,null!=i._y[t]&&(e=this.drawLinePoint(i._x,i._y[t],this.colorFor(i,t,\"point\"),t)),s.push(this.seriesPoints[t].push(e));return s},i.prototype._drawLineFor=function(t){var e;if(null!==(e=this.paths[t]))return this.drawLinePath(e,this.colorFor(null,t,\"line\"),t)},i.createPath=function(t,i,r){var o,n,s,a,h,l,u,p,d,c,f,g,y,m;for(u=\"\",i&&(s=e.Line.gradients(t)),p={y:null},a=y=0,m=t.length;y<m;a=++y)o=t[a],null!=o.y&&(null!=p.y?i?(n=s[a],l=s[a-1],h=(o.x-p.x)/4,d=p.x+h,f=Math.min(r,p.y+h*l),c=o.x-h,g=Math.min(r,o.y-h*n),u+=\"C\"+d+\",\"+f+\",\"+c+\",\"+g+\",\"+o.x+\",\"+o.y):u+=\"L\"+o.x+\",\"+o.y:i&&null==s[a]||(u+=\"M\"+o.x+\",\"+o.y)),p=o;return u},i.gradients=function(t){var e,i,r,o,n,s,a,h;for(i=function(t,e){return(t.y-e.y)/(t.x-e.x)},h=[],r=s=0,a=t.length;s<a;r=++s)e=t[r],null!=e.y?(o=t[r+1]||{y:null},n=t[r-1]||{y:null},null!=n.y&&null!=o.y?h.push(i(n,o)):null!=n.y?h.push(i(n,e)):null!=o.y?h.push(i(e,o)):h.push(null)):h.push(null);return h},i.prototype.hilight=function(t){var e,i,r,o,n;if(null!==this.prevHilight&&this.prevHilight!==t)for(e=i=0,o=this.seriesPoints.length-1;0<=o?i<=o:i>=o;e=0<=o?++i:--i)this.seriesPoints[e][this.prevHilight]&&this.seriesPoints[e][this.prevHilight].animate(this.pointShrinkSeries(e));if(null!==t&&this.prevHilight!==t)for(e=r=0,n=this.seriesPoints.length-1;0<=n?r<=n:r>=n;e=0<=n?++r:--r)this.seriesPoints[e][t]&&this.seriesPoints[e][t].animate(this.pointGrowSeries(e));return this.prevHilight=t},i.prototype.colorFor=function(t,e,i){return\"function\"==typeof this.options.lineColors?this.options.lineColors.call(this,t,e,i):\"point\"===i?this.options.pointFillColors[e%this.options.pointFillColors.length]||this.options.lineColors[e%this.options.lineColors.length]:this.options.lineColors[e%this.options.lineColors.length]},i.prototype.drawXAxisLabel=function(t,e,i){return this.raphael.text(t,e,i).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},i.prototype.drawLinePath=function(t,e,i){return this.raphael.path(t).attr(\"stroke\",e).attr(\"stroke-width\",this.lineWidthForSeries(i))},i.prototype.drawLinePoint=function(t,e,i,r){return this.raphael.circle(t,e,this.pointSizeForSeries(r)).attr(\"fill\",i).attr(\"stroke-width\",this.pointStrokeWidthForSeries(r)).attr(\"stroke\",this.pointStrokeColorForSeries(r))},i.prototype.pointStrokeWidthForSeries=function(t){return this.options.pointStrokeWidths[t%this.options.pointStrokeWidths.length]},i.prototype.pointStrokeColorForSeries=function(t){return this.options.pointStrokeColors[t%this.options.pointStrokeColors.length]},i.prototype.lineWidthForSeries=function(t){return this.options.lineWidth instanceof Array?this.options.lineWidth[t%this.options.lineWidth.length]:this.options.lineWidth},i.prototype.pointSizeForSeries=function(t){return this.options.pointSize instanceof Array?this.options.pointSize[t%this.options.pointSize.length]:this.options.pointSize},i.prototype.pointGrowSeries=function(t){return Raphael.animation({r:this.pointSizeForSeries(t)+3},25,\"linear\")},i.prototype.pointShrinkSeries=function(t){return Raphael.animation({r:this.pointSizeForSeries(t)},25,\"linear\")},i}(e.Grid),e.labelSeries=function(i,r,o,n,s){var a,h,l,u,p,d,c,f,g,y,m;if(l=200*(r-i)/o,h=new Date(i),void 0===(c=e.LABEL_SPECS[n]))for(m=e.AUTO_LABEL_ORDER,g=0,y=m.length;g<y;g++)if(u=m[g],d=e.LABEL_SPECS[u],l>=d.span){c=d;break}for(void 0===c&&(c=e.LABEL_SPECS.second),s&&(c=t.extend({},c,{fmt:s})),a=c.start(h),p=[];(f=a.getTime())<=r;)f>=i&&p.push([c.fmt(a),f]),c.incr(a);return p},i=function(t){return{span:60*t*1e3,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours())},fmt:function(t){return e.pad2(t.getHours())+\":\"+e.pad2(t.getMinutes())},incr:function(e){return e.setUTCMinutes(e.getUTCMinutes()+t)}}},r=function(t){return{span:1e3*t,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes())},fmt:function(t){return e.pad2(t.getHours())+\":\"+e.pad2(t.getMinutes())+\":\"+e.pad2(t.getSeconds())},incr:function(e){return e.setUTCSeconds(e.getUTCSeconds()+t)}}},e.LABEL_SPECS={decade:{span:1728e8,start:function(t){return new Date(t.getFullYear()-t.getFullYear()%10,0,1)},fmt:function(t){return\"\"+t.getFullYear()},incr:function(t){return t.setFullYear(t.getFullYear()+10)}},year:{span:1728e7,start:function(t){return new Date(t.getFullYear(),0,1)},fmt:function(t){return\"\"+t.getFullYear()},incr:function(t){return t.setFullYear(t.getFullYear()+1)}},month:{span:24192e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),1)},fmt:function(t){return t.getFullYear()+\"-\"+e.pad2(t.getMonth()+1)},incr:function(t){return t.setMonth(t.getMonth()+1)}},week:{span:6048e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())},fmt:function(t){return t.getFullYear()+\"-\"+e.pad2(t.getMonth()+1)+\"-\"+e.pad2(t.getDate())},incr:function(t){return t.setDate(t.getDate()+7)}},day:{span:864e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())},fmt:function(t){return t.getFullYear()+\"-\"+e.pad2(t.getMonth()+1)+\"-\"+e.pad2(t.getDate())},incr:function(t){return t.setDate(t.getDate()+1)}},hour:i(60),\"30min\":i(30),\"15min\":i(15),\"10min\":i(10),\"5min\":i(5),minute:i(1),\"30sec\":r(30),\"15sec\":r(15),\"10sec\":r(10),\"5sec\":r(5),second:r(1)},e.AUTO_LABEL_ORDER=[\"decade\",\"year\",\"month\",\"week\",\"day\",\"hour\",\"30min\",\"15min\",\"10min\",\"5min\",\"minute\",\"30sec\",\"15sec\",\"10sec\",\"5sec\",\"second\"],e.Area=function(i){function r(i){var n;if(!(this instanceof e.Area))return new e.Area(i);n=t.extend({},o,i),this.cumulative=!n.behaveLikeLine,\"auto\"===n.fillOpacity&&(n.fillOpacity=n.behaveLikeLine?.8:1),r.__super__.constructor.call(this,n)}var o;return a(r,i),o={fillOpacity:\"auto\",behaveLikeLine:!1},r.prototype.calcPoints=function(){var t,e,i,r,o,n,s;for(n=this.data,s=[],r=0,o=n.length;r<o;r++)t=n[r],t._x=this.transX(t.x),e=0,t._y=function(){var r,o,n,s;for(n=t.y,s=[],r=0,o=n.length;r<o;r++)i=n[r],this.options.behaveLikeLine?s.push(this.transY(i)):(e+=i||0,s.push(this.transY(e)));return s}.call(this),s.push(t._ymax=Math.max.apply(Math,t._y));return s},r.prototype.drawSeries=function(){var t,e,i,r,o,n,s,a;for(this.seriesPoints=[],e=this.options.behaveLikeLine?function(){n=[];for(var t=0,e=this.options.ykeys.length-1;0<=e?t<=e:t>=e;0<=e?t++:t--)n.push(t);return n}.apply(this):function(){s=[];for(var t=o=this.options.ykeys.length-1;o<=0?t<=0:t>=0;o<=0?t++:t--)s.push(t);return s}.apply(this),a=[],i=0,r=e.length;i<r;i++)t=e[i],this._drawFillFor(t),this._drawLineFor(t),a.push(this._drawPointFor(t));return a},r.prototype._drawFillFor=function(t){var e;if(null!==(e=this.paths[t]))return e=e+\"L\"+this.transX(this.xmax)+\",\"+this.bottom+\"L\"+this.transX(this.xmin)+\",\"+this.bottom+\"Z\",this.drawFilledPath(e,this.fillForSeries(t))},r.prototype.fillForSeries=function(t){var e;return e=Raphael.rgb2hsl(this.colorFor(this.data[t],t,\"line\")),Raphael.hsl(e.h,this.options.behaveLikeLine?.9*e.s:.75*e.s,Math.min(.98,this.options.behaveLikeLine?1.2*e.l:1.25*e.l))},r.prototype.drawFilledPath=function(t,e){return this.raphael.path(t).attr(\"fill\",e).attr(\"fill-opacity\",this.options.fillOpacity).attr(\"stroke\",\"none\")},r}(e.Line),e.Bar=function(i){function r(i){if(this.onHoverOut=n(this.onHoverOut,this),this.onHoverMove=n(this.onHoverMove,this),this.onGridClick=n(this.onGridClick,this),!(this instanceof e.Bar))return new e.Bar(i);r.__super__.constructor.call(this,t.extend({},i,{parseTime:!1}))}return a(r,i),r.prototype.init=function(){if(this.cumulative=this.options.stacked,\"always\"!==this.options.hideHover)return this.hover=new e.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)},r.prototype.defaults={barSizeRatio:.75,barGap:3,barColors:[\"#0b62a4\",\"#7a92a3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],barOpacity:1,barRadius:[0,0,0,0],xLabelMargin:50},r.prototype.calc=function(){var t;if(this.calcBars(),!1===this.options.hideHover)return(t=this.hover).update.apply(t,this.hoverContentForRow(this.data.length-1))},r.prototype.calcBars=function(){var t,e,i,r,o,n,s;for(n=this.data,s=[],t=r=0,o=n.length;r<o;t=++r)e=n[t],e._x=this.left+this.width*(t+.5)/this.data.length,s.push(e._y=function(){var t,r,o,n;for(o=e.y,n=[],t=0,r=o.length;t<r;t++)i=o[t],null!=i?n.push(this.transY(i)):n.push(null);return n}.call(this));return s},r.prototype.draw=function(){var t;return!0!==(t=this.options.axes)&&\"both\"!==t&&\"x\"!==t||this.drawXAxis(),this.drawSeries()},r.prototype.drawXAxis=function(){var t,e,i,r,o,n,s,a,h,l,u,p,d;for(l=this.bottom+(this.options.xAxisLabelTopPadding||this.options.padding/2),s=null,n=null,d=[],t=u=0,p=this.data.length;0<=p?u<p:u>p;t=0<=p?++u:--u)a=this.data[this.data.length-1-t],e=this.drawXAxisLabel(a._x,l,a.label),h=e.getBBox(),e.transform(\"r\"+-this.options.xLabelAngle),i=e.getBBox(),e.transform(\"t0,\"+i.height/2+\"...\"),0!==this.options.xLabelAngle&&(o=-.5*h.width*Math.cos(this.options.xLabelAngle*Math.PI/180),e.transform(\"t\"+o+\",0...\")),(null==s||s>=i.x+i.width||null!=n&&n>=i.x)&&i.x>=0&&i.x+i.width<this.el.width()?(0!==this.options.xLabelAngle&&(r=1.25*this.options.gridTextSize/Math.sin(this.options.xLabelAngle*Math.PI/180),n=i.x-r),d.push(s=i.x-this.options.xLabelMargin)):d.push(e.remove());return d},r.prototype.drawSeries=function(){var t,e,i,r,o,n,s,a,h,l,u,p,d,c,f;return i=this.width/this.options.data.length,a=this.options.stacked?1:this.options.ykeys.length,t=(i*this.options.barSizeRatio-this.options.barGap*(a-1))/a,this.options.barSize&&(t=Math.min(t,this.options.barSize)),p=i-t*a-this.options.barGap*(a-1),s=p/2,f=this.ymin<=0&&this.ymax>=0?this.transY(0):null,this.bars=function(){var a,p,g,y;for(g=this.data,y=[],r=a=0,p=g.length;a<p;r=++a)h=g[r],o=0,y.push(function(){var a,p,g,y;for(g=h._y,y=[],l=a=0,p=g.length;a<p;l=++a)c=g[l],null!==c?(f?(d=Math.min(c,f),e=Math.max(c,f)):(d=c,e=this.bottom),n=this.left+r*i+s,this.options.stacked||(n+=l*(t+this.options.barGap)),u=e-d,this.options.verticalGridCondition&&this.options.verticalGridCondition(h.x)&&this.drawBar(this.left+r*i,this.top,i,Math.abs(this.top-this.bottom),this.options.verticalGridColor,this.options.verticalGridOpacity,this.options.barRadius),this.options.stacked&&(d-=o),this.drawBar(n,d,t,u,this.colorFor(h,l,\"bar\"),this.options.barOpacity,this.options.barRadius),y.push(o+=u)):y.push(null);return y}.call(this));return y}.call(this)},r.prototype.colorFor=function(t,e,i){var r,o;return\"function\"==typeof this.options.barColors?(r={x:t.x,y:t.y[e],label:t.label},o={index:e,key:this.options.ykeys[e],label:this.options.labels[e]},this.options.barColors.call(this,r,o,i)):this.options.barColors[e%this.options.barColors.length]},r.prototype.hitTest=function(t){return 0===this.data.length?null:(t=Math.max(Math.min(t,this.right),this.left),Math.min(this.data.length-1,Math.floor((t-this.left)/(this.width/this.data.length))))},r.prototype.onGridClick=function(t,e){var i;return i=this.hitTest(t),this.fire(\"click\",i,this.data[i].src,t,e)},r.prototype.onHoverMove=function(t,e){var i,r;return i=this.hitTest(t),(r=this.hover).update.apply(r,this.hoverContentForRow(i))},r.prototype.onHoverOut=function(){if(!1!==this.options.hideHover)return this.hover.hide()},r.prototype.hoverContentForRow=function(t){var e,i,r,o,n,s,a,h;for(r=this.data[t],e=\"<div class='morris-hover-row-label'>\"+r.label+\"</div>\",h=r.y,i=s=0,a=h.length;s<a;i=++s)n=h[i],e+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(r,i,\"label\")+\"'>\\n  \"+this.options.labels[i]+\":\\n  \"+this.yLabelFormat(n)+\"\\n</div>\";return\"function\"==typeof this.options.hoverCallback&&(e=this.options.hoverCallback(t,this.options,e,r.src)),o=this.left+(t+.5)*this.width/this.data.length,[e,o]},r.prototype.drawXAxisLabel=function(t,e,i){return this.raphael.text(t,e,i).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},r.prototype.drawBar=function(t,e,i,r,o,n,s){var a,h;return a=Math.max.apply(Math,s),h=0===a||a>r?this.raphael.rect(t,e,i,r):this.raphael.path(this.roundedRect(t,e,i,r,s)),h.attr(\"fill\",o).attr(\"fill-opacity\",n).attr(\"stroke\",\"none\")},r.prototype.roundedRect=function(t,e,i,r,o){return null==o&&(o=[0,0,0,0]),[\"M\",t,o[0]+e,\"Q\",t,e,t+o[0],e,\"L\",t+i-o[1],e,\"Q\",t+i,e,t+i,e+o[1],\"L\",t+i,e+r-o[2],\"Q\",t+i,e+r,t+i-o[2],e+r,\"L\",t+o[3],e+r,\"Q\",t,e+r,t,e+r-o[3],\"Z\"]},r}(e.Grid),e.Donut=function(i){function r(i){this.resizeHandler=n(this.resizeHandler,this),this.select=n(this.select,this),this.click=n(this.click,this);var r=this;if(!(this instanceof e.Donut))return new e.Donut(i);if(this.options=t.extend({},this.defaults,i),\"string\"==typeof i.element?this.el=t(document.getElementById(i.element)):this.el=t(i.element),null===this.el||0===this.el.length)throw new Error(\"Graph placeholder not found.\");void 0!==i.data&&0!==i.data.length&&(this.raphael=new Raphael(this.el[0]),this.options.resize&&t(window).bind(\"resize\",function(t){return null!=r.timeoutId&&window.clearTimeout(r.timeoutId),r.timeoutId=window.setTimeout(r.resizeHandler,100)}),this.setData(i.data))}return a(r,i),r.prototype.defaults={colors:[\"#0B62A4\",\"#3980B5\",\"#679DC6\",\"#95BBD7\",\"#B0CCE1\",\"#095791\",\"#095085\",\"#083E67\",\"#052C48\",\"#042135\"],backgroundColor:\"#FFFFFF\",labelColor:\"#000000\",formatter:e.commas,resize:!1},r.prototype.redraw=function(){var t,i,r,o,n,s,a,h,l,u,p,d,c,f,g,y,m,v,x,b,w,S,k;for(this.raphael.clear(),i=this.el.width()/2,r=this.el.height()/2,c=(Math.min(i,r)-10)/3,p=0,b=this.values,f=0,m=b.length;f<m;f++)d=b[f],p+=d;for(h=5/(2*c),t=1.9999*Math.PI-h*this.data.length,s=0,n=0,this.segments=[],w=this.values,o=g=0,v=w.length;g<v;o=++g)d=w[o],l=s+h+t*(d/p),u=new e.DonutSegment(i,r,2*c,c,s,l,this.data[o].color||this.options.colors[n%this.options.colors.length],this.options.backgroundColor,n,this.raphael),u.render(),this.segments.push(u),u.on(\"hover\",this.select),u.on(\"click\",this.click),s=l,n+=1;for(this.text1=this.drawEmptyDonutLabel(i,r-10,this.options.labelColor,15,800),this.text2=this.drawEmptyDonutLabel(i,r+10,this.options.labelColor,14),a=Math.max.apply(Math,this.values),n=0,S=this.values,k=[],y=0,x=S.length;y<x;y++){if((d=S[y])===a){this.select(n);break}k.push(n+=1)}return k},r.prototype.setData=function(t){var e;return this.data=t,this.values=function(){var t,i,r,o;for(r=this.data,o=[],t=0,i=r.length;t<i;t++)e=r[t],o.push(parseFloat(e.value));return o}.call(this),this.redraw()},r.prototype.click=function(t){return this.fire(\"click\",t,this.data[t])},r.prototype.select=function(t){var e,i,r,o,n,s;for(s=this.segments,o=0,n=s.length;o<n;o++)i=s[o],i.deselect();return r=this.segments[t],r.select(),e=this.data[t],this.setLabels(e.label,this.options.formatter(e.value,e))},r.prototype.setLabels=function(t,e){var i,r,o,n,s,a,h,l;return i=2*(Math.min(this.el.width()/2,this.el.height()/2)-10)/3,n=1.8*i,o=i/2,r=i/3,this.text1.attr({text:t,transform:\"\"}),s=this.text1.getBBox(),a=Math.min(n/s.width,o/s.height),this.text1.attr({transform:\"S\"+a+\",\"+a+\",\"+(s.x+s.width/2)+\",\"+(s.y+s.height)}),this.text2.attr({text:e,transform:\"\"}),h=this.text2.getBBox(),l=Math.min(n/h.width,r/h.height),this.text2.attr({transform:\"S\"+l+\",\"+l+\",\"+(h.x+h.width/2)+\",\"+h.y})},r.prototype.drawEmptyDonutLabel=function(t,e,i,r,o){var n;return n=this.raphael.text(t,e,\"\").attr(\"font-size\",r).attr(\"fill\",i),null!=o&&n.attr(\"font-weight\",o),n},r.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},r}(e.EventEmitter),e.DonutSegment=function(t){function e(t,e,i,r,o,s,a,h,l,u){this.cx=t,this.cy=e,this.inner=i,this.outer=r,this.color=a,this.backgroundColor=h,this.index=l,this.raphael=u,this.deselect=n(this.deselect,this),this.select=n(this.select,this),this.sin_p0=Math.sin(o),this.cos_p0=Math.cos(o),this.sin_p1=Math.sin(s),this.cos_p1=Math.cos(s),this.is_long=s-o>Math.PI?1:0,this.path=this.calcSegment(this.inner+3,this.inner+this.outer-5),this.selectedPath=this.calcSegment(this.inner+3,this.inner+this.outer),this.hilight=this.calcArc(this.inner)}return a(e,t),e.prototype.calcArcPoints=function(t){return[this.cx+t*this.sin_p0,this.cy+t*this.cos_p0,this.cx+t*this.sin_p1,this.cy+t*this.cos_p1]},e.prototype.calcSegment=function(t,e){var i,r,o,n,s,a,h,l,u,p;return u=this.calcArcPoints(t),i=u[0],o=u[1],r=u[2],n=u[3],p=this.calcArcPoints(e),s=p[0],h=p[1],a=p[2],l=p[3],\"M\"+i+\",\"+o+\"A\"+t+\",\"+t+\",0,\"+this.is_long+\",0,\"+r+\",\"+n+\"L\"+a+\",\"+l+\"A\"+e+\",\"+e+\",0,\"+this.is_long+\",1,\"+s+\",\"+h+\"Z\"},e.prototype.calcArc=function(t){var e,i,r,o,n;return n=this.calcArcPoints(t),e=n[0],r=n[1],i=n[2],o=n[3],\"M\"+e+\",\"+r+\"A\"+t+\",\"+t+\",0,\"+this.is_long+\",0,\"+i+\",\"+o},e.prototype.render=function(){var t=this;return this.arc=this.drawDonutArc(this.hilight,this.color),this.seg=this.drawDonutSegment(this.path,this.color,this.backgroundColor,function(){return t.fire(\"hover\",t.index)},function(){return t.fire(\"click\",t.index)})},e.prototype.drawDonutArc=function(t,e){return this.raphael.path(t).attr({stroke:e,\"stroke-width\":2,opacity:0})},e.prototype.drawDonutSegment=function(t,e,i,r,o){return this.raphael.path(t).attr({fill:e,stroke:i,\"stroke-width\":3}).hover(r).click(o)},e.prototype.select=function(){if(!this.selected)return this.seg.animate({path:this.selectedPath},150,\"<>\"),this.arc.animate({opacity:1},150,\"<>\"),this.selected=!0},e.prototype.deselect=function(){if(this.selected)return this.seg.animate({path:this.path},150,\"<>\"),this.arc.animate({opacity:0},150,\"<>\"),this.selected=!1},e}(e.EventEmitter)}).call(this)},function(t,e){t.exports=function(t,e,i,r){var o,n=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(o=t,n=t.default);var a=\"function\"==typeof n?n.options:n;if(e&&(a.render=e.render,a.staticRenderFns=e.staticRenderFns),i&&(a._scopeId=i),r){var h=a.computed||(a.computed={});Object.keys(r).forEach(function(t){var e=r[t];h[t]=function(){return e}})}return{esModule:o,exports:n,options:a}}},function(t,e,i){var r=i(14);\"string\"==typeof r&&(r=[[t.i,r,\"\"]]);i(20)(r,{});r.locals&&(t.exports=r.locals)},function(t,e,i){var r=i(3)(i(9),i(16),null,null);t.exports=r.exports},function(t,e,i){var r=i(3)(i(10),i(18),null,null);t.exports=r.exports},function(t,e,i){var r=i(3)(i(11),i(19),null,null);t.exports=r.exports},function(t,e,i){var r=i(3)(i(12),i(17),null,null);t.exports=r.exports},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0}),i(2),i(4);var o=i(0),n=r(o),s=i(1),a=r(s);e.default={name:\"area-chart\",mixins:[a.default.area],data:function(){return{chart:null}},watch:{data:function(t){var e=this;this.$nextTick(function(){e.chart.setData(n.default.toObject(e.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize),labels:n.default.toObject(this.labels),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize,ymax:this.ymax,ymin:this.ymin,smooth:n.default.toBoolean(this.smooth),hideHover:this.hideHover,parseTime:n.default.toBoolean(this.parseTime),postUnits:this.postUnits,preUnits:this.preUnits,xLabelAngle:this.xLabelAngle,goalStrokeWidth:this.goalStrokeWidth,eventStrokeWidth:this.eventStrokeWidth,fillOpacity:this.fillOpacity,behaveLikeLine:this.behaveLikeLine};this.addOptionAsObject(\"lineColors\",t),this.addOption(\"xLabels\",t),this.addOptionAsObject(\"pointFillColors\",t),this.addOptionAsObject(\"pointStrokeColors\",t),this.addOption(\"dateFormat\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOptionAsObject(\"goals\",t),this.addOptionAsObject(\"goalLineColors\",t),this.addOptionAsObject(\"events\",t),this.addOptionAsObject(\"eventLineColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Area(t)}}},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0}),i(2),i(4);var o=i(0),n=r(o),s=i(1),a=r(s);e.default={name:\"bar-chart\",mixins:[a.default.bar],data:function(){return{chart:null}},watch:{data:function(t){var e=this;this.$nextTick(function(){e.chart.setData(e.data)})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),labels:n.default.toObject(this.labels),resize:n.default.toBoolean(this.resize),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),axes:n.default.toBoolean(this.axes),hideHover:this.hideHover,stacked:n.default.toBoolean(this.stacked),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize};this.addOptionAsObject(\"barColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Bar(t)}}},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0}),i(2),i(4);var o=i(0),n=r(o),s=i(1),a=r(s);e.default={name:\"donut-chart\",mixins:[a.default.donut],data:function(){return{chart:null}},watch:{data:function(t){var e=this;this.$nextTick(function(){e.chart.setData(n.default.toObject(e.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize)};this.addOptionAsObject(\"colors\",t),this.addOption(\"formatter\",t),this.chart=Morris.Donut(t)}}},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0}),i(2),i(4);var o=i(0),n=r(o),s=i(1),a=r(s);e.default={name:\"line-chart\",mixins:[a.default.line],data:function(){return{chart:null}},watch:{data:function(t){var e=this;this.$nextTick(function(){e.chart.setData(n.default.toObject(e.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize),labels:n.default.toObject(this.labels),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize,ymax:this.ymax,ymin:this.ymin,smooth:n.default.toBoolean(this.smooth),hideHover:this.hideHover,parseTime:n.default.toBoolean(this.parseTime),postUnits:this.postUnits,preUnits:this.preUnits,xLabelAngle:this.xLabelAngle,goalStrokeWidth:this.goalStrokeWidth,eventStrokeWidth:this.eventStrokeWidth,fillOpacity:this.fillOpacity};this.addOptionAsObject(\"lineColors\",t),this.addOption(\"xLabels\",t),this.addOptionAsObject(\"pointFillColors\",t),this.addOptionAsObject(\"pointStrokeColors\",t),this.addOption(\"dateFormat\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOptionAsObject(\"goals\",t),this.addOptionAsObject(\"goalLineColors\",t),this.addOptionAsObject(\"events\",t),this.addOptionAsObject(\"eventLineColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Line(t)}}},function(t,e,i){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}var o=i(7),n=r(o),s=i(6),a=r(s),h=i(8),l=r(h),u=i(5),p=r(u),d={DonutChart:n.default,BarChart:a.default,LineChart:l.default,AreaChart:p.default};t.exports=d},function(t,e,i){e=t.exports=i(15)(),e.push([t.i,\".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}\",\"\"])},function(t,e){t.exports=function(){var t=[];return t.toString=function(){for(var t=[],e=0;e<this.length;e++){var i=this[e];i[2]?t.push(\"@media \"+i[2]+\"{\"+i[1]+\"}\"):t.push(i[1])}return t.join(\"\")},t.i=function(e,i){\"string\"==typeof e&&(e=[[null,e,\"\"]]);for(var r={},o=0;o<this.length;o++){var n=this[o][0];\"number\"==typeof n&&(r[n]=!0)}for(o=0;o<e.length;o++){var s=e[o];\"number\"==typeof s[0]&&r[s[0]]||(i&&!s[2]?s[2]=i:i&&(s[2]=\"(\"+s[2]+\") and (\"+i+\")\"),t.push(s))}},t}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,e){function i(t,e){for(var i=0;i<t.length;i++){var r=t[i],o=u[r.id];if(o){o.refs++;for(var n=0;n<o.parts.length;n++)o.parts[n](r.parts[n]);for(;n<r.parts.length;n++)o.parts.push(a(r.parts[n],e))}else{for(var s=[],n=0;n<r.parts.length;n++)s.push(a(r.parts[n],e));u[r.id]={id:r.id,refs:1,parts:s}}}}function r(t){for(var e=[],i={},r=0;r<t.length;r++){var o=t[r],n=o[0],s=o[1],a=o[2],h=o[3],l={css:s,media:a,sourceMap:h};i[n]?i[n].parts.push(l):e.push(i[n]={id:n,parts:[l]})}return e}function o(t,e){var i=c(),r=y[y.length-1];if(\"top\"===t.insertAt)r?r.nextSibling?i.insertBefore(e,r.nextSibling):i.appendChild(e):i.insertBefore(e,i.firstChild),y.push(e);else{if(\"bottom\"!==t.insertAt)throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");i.appendChild(e)}}function n(t){t.parentNode.removeChild(t);var e=y.indexOf(t);e>=0&&y.splice(e,1)}function s(t){var e=document.createElement(\"style\");return e.type=\"text/css\",o(t,e),e}function a(t,e){var i,r,o;if(e.singleton){var a=g++;i=f||(f=s(e)),r=h.bind(null,i,a,!1),o=h.bind(null,i,a,!0)}else i=s(e),r=l.bind(null,i),o=function(){n(i)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}function h(t,e,i,r){var o=i?\"\":r.css;if(t.styleSheet)t.styleSheet.cssText=m(e,o);else{var n=document.createTextNode(o),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(n,s[e]):t.appendChild(n)}}function l(t,e){var i=e.css,r=e.media,o=e.sourceMap;if(r&&t.setAttribute(\"media\",r),o&&(i+=\"\\n/*# sourceURL=\"+o.sources[0]+\" */\",i+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+\" */\"),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}var u={},p=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}},d=p(function(){return/msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase())}),c=p(function(){return document.head||document.getElementsByTagName(\"head\")[0]}),f=null,g=0,y=[];t.exports=function(t,e){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");e=e||{},void 0===e.singleton&&(e.singleton=d()),void 0===e.insertAt&&(e.insertAt=\"bottom\");var o=r(t);return i(o,e),function(t){for(var n=[],s=0;s<o.length;s++){var a=o[s],h=u[a.id];h.refs--,n.push(h)}if(t){i(r(t),e)}for(var s=0;s<n.length;s++){var h=n[s];if(0===h.refs){for(var l=0;l<h.parts.length;l++)h.parts[l]();delete u[h.id]}}}};var m=function(){var t=[];return function(e,i){return t[e]=i,t.filter(Boolean).join(\"\\n\")}}()}])});\n//# sourceMappingURL=vue-morris.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._vue-morris@0.0.8@vue-morris/dist/vue-morris.min.js\n// module id = 633\n// module chunks = 54"],"sourceRoot":""}